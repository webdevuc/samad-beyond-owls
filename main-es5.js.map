{"version":3,"sources":["webpack:///src/app/components/owly-bird/owly-bird.component.html","webpack:///src/app/components/owly-bird/owly-bird.component.ts","webpack:///src/app/components/coin-details/coin-corelation/coin-corelation.component.ts","webpack:///src/app/components/coin-details/coin-corelation/coin-corelation.component.html","webpack:///src/app/components/coin-details/coin-details.component.html","webpack:///src/app/components/coin-details/coin-details.component.ts","webpack:///src/app/components/info/info.component.ts","webpack:///src/app/components/info/info.component.html","webpack:///buffer (ignored)","webpack:///src/app/components/dashboard/personal/personal.component.html","webpack:///src/app/components/dashboard/personal/personal.component.ts","webpack:///src/app/services/loader.service.ts","webpack:///src/app/components/launch-timer-dialog/launch-timer-dialog.component.ts","webpack:///src/app/components/launch-timer-dialog/launch-timer-dialog.component.html","webpack:///src/app/components/tokeninfo/tokeninfo.component.ts","webpack:///src/app/components/tokeninfo/tokeninfo.component.html","webpack:///src/app/components/tokenstats/tokenstats.component.ts","webpack:///src/app/components/tokenstats/tokenstats.component.html","webpack:///src/app/helper/spinner/spinner.service.ts","webpack:///src/app/helper/spinner/spinner.component.html","webpack:///src/app/helper/spinner/spinner.component.ts","webpack:///src/app/services/grise-token-contract.service.ts","webpack:///src/app/pipes/account-no.pipe.ts","webpack:///src/app/models/personal-stake-data.ts","webpack:///src/app/services/staking-token-contract.service.ts","webpack:///src/app/components/mergepopup/mergepopup.component.html","webpack:///src/app/components/mergepopup/mergepopup.component.ts","webpack:///src/environments/environment.ts","webpack:///src/app/helper/confirm-dialog/confirm-dialog.component.ts","webpack:///src/app/helper/confirm-dialog/confirm-dialog.component.html","webpack:///src/app/components/dialog/dialog.component.ts","webpack:///src/app/components/dialog/dialog.component.html","webpack:///src/app/components/my-nfts/my-nfts.component.html","webpack:///src/app/components/my-nfts/my-nfts.component.ts","webpack:///src/app/components/home/home.component.ts","webpack:///src/app/components/home/home.component.html","webpack:///src/app/components/trippy-owl-detail/trippy-owl-detail.component.ts","webpack:///src/app/components/trippy-owl-detail/trippy-owl-detail.component.html","webpack:///src/app/models/nft-content-data.ts","webpack:///src/app/components/coin-details/coin-technical-analysis/coin-technical-analysis.component.ts","webpack:///src/app/components/coin-details/coin-technical-analysis/coin-technical-analysis.component.html","webpack:///src/app/components/adminpanel/adminpanel.component.html","webpack:///src/app/components/adminpanel/adminpanel.component.ts","webpack:///src/app/interceptors/loader-interceptor.service.ts","webpack:///src/app/components/reservation/reservation.component.ts","webpack:///src/app/components/reservation/reservation.component.html","webpack:///src/app/services/nami-loader.service.ts","webpack:///src/app/components/token-metrix/token-metrix.component.html","webpack:///src/app/components/token-metrix/token-metrix.component.ts","webpack:///src/app/services/minabi-data-contract.service.ts","webpack:///src/app/components/coin-details/coin-tweets/coin-tweets.component.ts","webpack:///src/app/components/coin-details/coin-tweets/coin-tweets.component.html","webpack:///src/app/components/dashboard/dashboard.component.ts","webpack:///src/app/components/dashboard/dashboard.component.html","webpack:///src/app/components/coin-details/coin-market/coin-market.component.ts","webpack:///src/app/components/coin-details/coin-market/coin-market.component.html","webpack:///src/app/components/coin-details/google-trends/google-trends.component.ts","webpack:///src/app/components/coin-details/google-trends/google-trends.component.html","webpack:///src/app/services/liquidity-contract.service.ts","webpack:///src/app/components/coin-details/coin-prediction/coin-prediction.component.ts","webpack:///src/app/components/coin-details/coin-prediction/coin-prediction.component.html","webpack:///src/app/components/dashboard/refund-history/refund-history.component.ts","webpack:///src/app/components/dashboard/refund-history/refund-history.component.html","webpack:///src/app/components/connect-wallet-dialog/connect-wallet-dialog.component.ts","webpack:///src/app/components/connect-wallet-dialog/connect-wallet-dialog.component.html","webpack:///src/app/components/coming-soon/coming-soon.component.ts","webpack:///src/app/components/coming-soon/coming-soon.component.html","webpack:///node_modules/moment/locale sync ^\\.\\/.*$","webpack:///src/app/components/sell-form/sell-form.component.html","webpack:///src/app/components/sell-form/sell-form.component.ts","webpack:///src/app/services/local-data-update.service.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.component.ts","webpack:///src/packages/nami-js/nami.js","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/login/login.component.html","webpack:///src/packages/nami-js/coinSelection.js","webpack:///src/app/components/dashboard/reward/reward.component.html","webpack:///src/app/components/dashboard/reward/reward.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/services/nami-minting-243.service.ts","webpack:///src/app/components/roadmap/roadmap.component.ts","webpack:///src/app/components/roadmap/roadmap.component.html","webpack:///src/app/components/nft-collection/nft-collection.component.html","webpack:///src/app/components/nft-collection/nft-collection.component.ts","webpack:///src/app/components/dashboard/liquidity/liquidity.component.ts","webpack:///src/app/components/dashboard/liquidity/liquidity.component.html","webpack:///src/app/components/coin-details/coin-summary/coin-summary.component.ts","webpack:///src/app/components/coin-details/coin-summary/coin-summary.component.html","webpack:///src/app/components/tokenstats/token-data/token-data.component.html","webpack:///src/app/components/tokenstats/token-data/token-data.component.ts","webpack:///src/app/components/nft/nft.component.html","webpack:///src/app/components/nft/nft.component.ts","webpack:///src/app/components/tokenstats/staking/staking.component.html","webpack:///src/app/components/tokenstats/staking/staking.component.ts","webpack:///src/app/components/sentiment-analysis/sentiment-analysis.component.html","webpack:///src/app/components/sentiment-analysis/sentiment-analysis.component.ts","webpack:///src/app/services/nft.service.ts","webpack:///src/app/models/slot-data.ts","webpack:///src/app/components/my-loader/my-loader.component.ts","webpack:///src/app/components/my-loader/my-loader.component.html","webpack:///src/app/services/contract.service.ts","webpack:///src/app/components/tokeninfo/referral-link-dialog/referral-link-dialog.component.ts","webpack:///src/app/components/tokeninfo/referral-link-dialog/referral-link-dialog.component.html","webpack:///src/app/components/moonverse/moonverse.component.html","webpack:///src/app/components/moonverse/moonverse.component.ts","webpack:///src/app/services/graph-data.service.ts","webpack:///src/app/models/nft-content-group-data.ts","webpack:///src/app/models/personal-period-stake-setup.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/packages/nami-js/loader.js","webpack:///src/app/shared/mata-mask-button/mata-mask-button.component.html","webpack:///src/app/shared/mata-mask-button/mata-mask-button.component.ts","webpack:///src/app/components/landing-page/landing-page.component.html","webpack:///src/app/components/landing-page/landing-page.component.ts","webpack:///src/app/services/refund-contract.service.ts","webpack:///src/app/components/dashboard/referrals/referrals.component.ts","webpack:///src/app/components/dashboard/referrals/referrals.component.html","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/services/shared.service.ts"],"names":["OwlybirdComponent","hideleftside","zeroWidth","hideArrow","hideSideBar","CoinCorelationComponent","http","highcharts","Coins","CoinDetails","CorrelateCoinDetails","PValue","CorrelationValue","Coin","CorrelateCoin","CorrelationGraph","chart","backgroundColor","rangeSelector","buttonTheme","fill","stroke","r","style","color","fontWeight","states","hover","select","inputStyle","labelStyle","title","text","yAxis","labels","align","x","height","resize","enabled","top","offset","tooltip","split","series","type","name","data","get","subscribe","Response","resSTR","JSON","stringify","resJSON","parse","code","coinName","correlateCoin","headers","params","responseType","toPromise","then","details","p_value","correlation","toFixed","query_detail","corr_with_detail","legend","itemStyle","itemHoverStyle","query","corr_with","getCoinCorrelation","getCoins","web3","window","CoinDetailsComponent","contractService","allowed_user","lcladdress","ethereum","Web3","enable","promise","eth","getAccounts","error","accounts","account","address","getContractObject","stakingTokenContract","methods","isStaker","call","stakeCounts","e","console","log","InfoComponent","PersonalComponent","sharedService","localDataUpdateService","stakingTokenContractService","griseTokenContractService","minAbiDataContractService","toastr","isLogin","accountNo","totalBalance","refAccountNo","griseBalance","currentLPDay","weekly","monthly","yearly","stakeTransactions","pageNo","perPageRecords","reachMaxRecords","weeklyDaysLeft","weeklyDaysProgress","monthlyDaysLeft","monthlyDaysProgress","etherExchangeRate","regularRate","reverseRate","reverseRateWithoutDecimal","timeToClaimWeeklyReward","timeToClaimMonthlyReward","isStakeTransactionsDataUpdated","getStakeTransactions","updatePersonalPeriodStakeSlotLeft","isPersonalPeriodStakeSlotLeftDataUpdated","assignStakeSetup","isStakePaginationDataUpdated","stakeId","updateStakeDataById","reset","weeklyPeriodStake","getPeriodStake","yearlyPeriodStake","monthlyPeriodStake","periodValue","toString","stakeValue","slotLeft","stakeStep","selectedPeriod","periodType","additionalValue","foundPeriodStake","allPersonalPeriodStakes","filter","val","length","incrementDecrement","plusMinus","validateMinMaxValues","currentValue","stakeSetting","griseValidationText","selectedStakeData","getSelectedValues","undefined","totalGriseBalance","ethValidationText","ethAmount","getEthAmountFromGrise","stakeType","days","checkValueWithGriseBalance","createStakeGrise","checkValueWithEthBalance","etherLargeAmount","getEthLargeAmountFromGrise","createStakeWithETH","tokenAmount","etherAmount","pageStartRecord","getStakesPagination","stakeIds","forEach","existStakeTransaction","s","push","Promise","all","map","checkStakeByID","stakeBasicData","checkStakeRewards","stakeRewardData","newStakeTransactions","stakeCreatedOn","getDateAdd","launchTime","startDay","stakeLockUpOn","finalDay","currentDay","getDateDiff","Date","lockDays","stakeLockUpDaysLeft","stakeProgress","stakeTypeName","scrapeDay","stakeScrapeOn","closeDay","stakeCloseOn","stakeTransaction","scrapeReward","penaltyRewardAmount","transcRewardAmount","reservoirRewardAmount","inflationRewardAmount","totalScrapeReward","getTotalScrapeReward","checkScarpeReward","haveMultiReward","dialogType","transaction","endStake","event","forceUpdateDialogData","refetchBalance","afterConnectToWallet","Error","connectToWallet","getGriseBalance","assignGlobalValues","isContractLoadOnNetwork","toastrService","success","router","navigate","onTabClick","changePeriodStake","decrement","increment","createGriseStake","onConfirm","LoaderService","isLoading","LaunchTimerDialogComponent","launchOn","launchTimeStamp","launchTimer","timeLeft","getTimeLeft","intervalId","setInterval","closebutton","nativeElement","click","clearInterval","TokeninfoComponent","dialog","section","location","hash","navigateToSection","openReferralLinkDialog","TokenstatsComponent","SpinnerService","isSpinnerShow","selectedNft","spinnerStateChanged","asObservable","next","SpinnerComponent","spinnerService","loading","state","GriseTokenContractService","claimTokenHolderTransactionRewardData","isClaimTokenHolderTransactionRewardDataUpdated","griseTokenContract","griseAccountNo","_address","getLaunchTime","getLPLaunchTime","lpLaunchTime","launchTimeData","balanceOf","convertAmountInBigUnit","viewTokenHolderTranscReward","from","tokenHolderTransactionReward","show","claimTokenHolderTranscReward","send","response","hide","daysLeft","totalSupply","AccountNoPipe","strAccountNo","formattedAccountNo","substr","PersonalStakeData","StakingTokenContractService","getSlotLeft","slotLefts","stakeSlotLeftData","stSlotLeft","STSlotLeft","mt3MonthSlotLeft","MT3MonthSlotLeft","mt6MonthSlotLeft","MT6MonthSlotLeft","mt9MonthSlotLeft","MT9MonthSlotLeft","ltSlotLeft","LTSlotLeft","mtSlotLeft","totalSlotLeft","getStakeCount","stakeCountData","stStakeCount","STStakeCount","mt3MonthStakeCount","MT3MonthStakeCount","mt6MonthStakeCount","MT6MonthStakeCount","mt9MonthStakeCount","MT9MonthStakeCount","ltStakeCount","LTStakeCount","mtStakeCount","totalStakeCount","amount","convertAmountInSmallUnit","createStake","forceUpdateStakeTransactionsData","forceUpdateWalletBalanceData","value","stakesPagination","stakeData","stakedAmount","penaltyAmount","isActive","isMature","forceUpdateStakePaginationData","getTotalStakedToken","totalStakedToken","MergepopupComponent","showNext","firstMerge","secondMerge","threeMerge","fourMerge","firstBoxMerge","secondBoxMerge","resultBoxMerge","userTab","tabData","src","commonMerge","mythicMerge","legendaryMerge","mythicTwoMerge","URL","environment","production","uniswapUrl","tokenDayDataAddress","marketCapPairAddress","initialTimeStamp","graphAPIBaseUrl","blockFrostApiKey","blockFrostApiKeyMainnet","adminNamiWalletAddress","ADMIN_ROYALITY","ASSET_TRANSFER_PRICE","TRIPPY_OWL_COLLECTION_PRICE","SERVER_URL","baseUrlAPI","ConfirmDialogComponent","emit","onYesClick","id","DialogComponent","liquidityContractService","allSelected","fixedSelected","randomSelected","allOtherCoins","tokenAddress","totalSelectedSlots","isDialogDataUpdated","setDefaultCoinData","deselectAllSlots","workingSlots","allSlots","isExpired","filterSlots","updateSlotsTimer","isSlotsReservationDataUpdated","updateSlotsReservation","setTimeout","selCoin","c","selectedCoin","getSelectedCoinBalanceData","coin","getOtherTokenBalance","otherTokenBalanceData","selectedCoinBalaceData","minValueRequired","setPlaceHolderValueText","tokenLargeBalance","decimalPlaces","tokenShortBalance","setTotalSelectedSlotsCount","minValue","valuePlaceHolder","isSelected","slot","Fixed","Random","selectedSlot","find","insufficientBalanceText","form","valid","minRequired","checkValueWithBalance","slotNos","coinData","coinTokenAddress","coinAmount","getTransactionApproval","subscription","isTransactionApproved","isApproved","addReservationWithToken","updateTransactionApproved","unsubscribe","addReservation","info","stopSlotsTimer","selectDeselectAll","reserveClick","MyNftsComponent","APIServices","allMyNFTGroups","authUser","hideAssets","spinnerLoader","cancelbtn","userLoginData$","Cardano","Nami","getAssets","namiWalletAssetsList","namiWalletTokens","item","unit","CardanoWalletAddress","paymentAddr","walletAddr","verifyWallet","checkWallet","warning","walletAddress","action","myNftsList","res","userNftsList","list","includes","mintToken","status","nftId","nftType","contentGroup","Mythic","contentHeader","contentData","nft","contentType","Gif","Image","contentPath","imageLink","nftObj","err","setSelectedNft","_id","obj","localStorage","setItem","navigateByUrl","cancelUserNft","msg","HomeComponent","timerhide","buttondisnft","circleLoader","KEY","DEFAULT","config","leftTime","notify","format","_CONTENT","_PART","_PART_INDEX","handleClaimButton","_value","claimButtonLoading$","clickMint","MintNami","resolve","reject","verifyClaimedCollection","resp","nftResp","requiredAmount","isFreeClaimable","getWalletBalance","getBalance","convertToADA","recipients","txHash","buildFullTransaction","mintTrippyOwl","currentdate","exctingValue","getItem","Boolean","read","countDownDate","UTC","getTime","now","distance","Math","floor","hours","minutes","seconds","syncNamiWallet","_INTERVAL_VAL","Type","substring","Delete","totalNamiAssets","Number","quantity","prevTotalNamiAssets","removeItem","claimStartTime","prevTime","currentTime","diffMs","diffDays","diffHrs","diffMins","round","INCREAMENT","TrippyOwlDetailComponent","p","lists","allRecords","empty","spinnerloader","hideassets","loadMoreBtn","currentList","slice","NFTContentType","NFTContentData","CoinTechnicalAnalysisComponent","CashIn","CashOut","coins_list_api","currentProduct","CashflowGraph","gridLineColor","TechnicalGraph","zoneAxis","zones","set","Data","data_plot","date","cashflow","cashin_percentage","cashout_percentage","zonesColor","timeseries","index","y","price","down_span_data","points","getCoinCashflow","getCoinTechnicalGraph","getCoinData","AdminpanelComponent","document","hidezero","availablebalance","balance","totalbalance","total","withdrawGrise","inputValue","sendGriseBalance","body","classList","add","remove","$","modal","confirmpopup","LoaderInterceptor","loaderService","requests","req","i","indexOf","splice","create","observer","handle","removeRequest","complete","ReservationComponent","filterType","nftDetailEnable","nftdetail","nftDetail","nftImg","isUpdated","fixedSlots","randomSlots","validationText","controls","slotAmount","myContribution","Loader","cardano","nami_lib","wasm_lib","nami","NamiWalletApi","load","Object","keys","isEnabled","isNamiInstalled","getAddress","addr","S","Value","from_bytes","Buffer","lovelaces","to_str","requiredBalance","userType","isWalletConnected","getNetworkId","getNetwork","network","ccvault","TokenMetrixComponent","bar","Inv_Type","url","items","pieChartOptions","responsive","tooltips","bodyFontColor","borderColor","titleFontColor","titleFontSize","bodyFontSize","titleMarginBottom","xPadding","yPadding","display","fontSize","fontColor","PieChartColor","pieChartLabels","pieChartData","pieChartType","pieChartLegend","pieChartPlugins","loadData","ld","GraphData","selected","lineChartData","lineChartLabels","lineChartOptions","borderWidth","caretPadding","displayColors","intersect","mode","scales","xAxes","ticks","gridLines","yAxes","lineChartColors","lineChartLegend","lineChartType","lineChartPlugins","doughnutChartLabels","doughnutChartData","doughnutChartType","doughnutChartColors","DonOptions","page_number","time_stamp","predicted","data_coin","ds","date_final","label","trade_coin","final_coin_symbol","toUpperCase","headers_trading","params_trading","res_trading","data_json_trading","inOutVar","score","largetxsVar","addressesNetGrowth","concentrationVar","ai_decision_1","sentiment","ai_decision_2","ai_decision_3","ai_decision_4","success_response","Message","CustomOnInit","getCoinPrediction","trendResSTR","trendResJSON","trend_coins","coin_json","last_change_date","last_updated_date","data_coins","form_json","inv_type","time_wind","time_win","time_frame","exampleRadios","data_json","coin_cap","coin_name","coin_data","market_cap","MinAbiDataContractService","minABI","constant","inputs","outputs","chainId","ROPSTEN","MAINNET","fetchTokenData","otherCoin","weth","fetchPairData","pair","route","midPrice","toSignificant","invert","exchangeRateData","minABIContract","Contract","decimals","getTokenExchangeRate","transactionAmount","approve","liquidityAccountNo","ex","wordCloud","CoinTweetsComponent","UsersTweets","Indexes","UsersHashtags","TrendingWords","tweets","hashtags","words","wordfrequency","sort","a","b","followers","tweet","bigcoin","word","weight","hashtagsList","tag","random","getCoinTweets","DashboardComponent","getTotalSupply","totalGriseSupply","calcMarketCap","graphDataService","getTableData","priceData","marketCapValue","priceUSD","CoinMarketComponent","green","red","Markets","Exchanges","exchangeName","getCoinMarket","getExchanges","world","GoogleTrendsComponent","WorldGraph","mapNavigation","buttonOptions","verticalAlign","colorAxis","min","post","IOT","interest_over_time","IBR","interest_by_region","InterestOverTime","InterestByRegion","dataValue","geoCode","getGoogleTrend","LiquidityContractService","liquidityTransformerContract","_currentLPDay","totalSlots","totalInvestment","uniqueInvestorCount","referralAccountCount","liquidityEventData","slotNo","dailySlots","slotsUsed","dailyTotalInvestment","myInvestmentAmount","myClaimAmount","myShare","griseReservationData","referralAccountNo","getReferralAccountNo","reserveGrise","forceUpdateSlotsReservationData","reserveGriseWithToken","blankReferralAccountNo","referralAmount","referralTokens","personalReferralData","myClaimAmountAllDays","claimableAmount","g","claimableAmountOtherData","totalReferralTokens","totalTransferTokens","totalWeiContributed","claimableAmountData","generatedDays","preparedReferrals","getMyTokens","forceUpdateClaimableAmountData","supplyOnAllDays","rtnSupplyOnAllDays","invertOnDay","CoinPredictionComponent","RefundHistoryComponent","refundContractService","isClaimGasFeeRefundUpdated","getRefundHistoryData","refundHistoryData","myRefundAmount","claimGasFeeRefund","ConnectWalletDialogComponent","emitData","result","disconnect","open","message","connectWallet","ComingSoonComponent","webpackContext","webpackContextResolve","__webpack_require__","o","webpackContextKeys","module","exports","SellFormComponent","feeamount","disablebtn","amounshow","amountresit","getAmount","sellAsset","userNftId","transectionFee","verifyUserNft","assets","setTokenPrice","redirectlandingPage","inputvalue","feeshow","LocalDataUpdateService","slotMaxHours","maxSlotsPerSlot","initSlotsReservationData","slotsReservationData","personalPeriodStakeSlotLeftData","stakePaginationData","stakeTransactionsData","transactionApproval","walletBalanceData","dialogInitData","isInitSlotsReservationDataUpdated","isWalletBalanceDataUpdated","isExchangeRateDataUpdated","isClaimableAmountDataUpdated","AppComponent","walletDialog","activatedRoute","state$","dropdownActive","dropdownNotActive","connected","showLaunchTimerDialog","coinsData","coinsDataList","truncAddress","str","n","wallet_type","connectWithCardanoWallet","showLaunchDialog","assignContractAccounts","setChainId","initPersonalPeriodStakes","getTokenData","checkLink","header","btc","BTC","dot","DOT","ada","ADA","ETH","initSlots","getCurrentLPDay","lpDay","queryParams","referralCode","href","totalNamiWalletNFT$","userRegister","regUser","userApiResp","userAuthToken$","token","allAssets","CCVault","checkEnabled","CardanoSRL","cardanoSerialize","global","walletBalance","assignLiquidityAccountNo","assignGriseAccountNo","forceUpdateExchangeRateData","dialogConfig","disableClose","autoFocus","width","modalRef","componentInstance","$e","close","ERROR","FAILED_PROTOCOL_PARAMETER","TX_TOO_BIG","serilizationLib","apiKey","NOT_CONNECTED","getUsedAddresses","addressHex","BaseAddress","from_address","Address","to_address","to_bech32","networkId","valueCBOR","lovelace","parseInt","multiasset","multiAssets","j","len","policy","policyAssets","assetNames","k","policyAsset","asset","to_bytes","_policy","_name","fingerprint","HexToAscii","fetch","method","scripts","keyHash","paymentKeyHash","ttl","json","utxos","Utxos","u","TransactionUnspentOutput","UTXOS","utxo","_utxoToAssets","input","transaction_id","txId","getUtxos","PaymentAddress","metadata","utxosRaw","multiSig","_getProtocolParameter","protocolParameter","mintedAssetsArray","TransactionOutputs","minting","outputValues","costValues","recipient","ReceiveAddress","multiAsset","_makeMultiAsset","mintedAssets","_makeMintedAssets","outputValue","BigNum","from_str","minAdaMint","set_multiasset","minAda","min_ada_required","minUtxo","compare","set_coin","requiredMintAda","checked_add","TransactionOutput","from_bech32","RawTransaction","_txBuilderMinting","Outputs","ProtocolParameter","_txBuilder","Metadata","Delegation","expirationTime","protocolParameters","duration","payment_cred","to_keyhash","nativeScripts","NativeScripts","script","ScriptPubkey","nativeScript","NativeScript","new_script_pubkey","lockScript","new_timelock_expiry","TimelockExpiry","finalScript","new_script_all","ScriptAll","policyId","ScriptHash","signTx","string","getAddressHex","signData","coseSign1Hex","AssetsMap","assetName","Array","isArray","MultiAsset","Assets","_assets","AssetName","insert","output","MULTIASSET_SIZE","VALUE_SIZE","totalAssets","setProtocolParameters","linearFee","minFeeA","minFeeB","maxTxSize","randomImprove","selection","mint","Mint","mintedAssetsDict","assetsDict","policyScript","entries","mintAssets","MintAssets","Int","ScriptHashNamespace","mintedValue","policyScriptHex","TransactionInputs","TransactionInput","rawOutputs","fee","rawTxBody","TransactionBody","set_mint","aux","AuxiliaryData","generalMetadata","GeneralTransactionMetadata","MetadataLabel","encode_json_str_to_metadatum","set_metadata","set_auxiliary_data_hash","hash_auxiliary_data","witnesses","TransactionWitnessSet","set_native_scripts","dummyVkeyWitness","vkeys","Vkeywitnesses","Vkeywitness","set_vkeys","rawTx","Transaction","minFee","min_fee","LinearFee","checked_sub","finalTxBody","multiassets","auxiliary_data_hash","finalWitnesses","auxiliary_data","size","txBuilder","TransactionBuilder","poolDeposit","keyDeposit","add_input","AUXILIARY_DATA","set_auxiliary_data","add_output","change","changeMultiAssets","partialChange","partialMultiAssets","policies","makeSplit","checkMultiAssets","checkValue","add_change_if_needed","build","transactionRaw","txWitnesses","witness_set","txVkeys","txScripts","native_scripts","addWitnesses","addVkeys","addScripts","totalVkeys","totalScripts","totalWitnesses","signedTx","_blockfrostRequest","endpoint","txhash","latestBlock","epoch","min_fee_a","min_fee_b","pool_deposit","key_deposit","max_tx_size","networkEndpoint","blockfrostApiKey","getApiKey","project_id","AsciiToBuffer","HexToBuffer","AsciiToHex","BufferToAscii","buffer","BufferToHex","LoginComponent","loginbox","forgotbox","signupform","BigInt","CoinSelection","minUTxO","limit","_minUTxOValue","utxoSelection","remaining","subset","mergedOutputsAmounts","mergeOutputsAmounts","splitOutputsAmounts","splitAmounts","createSubSet","randomSelect","cloneUTxOSelection","descSelect","sortAmountList","range","ideal","maximum","improve","outputAmount","minUTxOValue","nbFreeUTxO","isQtyFulfilled","pop","addAmounts","utxoA","utxoB","newAmount","abs","getAmountValue","compiledAmountList","amounts","compiledAmounts","mA","scriptHash","_multiasset","amountList","sortOrder","sortInt","cumulatedAmount","minAmount","maxFee","cloneUTxOList","cloneValue","utxoList","big","RewardComponent","getTokenHolderTransactionReward","rewardToken","getTimeToClaimWeeklyReward","claimTokenHolderTransactionReward","claimReward","AppModule","provide","useClass","multi","forRoot","positionClass","NamiMintLoader","policyExpiration","connect","newAddress","getUtxosHex","myAddress","netId","t","signature","submitTx","buildFullTransactionBatchMinting","tokenTransfer","createPolicy","defaultDate","setTime","getHexAddress","createLockingPolicyScript","newPolicy","RoadmapComponent","NftCollectionComponent","LiquidityComponent","tokenTimer","getLiquidityEventData","getClaimableAmount","claimableAmtData","endTime","eventIsClosed","checkClaimGrise","claimGriseToken","CoinSummaryComponent","NewsData","WordCloud","coinHistory","coinTrends","zonesAxis","news_link","news","scraping_error_message","Wordlist","word_cloud_data","values","v","Price","MovingAvg","Trends","Seasonal","trends","datetime","trend","seasonal","getWordCloudNews","getCoinTrends","TokenDataComponent","refreshData","getChartData","getGraphHistoryData","chartData","tokenDayDatas","priceUSDList","dailyVolumeUSD","dateList","toDateString","NFTComponent","allNFTGroups","mythicNFTsGroup","rareNFTsGroup","legendaryNFTsGroup","commonNFTsGroup","filterNFTGroups","isOpen","nextBox","firstBox","resultBox","mergerButtons","AllNftShow","incubationText","showsell","mintHide","myNftsshow","namiwallet","custumid","keyitem","active","keynfthide","mintNftObj","availableForSale","owned_by","ownerAddr","assetKey","imageUrl","buyNftObj","userNftData","userId","isVerifiedWallet","buydiable","btnid","buyid","fundsbtn","remainingNftsClaimBtn","batchMinting","POLICY_ID","POLICY_SCRIPT","assetsData","batchRecipients","metadata_assets","reduce","ASSET_NAME","ASSET_ID","asset_metadata","image","description","authors","metadataMinting","calcAdminRoyality","num","percentage","tokenAmmount","mintMetadata","nftQuantity","mintNft","String","clickBuy","nftOwner","buyNft","initNFTContents","allNFTs","keynftGroup","nftsList","keyNftshow","mythicNfts","rareNfts","legendaryNfts","commonNfts","keyNfts","Rare","Legendary","Common","nftAmount","keylist","keyNft","resetMintNftObj","StakingComponent","pieChartStakeCountData","pieChartSlotLeftData","setRefreshDataTimer","getStakeCountData","getStakeSlotsLeftData","stakeCount","More","Exporting","ExportData","Accessibility","SentimentAnalysisComponent","productName","positive","Negative","ceil","negative","neutral","onProductChanged","authToken","tokenValue","authorization","NFTsAPIServices","authTokenValue","SlotType","SlotData","MyLoaderComponent","ContractService","loadWeb3","currentAbis","net","getId","networks","contractData","abi","toastMessage","previousToastMessage","smallUnit","utils","fromWei","bigUnit","toWei","acc","getAccountInfo","ReferralLinkDialogComponent","_clipboardService","urlCopied","generateReferralUrl","parsedUrl","baseUrl","origin","referralUrl","execCommand","onClose","copyUrl","MoonverseComponent","GraphDataService","httpClient","NFTContentGroup","NFTContentGroupData","NftObjData","BuyNftObjData","PersonalPeriodStakeSetup","material","routes","path","component","redirectTo","pathMatch","children","AppRoutingModule","useHash","routingmod","_wasm","MataMaskButtonComponent","getChangeAddress","pool_id","blockfrost_project_id","link","windowOuterHeight","outerHeight","windowOuterWidth","outerWidth","left","LandingPageComponent","dropdownList","selectedItems","dropdownSettings","bubbleChartOptions","max","drawBorder","bubbleChartType","bubbleChartLegend","bubbleChartData","bubbleChartColors","adminRoyality","parseFloat","receiver","receiverAddr","nftOwnerAddress","sendMultiple","mintstatus","isMinted","nftamount","item_id","item_text","singleSelection","idField","textField","selectAllText","unSelectAllText","itemsShowLimit","allowSearchFilter","enableCheckAll","trunc","maxCoordinate","rand","onItemSelect","onSelectAll","RefundContractService","claimGasFeeRefundUpdate","refundSponsorContract","getAccountBalance","sponsoredAmount","requestGasRefund","ReferralsComponent","getPersonalReferralData","bootstrapModule","webpackEmptyAsyncContext","SharedService","startTime","forceInitSlotsReservationData","toTime","fromTime","distanceFrom","startdate","start","slotStartDate","slotEndDate","end","diff","day","startDate","endDate","progressDone","getCurrentTimeProgess","getGriseReservationData","totalInvest","mySharePercent","concat","getSupplyOnAllDays","allDaysdata","allDaydata","stakes","forceUpdatePersonalPeriodStakeSlotLeftData","fromDt","toDate","toDt","fromDate","setHours","setMinutes","setSeconds","setMilliseconds"],"mappings":"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AAA;AAQb,qCAAMA,oBAAoB,CAACC,OAArB,CAA6BC,QAA7B,CAAsC,KAAKJ,OAA3C,EAAoDK,IAApD,EAAN;;AARa;AAQ3BC,yCAR2B;AASjC;AACA,mCAAKjB,YAAL,GAAoBiB,WAApB;AACA,mCAAK4oB,YAAL;;AAXiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAxB;AAAA,mBAAb;AAcD,iBAzBD;AA0BD,eA3BD,CA2BE,OAAO3oB,CAAP,EAAU;AACVC,uBAAO,CAACC,GAAR,CAAY,0BAAZ,EADU,CAEV;AACD;AAGF,aApCD,MAoCO;AACLD,qBAAO,CAACC,GAAR,CAAY,gCAAZ;AAED;AAIF;;;iBAED,sBAAU;AACR,gBAAG,KAAKpB,YAAR,EAAqB;AACnB,mBAAKA,YAAL,GAAoB,KAApB;AACD,aAFD,MAEK;AACH,mBAAKA,YAAL,GAAoB,IAApB;AACA,mBAAK6pB,YAAL;AACD;AACF;;;iBAED,oBAAQ,CACN;AACA;AACD,W,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;iBACA,8BAAqB,CAEpB;;;;;;;yBAtqBU+rB,0B,EAA0B,2I,EAAA,gI;AAAA,O;;;cAA1BA,0B;AAA0B,+C;AAAA,gB;AAAA,e;AAAA,22B;AAAA;AAAA;ADxEvC;;AAuEA;;;;AAvEM;;AAuEA;;AAAA;;;;;;;;;;;;;;;;;;;;;;;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AAS;;AACjD;;AACH;;AACA;;AACE;;AAGE;;AACJ;;AACA;;AAAsB;;AAAY;;AAAc;;AAAI;;AACpD;;AAAsB;;AAAY;;AAAc;;AAAI;;AACpD;;AACE;;AACG;;AAAU;;AACR;;AAAW;;AACb;;AAEL;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AACZ;;AACH;;AACA;;AACE;;AAGE;;AACJ;;AACA;;AAAsB;;AAAY;;AAAc;;AAAI;;AACpD;;AAAsB;;AAAY;;AAAc;;AAAI;;AACpD;;AACE;;AACG;;AAAU;;AACR;;AAAW;;AACb;;AAEL;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AAEA;;AACE;;AACE;;AACE;;AAOE;;AAA8B;;AAAY;;AAC1C;;AACF;;AACF;;AACF;;AACA;;AAME;;AACE;;AACE;;AACE;;AACE;;AACE;;AACF;;AACA;;AACE;;AACE;;AACE;;AACA;;AAAmC;;AAAS;;AAC9C;;AACA;;AAAmB;;AAAK;;AAC1B;;AACA;;AACE;;AAAoB;;AAAc;;AAClC;;AACE;;AAAO;;AAAqC;;AAC3C;;AACH;;AACF;;AACA;;AACE;;AAAoB;;AAAO;;AAC3B;;AACE;;AAAM;;AAAI;;AACV;;AACE;;AAAqC;;AACtC;;AACH;;AACF;;AACF;;AACA;;AACE;;AAAuB;;AAAO;;AAC9B;;AACG;;AACC;;AAAgB;;AACjB;;AAAC;;AAEN;;AACF;;AAEA;;AACE;;AACE;;AACF;;AACA;;AACE;;AACE;;AACE;;AACA;;AAAmC;;AAAS;;AAC9C;;AACA;;AAAmB;;AAAK;;AAC1B;;AACA;;AACE;;AAAoB;;AAAc;;AAClC;;AACE;;AAAO;;AAAqC;;AAC3C;;AACH;;AACF;;AACA;;AACE;;AAAoB;;AAAO;;AAC3B;;AACE;;AAAM;;AAAI;;AACV;;AACE;;AAAqC;;AACtC;;AACH;;AACF;;AACF;;AACA;;AACE;;AAAuB;;AAAO;;AAC9B;;AACG;;AACC;;AAAgB;;AACjB;;AAAC;;AAEN;;AACF;;AAEA;;AACE;;AACE;;AACF;;AACA;;AACE;;AACE;;AACE;;AACA;;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","file":"main-es5.js","sourcesContent":["<div class=\"container-fluid bg-color px-0 video-part\">\r\n    <div class=\"content_video ml-auto\">\r\n      <div class=\"row h_custom_100\">\r\n        <div class=\"w-100 h_custom_100 position-relative\">\r\n          \r\n         <div class=\"leftsidebar position-relative d-none\" [ngClass]=\"{'width-0': zeroWidth}\">\r\n           <a  class=\"sidebar-button\" (click)=\"hideSideBar()\">\r\n             <div *ngIf=\"!hideArrow\">\r\n              <i class=\"fas fa-chevron-left\"></i>\r\n             </div>\r\n             <div *ngIf=\"hideArrow\">\r\n              <i class=\"fas fa-chevron-right\"></i>\r\n             </div>\r\n            \r\n           </a>\r\n          <div class=\"leftsidebar-container\" *ngIf=\"hideleftside\">\r\n              <div class=\"\">\r\n                <div class=\"leftsidr-bar-top d-flex justify-content-between  align-items-center w-100\">\r\n                  <h4 class=\"mb-0\">Map</h4>\r\n                  <a href=\"javascript:void(0);\">Clear</a>\r\n                </div>\r\n\r\n                <div class=\"check-box-map d-flex align-items-start flex-column border-top\">\r\n                  <div class=\"form-check\">\r\n                    <input class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"forSale\">\r\n                    <label class=\"form-check-label\" for=\"forSale\">\r\n                      For Sale\r\n                    </label>\r\n                  </div>\r\n                  <div class=\"form-check\">\r\n                    <input class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"premium\">\r\n                    <label class=\"form-check-label\" for=\"premium\">\r\n                      Premium\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n\r\n\r\n                <div class=\"check-box-map d-flex align-items-start flex-column border-top\">\r\n                  <h4 class=\"text-white mb-2\">Find Land on <a href=\"https://cnft.io/\" target=\"_blank\">cnft.io</a></h4>\r\n                  <div class=\"form-check\">\r\n                    <input class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"radio1\">\r\n                    <label class=\"form-check-label\" for=\"radio1\">\r\n                      1 x 1\r\n                    </label>\r\n                  </div>\r\n\r\n                  <div class=\"form-check\">\r\n                    <input class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"radio2\">\r\n                    <label class=\"form-check-label\" for=\"radio2\">\r\n                      3 x 3\r\n                    </label>\r\n                  </div>\r\n\r\n                  <div class=\"form-check\">\r\n                    <input class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"radio3\">\r\n                    <label class=\"form-check-label\" for=\"radio3\">\r\n                      6 x 6\r\n                    </label>\r\n                  </div>\r\n\r\n                  <div class=\"form-check\">\r\n                    <input class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"radio4\">\r\n                    <label class=\"form-check-label\" for=\"radio4\">\r\n                      12 x 12\r\n                    </label>\r\n                  </div>\r\n\r\n                  <div class=\"form-check\">\r\n                    <input class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"radio5\">\r\n                    <label class=\"form-check-label\" for=\"radio5\">\r\n                      24 x 24\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"check-box-map d-flex align-items-start flex-column border-top\">\r\n                  <h4 class=\"text-white mb-2 d-flex justify-content-between w-100\">Coordinates <span data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" title=\"Filters all lands between min(x,y) and max(x,y). Min must be lesser than max one. \"><i class=\"fas fa-info-circle\"></i></span></h4>\r\n                  <div class=\"coordinates-input\">\r\n                    <div>\r\n                      <label>Min (X,Y)</label>\r\n                      <input type=\"text\" placeholder=\"\" class=\"form-control\" placeholder=\"0, 0\" disabled/>\r\n                    </div>\r\n                    <div>\r\n                      <label>Max (X,Y)</label>\r\n                      <input type=\"text\" placeholder=\"\" class=\"form-control\" placeholder=\"0, 0\" disabled/>\r\n                    </div>\r\n                  </div>\r\n                  <button>Apply</button>\r\n                </div>\r\n\r\n                <div class=\"check-box-map d-flex align-items-start flex-column border-top\">\r\n                  <h4 class=\"text-white mb-2 d-flex justify-content-between w-100\">Wallet </h4>\r\n                  <div class=\"coordinates-input\">\r\n                    \r\n                      <input type=\"text\" placeholder=\"\" class=\"form-control w-100\" placeholder=\"ex: addr2b323567...........\" disabled/>\r\n                    \r\n                  </div>\r\n                </div>\r\n              </div>\r\n          </div>\r\n         </div>\r\n          \r\n          <div class=\"moonmapbg position-relative \">\r\n            <div class=\"loader-box\" [ngClass]=\"{'pl-3': zeroWidth}\">\r\n              <div style=\"font-size: 30px; margin-top: 21%; line-height: normal; padding:0px 10px;\" class=\"text-center mb-5\">\r\n                coming soon\r\n                <div>\r\n                  <img class=\"sidebar-icon\" src=\"https://bnb-grise-assests.s3.us-west-2.amazonaws.com/assets/dashboard.png\" alt=\"dashboard\">\r\n                  <br>\r\n                  <div class=\"d-flex justify-content-center access-btn-div\">\r\n                 \r\n                  </div>\r\n                </div>\r\n              \r\n            </div>\r\n              \r\n            </div>\r\n          </div>\r\n          \r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  \r\n  ","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-owly-bird',\r\n  templateUrl: './owly-bird.component.html',\r\n  styleUrls: ['./owly-bird.component.scss']\r\n})\r\nexport class OwlybirdComponent implements OnInit {\r\n  \r\n  constructor() { }\r\n  hideleftside :boolean= true;\r\n  zeroWidth : boolean = false;\r\n  hideArrow : boolean = false;\r\n  ngOnInit(): void {\r\n  }\r\n  hideSideBar(){\r\n    this.hideleftside = !this.hideleftside;\r\n    this.zeroWidth = !this.zeroWidth;\r\n    this.hideArrow = !this.hideArrow;\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\r\nimport * as Highcharts from \"highcharts/highstock\";\r\nimport Indicators from \"highcharts/indicators/indicators-all.js\";\r\nimport DragPanes from \"highcharts/modules/drag-panes.js\";\r\nimport AnnotationsAdvanced from \"highcharts/modules/annotations-advanced.js\";\r\nimport PriceIndicator from \"highcharts/modules/price-indicator.js\";\r\nimport StockTools from \"highcharts/modules/stock-tools.js\";\r\n\r\nIndicators(Highcharts);\r\nDragPanes(Highcharts);\r\nAnnotationsAdvanced(Highcharts);\r\nPriceIndicator(Highcharts);\r\nStockTools(Highcharts);\r\n\r\n\r\n@Component({\r\n  selector: 'app-coin-corelation',\r\n  templateUrl: './coin-corelation.component.html',\r\n  styleUrls: ['./coin-corelation.component.scss']\r\n})\r\nexport class CoinCorelationComponent implements OnInit {\r\n  highcharts = Highcharts;\r\n  Coins:any = []\r\n  CoinDetails:any = {}\r\n  CorrelateCoinDetails:any = {}\r\n  PValue:any = 0\r\n  CorrelationValue:any = 0\r\n  Coin:string = \"dogecoin\"\r\n  CorrelateCoin:string = \"bitcoin\"\r\n  CorrelationGraph:any = {\r\n    chart: {\r\n      backgroundColor: \"#3b4148\",\r\n    },\r\n    rangeSelector: {\r\n      buttonTheme: { // styles for the buttons\r\n        fill: 'none',\r\n        stroke: 'none',\r\n        'stroke-width': 0,\r\n        r: 8,\r\n        style: {\r\n            color: 'white',\r\n            fontWeight: 'bold'\r\n        },\r\n        states: {\r\n            hover: {\r\n                fill: 'white',\r\n                style: {\r\n                    color: 'black'\r\n                }\r\n            },\r\n            select: {\r\n                fill: 'white',\r\n                style: {\r\n                    color: 'black'\r\n                }\r\n            }\r\n        }\r\n    },\r\n    inputStyle: {\r\n        color: 'white',\r\n        fontWeight: 'bold',\r\n        states:{\r\n            select:{\r\n                color: 'black',\r\n            }\r\n        }\r\n    },\r\n    labelStyle: {\r\n        color: 'white',\r\n        fontWeight: 'bold',\r\n    }\r\n    },\r\n    title: {\r\n      text: \"Correlation Graph\",\r\n    },\r\n    yAxis: [\r\n        {\r\n          labels: {\r\n            align: \"right\",\r\n            x: -3,\r\n          },\r\n          title: {\r\n            text: `Price`,\r\n            \r\n          },\r\n          height: \"60%\",\r\n          resize: {\r\n            enabled: true\r\n          },\r\n        },\r\n        {\r\n          labels: {\r\n            align: \"right\",\r\n            x: -3\r\n          },\r\n          title: {\r\n            text: `Price`,\r\n          },\r\n          top: \"65%\",\r\n          height: \"35%\",\r\n          offset: 0,\r\n        }\r\n      ],\r\n      tooltip: {\r\n        split: true,\r\n      },\r\n    series: [\r\n    \r\n    {\r\n        type: \"line\",\r\n        name: `Price`,\r\n        data: [],\r\n        color: '#DDDF00',\r\n    },\r\n    {\r\n        type: \"line\",\r\n        name: `Price`,\r\n        yAxis: 1,\r\n        data: [],\r\n        color: '#ff0000'\r\n    },]\r\n  }\r\n\r\n  getCoins(){\r\n    this.http.get('https://api.ethama.finance/get-coin-name').subscribe(Response => {\r\n      let resSTR = JSON.stringify(Response);\r\n      let resJSON = JSON.parse(resSTR);\r\n      if(resJSON.code == 200){\r\n        this.Coins = resJSON.data.data\r\n      }\r\n    })\r\n  }\r\n\r\n  getCoinCorrelation(coinName:any, correlateCoin:any){\r\n    let headers = new HttpHeaders();\r\n    let params = new HttpParams()\r\n    this.http.get(`https://api.ethama.finance/get-statitistical-data?coin=${coinName}&corr-with=${correlateCoin}`, {\r\n      headers: headers,\r\n      params: params,\r\n      responseType: 'text'\r\n    }).toPromise().then(Response => {\r\n      let details = JSON.parse(Response);\r\n      if(details.p_value <= 0.001){\r\n        this.PValue = 0.001\r\n      }else{\r\n        this.PValue = details.p_value\r\n      }\r\n      this.CorrelationValue = details.correlation.toFixed(3)\r\n      this.CoinDetails = details.query_detail\r\n      this.CorrelateCoinDetails = details.corr_with_detail\r\n      this.CorrelationGraph = {\r\n        chart: {\r\n          backgroundColor: \"#3b4148\",\r\n        },\r\n        title: {\r\n          text: \"Correlation Graph\",\r\n          style: {\r\n            color: '#fff'\r\n          }\r\n        },\r\n        legend: {\r\n          itemStyle: {\r\n              color: '#fff',\r\n          },\r\n          itemHoverStyle: {\r\n            color: '#fff',\r\n          }\r\n        },\r\n        yAxis: [\r\n            {\r\n              labels: {\r\n                align: \"right\",\r\n                x: -3,\r\n                style: {\r\n                  color: 'white'\r\n                }\r\n              },\r\n              title: {\r\n                text: `${coinName} Price`,\r\n                style: {\r\n                  color: 'white'\r\n                }\r\n              },\r\n              height: \"60%\",\r\n              resize: {\r\n                enabled: true\r\n              },\r\n            },\r\n            {\r\n              labels: {\r\n                align: \"right\",\r\n                x: -3,\r\n                style: {\r\n                  color: 'white'\r\n                }\r\n              },\r\n              title: {\r\n                text: `${correlateCoin} Price`,\r\n                style: {\r\n                  color: 'white'\r\n                }\r\n              },\r\n              top: \"65%\",\r\n              height: \"35%\",\r\n              offset: 0,\r\n            }\r\n          ],\r\n          tooltip: {\r\n            split: true,\r\n          },\r\n        series: [\r\n        {\r\n            type: \"line\",\r\n            name: `${coinName} Price`,\r\n            data: details.query,\r\n            color: '#DDDF00',\r\n        },\r\n        {\r\n            type: \"line\",\r\n            name: `${correlateCoin} Price`,\r\n            yAxis: 1,\r\n            data: details.corr_with,\r\n            color: '#ff0000'\r\n        },\r\n      ]\r\n    }\r\n  })\r\n}\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getCoinCorrelation(this.Coin,this.CorrelateCoin)\r\n    this.getCoins()\r\n  }\r\n\r\n}\r\n","<div class=\"coin-correlation-div\">\r\n    <div class=\"row \">\r\n        <!-- introduction part -->\r\n        \r\n        <div class=\"col-lg-12 card-outer-div\" style=\"margin-top: 59px;\">\r\n        \r\n            <h1 class=\"headingAi\">Introduction AI Platform</h1>\r\n            <div class=\"main-div card-div\" style=\"text-align: justify;\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-lg-12\">\r\n                    <h1> How to use Grise Token AI-Indices</h1>\r\n                    </div>\r\n                    <div class=\"col-lg-12 my-3\">\r\n                    <h4 class=\"text-danger\">NOTE: Indices Rebalancing Times Are an Approximation.</h4>\r\n                    </div>\r\n                    <div class=\"col-lg-12 my-3\">\r\n                        <div class=\"info-text\">\r\n                        Sometimes we may update the indices when we make important updates or changes to technical details and\r\n                        calculations for an index. For example, we recently added a requirement for all indices to only hold\r\n                        cryptocurrencies with a daily trading volume greater than $500k. Each of these technical updates requires us\r\n                        to re-do the index. This will apply with future technical updates to indices.\r\n                            Furthermore, we have recently add features related to trading signal. This features is based on Deep Learning by which our stacker can take smart decision to avoid loss in trading. In AI-Price prediction algorithms we can see the future expected price up-to two months and take fast decision to in-out the market.\r\n                        As a result, the days and times are an approximation and indices may take 1-4 hours to fully update or on\r\n                        occasion be rebalanced more than their time-horizon to make important technical updates.\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-lg-12 my-3\">\r\n                    <h4 class=\"text-danger\">DISCLAIMER\r\n                    Indices of crypto investments, like all types of investment-related information, are subject to risk; they can\r\n                    go down as well as up; and relying on such information can lead to losses as well as gains. Information about\r\n                    past performance is not necessarily indicative of future performance.\r\n                    </h4>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-12 col-lg-6 card-outer-div\">\r\n            <h1 class=\"headingAi\">Coin</h1>\r\n            <div class='main-div card-div'>\r\n                <div class=\"row d-flex justify-content-between\">\r\n                    <div class=\"col-12 col-lg-6 coin-detail-div d-flex\">\r\n                        <img class=\"coin-image\" src={{CoinDetails.image}}/>\r\n                        <div class=\"coin-name-div\">\r\n                            <p class=\"coin-name\">{{CoinDetails.id}}</p>\r\n                            <p class=\"coin-symbol\">{{CoinDetails.symbol}}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-12 col-lg-6 \">\r\n                        <span class=\"mr-3 coin-text\">Choose Coin: </span>\r\n                        <input class=\"inputcoinsearch mb-3 \" type=\"text\" list=\"productList\" name=\"product\" [(ngModel)]='Coin'\r\n                        (change)=\"getCoinCorrelation(Coin,CorrelateCoin)\" />\r\n    \r\n                        <datalist id=\"productList\">\r\n                            <option *ngFor=\"let coin of Coins;\" [value]=\"coin.id\">\r\n                                {{coin.id}} ({{coin.symbol}})\r\n                            </option>\r\n                        </datalist>\r\n                    </div>\r\n                </div>\r\n                <div class=\"coin-details\">\r\n                    <div class=\"d-flex justify-content-between\">\r\n                        <span>Price</span>\r\n                        <span>{{CoinDetails.price}}</span>\r\n                    </div>\r\n                    <div class=\"d-flex justify-content-between\">\r\n                        <span>Market Cap</span>\r\n                        <span>{{CoinDetails.market_cap}}</span>\r\n                    </div>\r\n                    <div class=\"d-flex justify-content-between\">\r\n                        <span>Market Cap Rank</span>\r\n                        <span>{{CoinDetails.market_cap_rank}}</span>\r\n                    </div>\r\n                    <div class=\"d-flex justify-content-between\">\r\n                        <span>Price Change 24h</span>\r\n                        <span>{{CoinDetails.price_change_24h}}</span>\r\n                    </div>\r\n                    <div class=\"d-flex justify-content-between\">\r\n                        <span>Total Volume</span>\r\n                        <span>{{CoinDetails.total_volume}}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-12 col-lg-6 card-outer-div\">\r\n            <h1 class=\"headingAi\">Coorelate Coin</h1>\r\n            <div class='main-div card-div'>\r\n                <div class=\"row d-flex justify-content-between\">\r\n                    <div class=\"col-12 col-lg-6 coin-detail-div d-flex\">\r\n                        <img class=\"coin-image\" src={{CorrelateCoinDetails.image}}/>\r\n                        <div class=\"coin-name-div\">\r\n                            <p class=\"coin-name\">{{CorrelateCoinDetails.id}}</p>\r\n                            <p class=\"coin-symbol\">{{CorrelateCoinDetails.symbol}}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-12 col-lg-6\">\r\n                        <span class=\"mr-3 coin-text\">Choose Coin: </span>\r\n                        <input class=\"inputcoinsearch mb-3 \" type=\"text\" list=\"correlateCoins\" name=\"coin\" [(ngModel)]='CorrelateCoin'\r\n                        (change)=\"getCoinCorrelation(Coin,CorrelateCoin)\" />\r\n    \r\n                        <datalist id=\"correlateCoins\">\r\n                            <option value=\"bitcoin\">\r\n                                Bitcoin\r\n                            </option>\r\n                            <option value=\"cardano\">\r\n                                Cardano\r\n                            </option>\r\n                            <option value=\"ethereum\">\r\n                                Ethereum\r\n                            </option>\r\n                        </datalist>\r\n                    </div>\r\n                </div>\r\n                <div class=\"coin-details\">\r\n                    <div class=\"d-flex justify-content-between\">\r\n                        <span>Price</span>\r\n                        <span>{{CorrelateCoinDetails.price}}</span>\r\n                    </div>\r\n                    <div class=\"d-flex justify-content-between\">\r\n                        <span>Market Cap</span>\r\n                        <span>{{CorrelateCoinDetails.market_cap}}</span>\r\n                    </div>\r\n                    <div class=\"d-flex justify-content-between\">\r\n                        <span>Market Cap Rank</span>\r\n                        <span>{{CorrelateCoinDetails.market_cap_rank}}</span>\r\n                    </div>\r\n                    <div class=\"d-flex justify-content-between\">\r\n                        <span>Price Change 24h</span>\r\n                        <span>{{CorrelateCoinDetails.price_change_24h}}</span>\r\n                    </div>\r\n                    <div class=\"d-flex justify-content-between\">\r\n                        <span>Total Volume</span>\r\n                        <span>{{CorrelateCoinDetails.total_volume}}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"card-outer-div\">\r\n        <h1 class=\"headingAi\">Coins Correlation</h1>\r\n        <div class=\"card-div\">\r\n            <div class=\"d-flex justify-content-between correlation-values\">\r\n                <p>PValue: {{PValue}}</p>\r\n                <p>Correlation Value: {{CorrelationValue}}</p>\r\n            </div>\r\n            <highcharts-chart class=\"custom-chart-styles\"\r\n                [Highcharts]=\"highcharts\"\r\n                [options]=\"CorrelationGraph\">\r\n            </highcharts-chart>\r\n        </div>\r\n    </div>\r\n</div>","<div *ngIf=\"allowed_user == true\">\r\n    <div class=\"coin-details-navbar-div\">\r\n        <a class=\"coin-navbar-item\" routerLinkActive=\"active\" routerLink=\"/coin-details/summary\" queryParamsHandling=\"merge\">\r\n            <label class=\"mb-0 app-item-text\">Coin Summary</label>\r\n        </a>\r\n        <a class=\"coin-navbar-item\" routerLinkActive=\"active\" routerLink=\"/coin-details/market\" queryParamsHandling=\"merge\">\r\n            <label class=\"mb-0 app-item-text\">Coin Market</label>\r\n        </a>\r\n        <a class=\"coin-navbar-item\" routerLinkActive=\"active\" routerLink=\"/coin-details/prediction\" queryParamsHandling=\"merge\">\r\n            <label class=\"mb-0 app-item-text\">Coin Prediction</label>\r\n        </a>\r\n        <a class=\"coin-navbar-item\" routerLinkActive=\"active\" routerLink=\"/coin-details/google-trend\" queryParamsHandling=\"merge\">\r\n            <label class=\"mb-0 app-item-text\">Coin Google Trend</label>\r\n        </a>\r\n        <a class=\"coin-navbar-item\" routerLinkActive=\"active\" routerLink=\"/coin-details/tweets\" queryParamsHandling=\"merge\">\r\n            <label class=\"mb-0 app-item-text\">Coin Tweets</label>\r\n        </a>\r\n        <a class=\"coin-navbar-item\" routerLinkActive=\"active\" routerLink=\"/coin-details/technical-analysis\" queryParamsHandling=\"merge\">\r\n            <label class=\"mb-0 app-item-text\">Coin Technical Analysis</label>\r\n        </a>\r\n        <a class=\"coin-navbar-item\" routerLinkActive=\"active\" routerLink=\"/coin-details/correlation\" queryParamsHandling=\"merge\">\r\n            <label class=\"mb-0 app-item-text\">Coin Correlation</label>\r\n        </a>\r\n    </div>\r\n    <app-my-loader></app-my-loader>\r\n    <div class=\"details-div\">\r\n        <router-outlet></router-outlet>\r\n    </div>\r\n</div>\r\n<div *ngIf=\"allowed_user == false\">\r\n    <div style=\"font-size: 30px; margin-top: 21%; line-height: normal;\" class=\"text-center mb-5\">\r\n        AI will only be available to NFT holders.\r\n        <div>\r\n          <img class=\"sidebar-icon\" src=\"https://bnb-grise-assests.s3.us-west-2.amazonaws.com/assets/dashboard.png\" alt=\"dashboard\">\r\n          <br>\r\n          <!--<div class=\"d-flex justify-content-center access-btn-div\">\r\n            <span (click)=\"giveAccess()\" class=\"access-btn\">Access AI</span>\r\n          </div>-->\r\n        </div>\r\n    </div>\r\n    <!-- <div style=\"font-size: 30px; margin-top: 21%;\" class=\"text-center mb-5\">\r\n        Please hold grise NFT's to gain access\r\n        <div>\r\n            <a routerLinkActive=\"active\" routerLink=\"/dashboard\" queryParamsHandling=\"merge\" onclick=\"closeNav()\">\r\n            <img class=\"sidebar-icon\" src=\"https://bnb-grise-assests.s3.us-west-2.amazonaws.com/assets/dashboard.png\" alt=\"dashboard\">\r\n            <br>\r\n            <label class=\"mb-0 app-item-text\">Dashboard</label>\r\n            </a>\r\n        </div>\r\n    </div> -->\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport * as StakingToken from '../../../abis/token/GriseToken.json';\r\nimport { ContractService } from '../../services/contract.service';\r\nimport { promise } from 'selenium-webdriver';\r\n\r\ndeclare let Web3: any;\r\ndeclare let window: any;\r\nconst web3 = window.web3;\r\n\r\n@Component({\r\n  selector: 'app-coin-details',\r\n  templateUrl: './coin-details.component.html',\r\n  styleUrls: ['./coin-details.component.scss']\r\n})\r\nexport class CoinDetailsComponent implements OnInit {\r\n\r\n  constructor(private contractService: ContractService) { }\r\n\r\n  allowed_user:boolean = false;\r\n  address:string;\r\n  staker_fuction(){\r\n    let lcladdress:string='';\r\n    if (window.ethereum) {\r\n      let web3 = new Web3(window.ethereum);\r\n\r\n      try {\r\n        window.ethereum.enable().then( () => {\r\n          // User has allowed account access to DApp...\r\n          let promise = web3.eth.getAccounts(function (error: any, accounts: any[]) {\r\n\r\n              // console.log(accounts[0], 'current account on init');\r\n              lcladdress = accounts[0]\r\n              // console.log(lcladdress)\r\n              return accounts[0]\r\n          });\r\n\r\n          promise.then( async (account: any) => {\r\n            account = account;\r\n            this.address = account[0];\r\n\r\n            // console.log(this.address)\r\n\r\n            const stakingTokenContract = await  this.contractService.getContractObject(StakingToken);\r\n            if (stakingTokenContract) {\r\n              const stakeCounts = await stakingTokenContract.methods.isStaker(this.address).call();\r\n              // console.log(stakeCounts)\r\n              this.allowed_user= stakeCounts;\r\n            }\r\n          });\r\n        });\r\n      } catch (e) {\r\n            console.log('Please Connect MetaMsk !');\r\n            // User has denied account access to DApp...\r\n          }\r\n    } else {\r\n        console.log('You have to install MetaMask !');\r\n      }\r\n    }\r\n\r\n    giveAccess(){\r\n      if(this.allowed_user){\r\n        this.allowed_user = false\r\n      }else{\r\n        this.allowed_user = true\r\n      }\r\n    }\r\n\r\n  ngOnInit(): void {\r\n    // this.staker_fuction();\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-info',\r\n  templateUrl: './info.component.html',\r\n  styleUrls: ['./info.component.scss']\r\n})\r\nexport class InfoComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid bg-color\">\r\n  <div class=\"row content\">\r\n    <div class=\"col-md-12\">\r\n      <div class=\"infoBox_wrapper infoBox-wrapper--first\">\r\n        <h1 class=\"pb-5 headings_info\">Features</h1>\r\n\r\n        <div class=\"row\">\r\n          <div class=\"col-md-6 col-lg-4\">\r\n            <h1 class=\"card_main__title\">Crypto AI Index</h1>\r\n            <div class=\"card\">\r\n              <div class=\"card-body bg-card-color\">\r\n                <p class=\"card-text\">\r\n                  Our AI index predicts which crypto currencies are most poised\r\n                  to out perform bitcoin, over a period of 1 week, 1 month, and\r\n                  1 year, this purely done based on price movements not on\r\n                  fundamentals. The AI software aggregates data daily and uses\r\n                  past price movement data of all coins along with sentiments\r\n                  over different meida channels to make predictions of coins\r\n                  that are most posied to break out in form of an index.\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-6 col-lg-4\">\r\n            <h1 class=\"card_main__title\">NFTs</h1>\r\n\r\n            <div class=\"card\">\r\n              <div class=\"card-body bg-card-color\">\r\n                <p class=\"card-text\">\r\n                  Grise Token NFts have been underdevelopment and will be\r\n                  launched soon on cardano.Nft holder can get access to our AI\r\n                  products.\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-6 col-lg-4\">\r\n            <h1 class=\"card_main__title\">NFT AI Index</h1>\r\n\r\n            <div class=\"card\">\r\n              <div class=\"card-body bg-card-color\">\r\n                <p class=\"card-text\">\r\n                  Our nft index will start to analyze data on nfts to see which\r\n                  nfts are most poised to break out.\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- documentation section -->\r\n\r\n    <div class=\"col-md-12\">\r\n      <div class=\"infoBox_wrapper\">\r\n        <h1 class=\"pb-5 headings_info\">Documentation</h1>\r\n        <div class=\"row\">\r\n          <div class=\"col-lg-3 col-md-6\">\r\n            <h3 class=\"card_main__title\">Detailed Technical Tokenomics</h3>\r\n            <a\r\n              href=\"https://bnb-grise-assests.s3.us-west-2.amazonaws.com/assets/GRISETokenTechnicalDocumentUpdated.pdf\"\r\n            >\r\n              <img\r\n                class=\"document_iframe\"\r\n                src=\"https://bnb-grise-assests.s3.us-west-2.amazonaws.com/assets/GRISETokenTechnicalDocumentUpdated.png\"\r\n              />\r\n            </a>\r\n          </div>\r\n          <div class=\"col-lg-3 col-md-6\">\r\n            <h3 class=\"card_main__title\">Simplified Tokenomics</h3>\r\n\r\n            <a\r\n              href=\"https://bnb-grise-assests.s3.us-west-2.amazonaws.com/assets/Tokenmoics.pdf\"\r\n            >\r\n              <img\r\n                class=\"document_iframe\"\r\n                src=\"https://bnb-grise-assests.s3.us-west-2.amazonaws.com/assets/Tokenmoics.png\"\r\n              />\r\n            </a>\r\n          </div>\r\n          <div class=\"col-lg-3 col-md-6\">\r\n            <h3 class=\"card_main__title\">Grise AI Overview</h3>\r\n            <a\r\n              href=\"https://bnb-grise-assests.s3.us-west-2.amazonaws.com/assets/AI Overview.pdf\"\r\n            >\r\n              <img\r\n                class=\"document_iframe\"\r\n                src=\"https://bnb-grise-assests.s3.us-west-2.amazonaws.com/assets/AI Overview.png\"\r\n              />\r\n            </a>\r\n          </div>\r\n          <div class=\"col-lg-3 col-md-6\">\r\n            <h3 class=\"card_main__title\">Audit Report</h3>\r\n\r\n            <a\r\n              href=\"https://bnb-grise-assests.s3.us-west-2.amazonaws.com/assets/Audit_Report.pdf\"\r\n            >\r\n              <img\r\n                class=\"document_iframe\"\r\n                src=\"https://bnb-grise-assests.s3.us-west-2.amazonaws.com/assets/Audit_Report.png\"\r\n              />\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- introduction video -->\r\n    <div class=\"col-md-12\">\r\n      <div class=\"infoBox_wrapper\">\r\n        <h1 class=\"pb-5 headings_info\">GRISE Token on BSC</h1>\r\n\r\n        <video class=\"info_video\" controls loop>\r\n          <source\r\n            src=\"https://bnb-grise-assests.s3.us-west-2.amazonaws.com/assets/Grise_Explainer_Video.mp4\"\r\n            type=\"video/mp4\"\r\n          />\r\n        </video>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","/* (ignored) */","<div style=\"background-color: rgb(59, 65, 72)\">\r\n  <div class=\"personal header_div\">\r\n    <div class=\"d-flex wallet-box\">\r\n      <div class=\"d-flex align-items-center\">\r\n        <i\r\n          class=\"fas fa-chalkboard-teacher personal_icon header_icon\"\r\n          style=\"height: 2.9em\"\r\n        ></i>\r\n        <label class=\"personal_title header_title\">Personal Dashboard</label>\r\n      </div>\r\n\r\n      <div class=\"d-flex infowallet\">\r\n        <!-- <a\r\n          href=\"/info\"\r\n          class=\"\r\n            w3-button w3-round-xlarge\r\n            Connect-wallet\r\n            without-accno\r\n            d-flex\r\n            align-items-center\r\n            justify-content-center\r\n            info-btn\r\n          \"\r\n        >\r\n          Information about AI\r\n        </a> -->\r\n        <!-- <button class=\"w3-button w3-round-xlarge Connect-wallet without-accno\">\r\n          Connect to Wallet {{isLogin}}\r\n        </button> -->\r\n        \r\n        <!-- <app-mata-mask-button ></app-mata-mask-button> -->\r\n\r\n\r\n       \r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"sub-end-part\">\r\n    <!-- <div style=\" border-bottom: 2px solid grey;margin-bottom: 40px;\"></div> -->\r\n    <div class=\"row maintab\">\r\n      <div\r\n        class=\"col-xl-4 col-lg-12 col-md-12 col-sm-12 tab\"\r\n        [ngClass]=\"{ 'active-tab': selectedPeriod == 'W' }\"\r\n        (click)=\"onTabClick('W')\"\r\n      >\r\n        <h2>Monthly Stake</h2>\r\n        <div class=\"subtab\">\r\n          <h3>NFT Stake</h3>\r\n          <h1 style=\"font-size: 55px\">{{ weeklyPeriodStake.slotLeft }}</h1>\r\n        </div>\r\n        <br />\r\n        <div class=\"mat-dropdown-container\">\r\n          <mat-select\r\n            placeholder=\"Select Week\"\r\n            [(value)]=\"weekly.periodValue\"\r\n            (selectionChange)=\"changePeriodStake('W')\"\r\n            class=\"mat-dropdown\"\r\n          >\r\n            \r\n            <mat-option [value]=\"1\">1 Month </mat-option>\r\n            <mat-option [value]=\"2\">2 Month </mat-option>\r\n            \r\n          </mat-select>\r\n        </div>\r\n        <div class=\"mat-btn-group-container\">\r\n          <button mat-button class=\"small_button left\" (click)=\"decrement('W')\">\r\n            -\r\n          </button>\r\n          <input\r\n            class=\"small_input\"\r\n            style=\"margin-left: 0px; text-align: center\"\r\n            name=\"weeklyStakeValue\"\r\n            [(ngModel)]=\"weekly.stakeValue\"\r\n            disabled\r\n          />\r\n          <button\r\n            mat-button\r\n            class=\"small_button right\"\r\n            (click)=\"increment('W')\"\r\n          >\r\n            +\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <!-- <div style=\"width: 2%\"></div> -->\r\n      <div\r\n        class=\"col-xl-4 col-lg-12 col-md-12 col-sm-12 tab\"\r\n        [ngClass]=\"{ 'active-tab': selectedPeriod == 'M' }\"\r\n        (click)=\"onTabClick('M')\"\r\n      >\r\n        <h2>3 Month Stake</h2>\r\n        <div class=\"subtab\">\r\n          <h3>NFT Stake</h3>\r\n          <h1 style=\"font-size: 55px\">\r\n            {{ monthlyPeriodStake ? monthlyPeriodStake.slotLeft : 0 }}\r\n          </h1>\r\n        </div>\r\n        <br />\r\n        <div class=\"mat-dropdown-container\">\r\n          <mat-select\r\n            placeholder=\"Select Month\"\r\n            [(value)]=\"monthly.periodValue\"\r\n            (selectionChange)=\"changePeriodStake('M')\"\r\n            class=\"mat-dropdown\"\r\n          >\r\n            <mat-option [value]=\"3\">3 Month</mat-option>\r\n            <mat-option [value]=\"6\">6 Month</mat-option>\r\n            <mat-option [value]=\"9\">9 Month</mat-option>\r\n            \r\n          </mat-select>\r\n        </div>\r\n        <div class=\"mat-btn-group-container\">\r\n          <button mat-button class=\"small_button left\" (click)=\"decrement('M')\">\r\n            -\r\n          </button>\r\n          <input\r\n            class=\"small_input\"\r\n            style=\"margin-left: 0px; text-align: center\"\r\n            name=\"monthlyStakeValue\"\r\n            [(ngModel)]=\"monthly.stakeValue\"\r\n            disabled\r\n          />\r\n          <button\r\n            mat-button\r\n            class=\"small_button right\"\r\n            (click)=\"increment('M')\"\r\n          >\r\n            +\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <!-- <div style=\"width: 2%\"></div> -->\r\n      <div\r\n        class=\"col-xl-4 col-lg-12 col-md-12 col-sm-12 tab\"\r\n        [ngClass]=\"{ 'active-tab': selectedPeriod == 'Y' }\"\r\n        (click)=\"onTabClick('Y')\"\r\n      >\r\n        <h2>Yearly Stake</h2>\r\n        <div class=\"subtab\">\r\n          <h3>NFT Stake</h3>\r\n          <h1 style=\"font-size: 55px\">{{ yearlyPeriodStake.slotLeft }}</h1>\r\n        </div>\r\n        <br />\r\n        <div class=\"mat-dropdown-container\">\r\n          <mat-select\r\n            placeholder=\"Select Year\"\r\n            [(value)]=\"yearly.periodValue\"\r\n            (selectionChange)=\"changePeriodStake('Y')\"\r\n            class=\"mat-dropdown\"\r\n          >\r\n            <mat-option [value]=\"1\">1 Year </mat-option>\r\n            <mat-option [value]=\"2\">2 Year </mat-option>\r\n            \r\n          </mat-select>\r\n        </div>\r\n        <div class=\"mat-btn-group-container\">\r\n          <button mat-button class=\"small_button left\" (click)=\"decrement('Y')\">\r\n            -\r\n          </button>\r\n          <input\r\n            class=\"small_input\"\r\n            style=\"margin-left: 0px; text-align: center\"\r\n            name=\"yearlyStakeValue\"\r\n            [(ngModel)]=\"yearly.stakeValue\"\r\n            disabled\r\n          />\r\n          <button\r\n            mat-button\r\n            class=\"small_button right\"\r\n            (click)=\"increment('Y')\"\r\n          >\r\n            +\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div>\r\n      <button\r\n        type=\"button\"\r\n        class=\"btn btn-primary staking_button\"\r\n        [disabled]=\"checkValueWithGriseBalance()\"\r\n        (click)=\"createGriseStake()\"\r\n      >\r\n       \r\n        Create Stake</button>\r\n    </div>\r\n    <div class=\"line-splitter\"></div>\r\n    <div>\r\n      <table style=\"margin-left: auto; margin-right: auto; color: #ffffff\">\r\n        <tr>\r\n          <td>Time to Claim Weekly Reward</td>\r\n          <td>\r\n            <a class=\"progress\">\r\n              <a\r\n                class=\"progress-bar\"\r\n                role=\"progressbar\"\r\n                [attr.aria-valuenow]=\"weeklyDaysProgress\"\r\n                aria-valuemin=\"0\"\r\n                aria-valuemax=\"100\"\r\n                [style.width.%]=\"weeklyDaysProgress\"\r\n              ></a>\r\n            </a>\r\n            <span *ngIf=\"weeklyDaysLeft == 0\" class=\"progress-text\"\r\n              >(Claim Reward)</span\r\n            >\r\n            <span *ngIf=\"weeklyDaysLeft != 0\" class=\"progress-text\"\r\n              >({{ weeklyDaysLeft }} days left)</span\r\n            >\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>Time to Claim Monthly Reward</td>\r\n          <td>\r\n            <a class=\"progress\">\r\n              <a\r\n                class=\"progress-bar\"\r\n                role=\"progressbar\"\r\n                [attr.aria-valuenow]=\"monthlyDaysProgress\"\r\n                aria-valuemin=\"0\"\r\n                aria-valuemax=\"100\"\r\n                [style.width.%]=\"monthlyDaysProgress\"\r\n              ></a>\r\n            </a>\r\n            <span *ngIf=\"monthlyDaysLeft == 0\" class=\"progress-text\"\r\n              >(Claim Reward)</span\r\n            >\r\n            <span *ngIf=\"monthlyDaysLeft != 0\" class=\"progress-text\"\r\n              >({{ monthlyDaysLeft }} days left)</span\r\n            >\r\n          </td>\r\n        </tr>\r\n      </table>\r\n      <div class=\"line-splitter\"></div>\r\n    </div>\r\n    <!-- class=\"tab_slot\" -->\r\n    <div style=\"margin-left: 2%\">\r\n      <div *ngFor=\"let stakeTran of stakeTransactions\">\r\n        <div class=\"tab_slot\">\r\n          <div>\r\n            <table\r\n              style=\"margin-left: auto; margin-right: auto; color: #ffffff\"\r\n            >\r\n              <tr style=\"font-size: 16px\">\r\n                <td colspan=\"2\" class=\"slot_title\">\r\n                  {{ stakeTran.stakeTypeName }}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td class=\"personaltd\">Stake Created</td>\r\n                <td class=\"personaltd1\">\r\n                  <span>\r\n                    {{ stakeTran.stakeCreatedOn | date }} ({{\r\n                      stakeTran.stakeBasicData?.lockDays\r\n                    }}\r\n                    days)\r\n                  </span>\r\n                </td>\r\n                <br />\r\n              </tr>\r\n              <tr\r\n                *ngIf=\"\r\n                  stakeTran.stakeProgress &&\r\n                  stakeTran.stakeBasicData &&\r\n                  stakeTran.stakeBasicData.isActive\r\n                \"\r\n              >\r\n                <td class=\"personaltd\">Stake Progress</td>\r\n                <td class=\"personaltd1\">\r\n                  <a class=\"progress\">\r\n                    <a\r\n                      class=\"progress-bar\"\r\n                      role=\"progressbar\"\r\n                      [attr.aria-valuenow]=\"stakeTran.stakeProgress\"\r\n                      aria-valuemin=\"0\"\r\n                      aria-valuemax=\"100\"\r\n                      [style.width.%]=\"stakeTran.stakeProgress\"\r\n                    ></a>\r\n                  </a>\r\n                </td>\r\n              </tr>\r\n              <tr\r\n                *ngIf=\"\r\n                  stakeTran.stakeBasicData && stakeTran.stakeBasicData.isActive\r\n                \"\r\n              >\r\n                <td class=\"personaltd\">Lock Up</td>\r\n                <td class=\"personaltd1\">\r\n                  <span\r\n                    >{{ stakeTran.stakeLockUpOn | date }} ({{\r\n                      stakeTran.stakeLockUpDaysLeft\r\n                    }}\r\n                    days left)</span\r\n                  >\r\n                </td>\r\n              </tr>\r\n              <tr\r\n                *ngIf=\"\r\n                  stakeTran.stakeBasicData &&\r\n                  stakeTran.stakeBasicData.scrapeDay != 0\r\n                \"\r\n              >\r\n                <td class=\"personaltd\">Scraped On</td>\r\n                <td class=\"personaltd1\">\r\n                  <span>{{ stakeTran.stakeScrapeOn | date }}</span>\r\n                </td>\r\n              </tr>\r\n              <tr\r\n                *ngIf=\"\r\n                  stakeTran.stakeBasicData &&\r\n                  stakeTran.stakeBasicData.closeDay != 0\r\n                \"\r\n              >\r\n                <td class=\"personaltd\">Closed On</td>\r\n                <td class=\"personaltd1\">\r\n                  <span>{{ stakeTran.stakeCloseOn | date }}</span>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td class=\"personaltd\">Stake ID</td>\r\n                <td class=\"trancate personaltd1\">{{ stakeTran.stakeId }}</td>\r\n              </tr>\r\n              <tr>\r\n                <td class=\"personaltd\">Amount Staked</td>\r\n                <td class=\"personaltd1\">\r\n                  <span>{{ stakeTran.stakeBasicData?.stakedAmount }}</span>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td class=\"personaltd\">Transaction Fees Reward</td>\r\n                <td class=\"personaltd1\">\r\n                  <span\r\n                    >{{\r\n                      stakeTran.stakeRewardData?.transcRewardAmount\r\n                        | number: \"1.0-2\"\r\n                    }}\r\n                    Grise</span\r\n                  >\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td class=\"personaltd\">Cancellation Penalty Reward</td>\r\n                <td class=\"personaltd1\">\r\n                  <span\r\n                    >{{\r\n                      stakeTran.stakeRewardData?.penaltyRewardAmount\r\n                        | number: \"1.0-2\"\r\n                    }}\r\n                    Grise</span\r\n                  >\r\n                </td>\r\n              </tr>\r\n              <tr\r\n                *ngIf=\"\r\n                  stakeTran.stakeBasicData &&\r\n                  stakeTran.stakeBasicData.stakeType != 0\r\n                \"\r\n              >\r\n                <td class=\"personaltd\">Reservoir Reward</td>\r\n                <td class=\"personaltd1\">\r\n                  <span\r\n                    >{{\r\n                      stakeTran.stakeRewardData?.reservoirRewardAmount\r\n                        | number: \"1.0-2\"\r\n                    }}\r\n                    Grise</span\r\n                  >\r\n                </td>\r\n              </tr>\r\n              <tr *ngIf=\"false\">\r\n                <td class=\"personaltd\">Inflation Reward</td>\r\n                <td class=\"personaltd1\">\r\n                  <span\r\n                    >{{\r\n                      stakeTran.stakeRewardData?.inflationRewardAmount\r\n                        | number: \"1.0-2\"\r\n                    }}\r\n                    Grise</span\r\n                  >\r\n                </td>\r\n              </tr>\r\n            </table>\r\n          </div>\r\n          <div *ngIf=\"stakeTran.stakeBasicData?.isActive\">\r\n            <button\r\n              type=\"button\"\r\n              [disabled]=\"checkScarpeReward(stakeTran) ? null : 'disabled'\"\r\n              class=\"btn btn-primary\"\r\n              data-toggle=\"modal\"\r\n              data-target=\"#confirmModal\"\r\n              (click)=\"scrapeReward(stakeTran)\"\r\n            >\r\n              Scarpe Reward\r\n            </button>\r\n            <button\r\n              *ngIf=\"stakeTran?.stakeBasicData?.isMature\"\r\n              type=\"button\"\r\n              class=\"btn btn-primary stake_btn\"\r\n              (click)=\"endStake(stakeTran)\"\r\n            >\r\n              End Stake\r\n            </button>\r\n            <button\r\n              *ngIf=\"!stakeTran?.stakeBasicData?.isMature\"\r\n              type=\"button\"\r\n              class=\"btn btn-primary stake_btn\"\r\n              data-toggle=\"modal\"\r\n              data-target=\"#confirmModal\"\r\n              (click)=\"cancelStake(stakeTran)\"\r\n            >\r\n              Cancel Stake\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div class=\"line-splitter\"></div>\r\n      </div>\r\n    </div>\r\n    <!-- <div *ngIf=\"stakeTransactions\" class=\"line-splitter\"></div> -->\r\n    <div *ngIf=\"!reachMaxRecords\">\r\n      <button\r\n        type=\"button\"\r\n        class=\"btn btn-primary staking_button\"\r\n        (click)=\"loadMore()\"\r\n      >\r\n        Load more...\r\n      </button>\r\n    </div>\r\n    <div class=\"grise\">\r\n      <!-- <img style=\"width: 250px\" src=\"../../../assets/logo.png\"> -->\r\n    </div>\r\n  </div>\r\n</div>\r\n<app-confirm-dialog\r\n  [data]=\"data\"\r\n  (onConfirm)=\"onConfirm($event)\"\r\n></app-confirm-dialog>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { StakeTransactionData } from \"src/app/models/stake-transaction-data\";\r\nimport { LocalDataUpdateService } from \"src/app/services/local-data-update.service\";\r\nimport { SharedService } from \"src/app/services/shared.service\";\r\nimport { StakingTokenContractService } from \"src/app/services/staking-token-contract.service\";\r\nimport { ConfirmDialogComponent } from \"../../../helper/confirm-dialog/confirm-dialog.component\";\r\nimport { PersonalPeriodStakeSetup } from \"../../../models/personal-period-stake-setup\";\r\nimport { PersonalStakeData } from \"../../../models/personal-stake-data\";\r\nimport { ExchangeRateData } from \"./../../../models/exchage-rate-data\";\r\nimport { ContractService } from \"./../../../services/contract.service\";\r\nimport { GriseTokenContractService } from \"./../../../services/grise-token-contract.service\";\r\nimport { MinAbiDataContractService } from \"./../../../services/minabi-data-contract.service\";\r\n\r\n\r\n@Component({\r\n  selector: \"app-personal\",\r\n  templateUrl: \"./personal.component.html\",\r\n  styleUrls: [\"./personal.component.scss\"],\r\n})\r\nexport class PersonalComponent implements OnInit {\r\n  isLogin = false;\r\n\r\n  accountNo = 0;\r\n  totalBalance = 0;\r\n  refAccountNo = \"\";\r\n  griseBalance = 0;\r\n  currentLPDay = 0;\r\n  weeklyPeriodStake: PersonalPeriodStakeSetup;\r\n  monthlyPeriodStake: PersonalPeriodStakeSetup;\r\n  yearlyPeriodStake: PersonalPeriodStakeSetup;\r\n  selectedPeriod: string;\r\n  weekly = new PersonalStakeData();\r\n  monthly = new PersonalStakeData();\r\n  yearly = new PersonalStakeData();\r\n  stakeTransactions: StakeTransactionData[] = [];\r\n  pageNo = 0;\r\n  perPageRecords = 10;\r\n  reachMaxRecords = false;\r\n  weeklyDaysLeft = 0;\r\n  weeklyDaysProgress = 0;\r\n  monthlyDaysLeft = 0;\r\n  monthlyDaysProgress = 0;\r\n  etherExchangeRate: ExchangeRateData;\r\n  griseValidationText: string;\r\n  ethValidationText: string;\r\n  data: any;\r\n  router: any;\r\n  toastrService: any;\r\n\r\n  constructor(\r\n    private sharedService: SharedService,\r\n    private localDataUpdateService: LocalDataUpdateService,\r\n    private stakingTokenContractService: StakingTokenContractService,\r\n    private griseTokenContractService: GriseTokenContractService,\r\n    private contractService: ContractService,\r\n    private minAbiDataContractService: MinAbiDataContractService,\r\n    private toastr: ToastrService //public dialog: MatDialog\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.etherExchangeRate = {\r\n      regularRate: 0,\r\n      reverseRate: 0,\r\n      reverseRateWithoutDecimal: 0,\r\n    };\r\n    this.griseTokenContractService\r\n      .timeToClaimWeeklyReward()\r\n      .then((weeklyDaysLeft) => {\r\n        this.weeklyDaysLeft = +weeklyDaysLeft;\r\n        this.weeklyDaysProgress = ((7 - this.weeklyDaysLeft) / 7) * 100;\r\n      });\r\n    this.griseTokenContractService\r\n      .timeToClaimMonthlyReward()\r\n      .then((monthlyDaysLeft) => {\r\n        this.monthlyDaysLeft = +monthlyDaysLeft;\r\n        this.monthlyDaysProgress = ((28 - this.monthlyDaysLeft) / 28) * 100;\r\n      });\r\n    this.localDataUpdateService.isStakeTransactionsDataUpdated.subscribe(() => {\r\n      this.reachMaxRecords = false;\r\n      this.stakeTransactions = [];\r\n      this.getStakeTransactions();\r\n      this.sharedService.updatePersonalPeriodStakeSlotLeft();\r\n    });\r\n    this.localDataUpdateService.isPersonalPeriodStakeSlotLeftDataUpdated.subscribe(\r\n      () => {\r\n        this.assignStakeSetup();\r\n      }\r\n    );\r\n    this.localDataUpdateService.isStakePaginationDataUpdated.subscribe(\r\n      (stakeId) => {\r\n        if (stakeId) {\r\n          this.updateStakeDataById(stakeId);\r\n        }\r\n      }\r\n    );\r\n    // this.connectWithCardanoWallet();\r\n  }\r\n\r\n  assignStakeSetup() {\r\n    this.reset();\r\n    this.weeklyPeriodStake = this.getPeriodStake(\"W\", \"\");\r\n    this.yearlyPeriodStake = this.getPeriodStake(\"Y\", \"\");\r\n    this.monthlyPeriodStake = this.getPeriodStake(\r\n      \"M\",\r\n      this.monthly.periodValue.toString()\r\n    );\r\n\r\n    this.weekly.stakeValue =\r\n      this.weeklyPeriodStake.slotLeft == 0\r\n        ? 0\r\n        : this.weeklyPeriodStake.stakeStep;\r\n    this.monthly.stakeValue =\r\n      this.monthlyPeriodStake.slotLeft == 0\r\n        ? 0\r\n        : this.monthlyPeriodStake.stakeStep;\r\n    this.yearly.stakeValue =\r\n      this.yearlyPeriodStake.slotLeft == 0\r\n        ? 0\r\n        : this.yearlyPeriodStake.stakeStep;\r\n  }\r\n\r\n  reset() {\r\n    this.selectedPeriod = \"\";\r\n    this.weekly = new PersonalStakeData();\r\n    this.monthly = new PersonalStakeData();\r\n    this.yearly = new PersonalStakeData();\r\n    this.weekly.periodValue = 1;\r\n    this.monthly.periodValue = 3;\r\n    this.yearly.periodValue = 1;\r\n  }\r\n\r\n  changePeriodStake(periodType: string) {\r\n    if (periodType == \"M\") {\r\n      this.monthlyPeriodStake = this.getPeriodStake(\r\n        periodType,\r\n        this.monthly.periodValue.toString()\r\n      );\r\n      this.monthly.stakeValue =\r\n        this.monthlyPeriodStake.slotLeft == 0\r\n          ? 0\r\n          : this.monthlyPeriodStake.stakeStep;\r\n    }\r\n  }\r\n\r\n  getPeriodStake(\r\n    periodType: string,\r\n    additionalValue: string\r\n  ): PersonalPeriodStakeSetup {\r\n    const foundPeriodStake = this.sharedService.allPersonalPeriodStakes.filter(\r\n      (val) =>\r\n        val.periodType == periodType && val.additionalValue == additionalValue\r\n    );\r\n    if (foundPeriodStake.length > 0) {\r\n      return foundPeriodStake[0];\r\n    }\r\n    return new PersonalPeriodStakeSetup();\r\n  }\r\n\r\n  onTabClick(periodType: string) {\r\n    this.selectedPeriod = periodType;\r\n  }\r\n\r\n  increment(periodType: string) {\r\n    this.incrementDecrement(periodType, 1);\r\n  }\r\n\r\n  decrement(periodType: string) {\r\n    this.incrementDecrement(periodType, -1);\r\n  }\r\n\r\n  incrementDecrement(periodType: string, plusMinus: number) {\r\n    if (periodType == \"W\") {\r\n      this.weekly.stakeValue = this.validateMinMaxValues(\r\n        this.weekly.stakeValue,\r\n        this.weeklyPeriodStake,\r\n        plusMinus\r\n      );\r\n    } else if (periodType == \"M\" && this.monthlyPeriodStake != null) {\r\n      this.monthly.stakeValue = this.validateMinMaxValues(\r\n        this.monthly.stakeValue,\r\n        this.monthlyPeriodStake,\r\n        plusMinus\r\n      );\r\n    } else if (periodType == \"Y\") {\r\n      this.yearly.stakeValue = this.validateMinMaxValues(\r\n        this.yearly.stakeValue,\r\n        this.yearlyPeriodStake,\r\n        plusMinus\r\n      );\r\n    }\r\n  }\r\n\r\n  validateMinMaxValues(\r\n    currentValue: number,\r\n    stakeSetting: PersonalPeriodStakeSetup,\r\n    plusMinus: number\r\n  ): number {\r\n    if (stakeSetting.slotLeft == 0) {\r\n      currentValue = 0;\r\n    } else {\r\n      currentValue =\r\n        (currentValue == null ? 0 : +currentValue) +\r\n        stakeSetting.stakeStep * plusMinus;\r\n      if (currentValue < stakeSetting.stakeStep) {\r\n        currentValue = stakeSetting.stakeStep;\r\n      }\r\n      if (currentValue > stakeSetting.stakeStep * stakeSetting.slotLeft) {\r\n        currentValue = stakeSetting.stakeStep * stakeSetting.slotLeft;\r\n      }\r\n    }\r\n    return currentValue;\r\n  }\r\n\r\n  checkValueWithGriseBalance(): boolean {\r\n    if (!this.selectedPeriod) {\r\n      return true;\r\n    }\r\n    if (this.griseValidationText) {\r\n      this.griseValidationText = \"\";\r\n    }\r\n    const selectedStakeData = this.getSelectedValues();\r\n    if (selectedStakeData.periodValue == undefined) {\r\n      return true;\r\n    }\r\n    if (\r\n      selectedStakeData.periodValue == 0 ||\r\n      selectedStakeData.stakeValue == 0\r\n    ) {\r\n      return true;\r\n    }\r\n    if (selectedStakeData.stakeValue > this.contractService.totalGriseBalance) {\r\n      this.griseValidationText = \"Insufficient Balance\";\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  checkValueWithEthBalance(): boolean {\r\n    if (!this.selectedPeriod) {\r\n      return true;\r\n    }\r\n    if (this.ethValidationText) {\r\n      this.ethValidationText = \"\";\r\n    }\r\n    const selectedStakeData = this.getSelectedValues();\r\n    if (selectedStakeData.periodValue == undefined) {\r\n      return true;\r\n    }\r\n    if (\r\n      selectedStakeData.periodValue == 0 ||\r\n      selectedStakeData.stakeValue == 0\r\n    ) {\r\n      return true;\r\n    }\r\n    if (this.etherExchangeRate.reverseRate == 0) {\r\n      return true;\r\n    }\r\n    const ethAmount = this.getEthAmountFromGrise(selectedStakeData.stakeValue);\r\n    if (ethAmount > this.contractService.totalBalance) {\r\n      this.ethValidationText = \"Insufficient Balance\";\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  getSelectedValues(): PersonalStakeData {\r\n    if (this.selectedPeriod == \"W\") {\r\n      this.weekly.stakeType = 0;\r\n      this.weekly.days = this.weekly.periodValue * 7;\r\n      return this.weekly;\r\n    } else if (this.selectedPeriod == \"M\") {\r\n      this.monthly.stakeType = 1;\r\n      this.monthly.days = this.monthly.periodValue * 28;\r\n      return this.monthly;\r\n    } else if (this.selectedPeriod == \"Y\") {\r\n      this.yearly.stakeType = 2;\r\n      this.yearly.days = this.yearly.periodValue * 12 * 28;\r\n      return this.yearly;\r\n    }\r\n    return new PersonalStakeData();\r\n  }\r\n\r\n  createGriseStake() {\r\n    if (this.checkValueWithGriseBalance()) {\r\n      return;\r\n    }\r\n\r\n    const selectedStakeData = this.getSelectedValues();\r\n    if (selectedStakeData.periodValue > 0 && selectedStakeData.stakeValue > 0) {\r\n      this.stakingTokenContractService.createStakeGrise(\r\n        selectedStakeData.stakeValue,\r\n        selectedStakeData.stakeType,\r\n        selectedStakeData.days\r\n      );\r\n    }\r\n  }\r\n\r\n  createEthStake() {\r\n    if (this.checkValueWithEthBalance()) {\r\n      return;\r\n    }\r\n\r\n    const selectedStakeData = this.getSelectedValues();\r\n    if (selectedStakeData.periodValue > 0 && selectedStakeData.stakeValue > 0) {\r\n      const etherLargeAmount = this.getEthLargeAmountFromGrise(\r\n        selectedStakeData.stakeValue\r\n      );\r\n      this.stakingTokenContractService.createStakeWithETH(\r\n        selectedStakeData.stakeValue,\r\n        selectedStakeData.stakeType,\r\n        selectedStakeData.days,\r\n        etherLargeAmount\r\n      );\r\n    }\r\n  }\r\n\r\n  getEthAmountFromGrise(tokenAmount: number): number {\r\n    let etherAmount = tokenAmount * 1.04;\r\n    etherAmount = etherAmount * this.etherExchangeRate.reverseRate * 1.04;\r\n    return etherAmount;\r\n  }\r\n\r\n  getEthLargeAmountFromGrise(tokenAmount: number): string {\r\n    let etherLargeAmount = tokenAmount * 1.04;\r\n    etherLargeAmount =\r\n      etherLargeAmount *\r\n      this.etherExchangeRate.reverseRateWithoutDecimal *\r\n      1.04;\r\n    return etherLargeAmount.toString();\r\n  }\r\n\r\n  loadMore() {\r\n    if (this.reachMaxRecords) {\r\n      return;\r\n    }\r\n\r\n    if (this.stakeTransactions.length == 0) {\r\n      this.pageNo = 0;\r\n    } else {\r\n      this.pageNo++;\r\n    }\r\n\r\n    this.getStakeTransactions();\r\n  }\r\n\r\n  getStakeTransactions() {\r\n    const pageStartRecord = this.pageNo * this.perPageRecords;\r\n    this.stakingTokenContractService\r\n      .getStakesPagination(pageStartRecord, this.perPageRecords)\r\n      .then((stakeIds) => {\r\n        if (stakeIds != null) {\r\n          stakeIds.forEach((stakeId: string) => {\r\n            const existStakeTransaction = this.stakeTransactions.filter(\r\n              (s) => s.stakeId == stakeId\r\n            );\r\n            if (existStakeTransaction.length == 0) {\r\n              this.stakeTransactions.push({ stakeId });\r\n              this.updateStakeDataById(stakeId);\r\n            } else {\r\n              this.reachMaxRecords = true;\r\n            }\r\n          });\r\n          if (this.stakeTransactions.length % this.perPageRecords != 0) {\r\n            this.reachMaxRecords = true;\r\n          } else if (this.stakeTransactions.length == 0) {\r\n            this.reachMaxRecords = true;\r\n          }\r\n        } else {\r\n          this.reachMaxRecords = true;\r\n        }\r\n      });\r\n  }\r\n\r\n  updateStakeDataById(stakeId: string) {\r\n    const stakeIds: string[] = [stakeId];\r\n    Promise.all(\r\n      stakeIds.map(async (stakeId: string) => {\r\n        const stakeBasicData =\r\n          await this.stakingTokenContractService.checkStakeByID(stakeId);\r\n        const stakeRewardData =\r\n          await this.stakingTokenContractService.checkStakeRewards(stakeId);\r\n\r\n        return {\r\n          stakeId,\r\n          stakeBasicData: stakeBasicData!,\r\n          stakeRewardData: stakeRewardData!,\r\n        };\r\n      })\r\n    ).then((newStakeTransactions: StakeTransactionData[]) => {\r\n      if (newStakeTransactions.length > 0) {\r\n        const existStakeTransaction = this.stakeTransactions.filter(\r\n          (s) => s.stakeId == stakeId\r\n        );\r\n        if (existStakeTransaction.length > 0) {\r\n          existStakeTransaction[0].stakeBasicData =\r\n            newStakeTransactions[0].stakeBasicData;\r\n          existStakeTransaction[0].stakeRewardData =\r\n            newStakeTransactions[0].stakeRewardData;\r\n\r\n          existStakeTransaction[0].stakeCreatedOn =\r\n            this.sharedService.getDateAdd(\r\n              this.sharedService.launchTime,\r\n              existStakeTransaction[0].stakeBasicData?.startDay\r\n            );\r\n          existStakeTransaction[0].stakeLockUpOn =\r\n            this.sharedService.getDateAdd(\r\n              this.sharedService.launchTime,\r\n              existStakeTransaction[0].stakeBasicData?.finalDay\r\n            );\r\n          const currentDay = this.sharedService.getDateDiff(\r\n            new Date(this.sharedService.launchTime),\r\n            new Date()\r\n          );\r\n          const finalDay = existStakeTransaction[0].stakeBasicData\r\n            ? existStakeTransaction[0].stakeBasicData.finalDay\r\n            : 0;\r\n          const lockDays = existStakeTransaction[0].stakeBasicData\r\n            ? existStakeTransaction[0].stakeBasicData.lockDays\r\n            : 0;\r\n\r\n          existStakeTransaction[0].stakeLockUpDaysLeft = finalDay - currentDay;\r\n          if (existStakeTransaction[0].stakeLockUpDaysLeft <= 0) {\r\n            existStakeTransaction[0].stakeLockUpDaysLeft = 0;\r\n          }\r\n          if (lockDays != 0) {\r\n            existStakeTransaction[0].stakeProgress =\r\n              ((lockDays - existStakeTransaction[0].stakeLockUpDaysLeft) /\r\n                lockDays) *\r\n              100;\r\n          } else {\r\n            existStakeTransaction[0].stakeProgress = 0;\r\n          }\r\n          if (existStakeTransaction[0].stakeProgress >= 100) {\r\n            existStakeTransaction[0].stakeProgress = 100;\r\n          }\r\n          if (existStakeTransaction[0].stakeBasicData?.stakeType == 0) {\r\n            existStakeTransaction[0].stakeTypeName = \"Short-term Stake\";\r\n          } else if (existStakeTransaction[0].stakeBasicData?.stakeType == 1) {\r\n            existStakeTransaction[0].stakeTypeName = \"Medium-term Stake\";\r\n          } else if (existStakeTransaction[0].stakeBasicData?.stakeType == 2) {\r\n            existStakeTransaction[0].stakeTypeName = \"Long-term Stake\";\r\n          }\r\n          if (existStakeTransaction[0].stakeBasicData?.scrapeDay != 0) {\r\n            existStakeTransaction[0].stakeScrapeOn =\r\n              this.sharedService.getDateAdd(\r\n                this.sharedService.launchTime,\r\n                existStakeTransaction[0].stakeBasicData?.scrapeDay\r\n              );\r\n          }\r\n          if (existStakeTransaction[0].stakeBasicData?.closeDay != 0) {\r\n            existStakeTransaction[0].stakeCloseOn =\r\n              this.sharedService.getDateAdd(\r\n                this.sharedService.launchTime,\r\n                existStakeTransaction[0].stakeBasicData?.closeDay\r\n              );\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  getTotalScrapeReward(stakeTransaction: StakeTransactionData): number {\r\n    if (stakeTransaction.stakeRewardData) {\r\n      const scrapeReward =\r\n        stakeTransaction.stakeRewardData.penaltyRewardAmount +\r\n        stakeTransaction.stakeRewardData.transcRewardAmount +\r\n        stakeTransaction.stakeRewardData.reservoirRewardAmount +\r\n        stakeTransaction.stakeRewardData.inflationRewardAmount;\r\n      return scrapeReward;\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  checkScarpeReward(stakeTransaction: StakeTransactionData): boolean {\r\n    const totalScrapeReward = this.getTotalScrapeReward(stakeTransaction);\r\n    if (totalScrapeReward != 0) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  scrapeReward(stakeTransaction: StakeTransactionData) {\r\n    if (!this.checkScarpeReward(stakeTransaction)) {\r\n      return;\r\n    }\r\n\r\n    const totalScrapeReward = this.getTotalScrapeReward(stakeTransaction);\r\n    let haveMultiReward = true;\r\n    if (stakeTransaction.stakeRewardData) {\r\n      if (\r\n        totalScrapeReward ==\r\n        stakeTransaction.stakeRewardData.penaltyRewardAmount\r\n      ) {\r\n        haveMultiReward = false;\r\n      }\r\n      if (\r\n        totalScrapeReward == stakeTransaction.stakeRewardData.transcRewardAmount\r\n      ) {\r\n        haveMultiReward = false;\r\n      }\r\n      if (\r\n        totalScrapeReward ==\r\n        stakeTransaction.stakeRewardData.reservoirRewardAmount\r\n      ) {\r\n        haveMultiReward = false;\r\n      }\r\n      if (\r\n        totalScrapeReward ==\r\n        stakeTransaction.stakeRewardData.inflationRewardAmount\r\n      ) {\r\n        haveMultiReward = false;\r\n      }\r\n    }\r\n    this.data = {\r\n      dialogType: 1,\r\n      transaction: stakeTransaction,\r\n      totalScrapeReward,\r\n      haveMultiReward,\r\n    };\r\n    // const dialogRef = this.dialog.open(ConfirmDialogComponent, {\r\n    //   width: '525px',\r\n    //   data: { dialogType: 1, transaction: stakeTransaction, totalScrapeReward, haveMultiReward }\r\n    // });\r\n\r\n    // dialogRef.afterClosed().subscribe((result: StakeTransactionData) => {\r\n    //   if (result) {\r\n    //     this.stakingTokenContractService.scrapeReward(result.stakeId);\r\n    //   }\r\n    // });\r\n  }\r\n\r\n  endStake(stakeTransaction: StakeTransactionData) {\r\n    this.stakingTokenContractService.endStake(stakeTransaction.stakeId);\r\n  }\r\n\r\n  cancelStake(stakeTransaction: StakeTransactionData) {\r\n    this.data = { dialogType: 0, transaction: stakeTransaction };\r\n\r\n    // const dialogRef = this.dialog.open(ConfirmDialogComponent, {\r\n    //   width: '450px',\r\n    //   data: { dialogType: 0, transaction: stakeTransaction }\r\n    // });\r\n\r\n    // dialogRef.afterClosed().subscribe((result: StakeTransactionData) => {\r\n    //   if (result) {\r\n    //     this.stakingTokenContractService.endStake(result.stakeId);\r\n    //   }\r\n    // });\r\n  }\r\n\r\n  onConfirm(event: any) {\r\n    if (event && event.dialogType == 0) {\r\n      this.stakingTokenContractService.endStake(event.transaction.stakeId);\r\n    } else if (event && event.dialogType == 1) {\r\n      this.stakingTokenContractService.scrapeReward(event.transaction.stakeId);\r\n    }\r\n  }\r\n  openReferralLinkDialog() {\r\n    this.localDataUpdateService.forceUpdateDialogData(true);\r\n    \r\n  }\r\n  async connectToWallet() {\r\n    await this.refetchBalance();\r\n    await this.afterConnectToWallet();\r\n  }\r\n  afterConnectToWallet() {\r\n    throw new Error(\"Method not implemented.\");\r\n  }\r\n  assignGlobalValues() {\r\n    this.isLogin = this.contractService.isLogin;\r\n    console.log(this.isLogin , '@this.isLoginPersonal')\r\n    this.accountNo = this.contractService.accountNo;\r\n    this.totalBalance = this.contractService.totalBalance;\r\n    this.griseBalance = this.contractService.totalGriseBalance;\r\n  }\r\n  async refetchBalance() {\r\n    await this.contractService.connectToWallet();\r\n    await this.griseTokenContractService.getGriseBalance();\r\n    this.assignGlobalValues();\r\n  }\r\n  logout() {\r\n    this.contractService.isLogin = false;\r\n    this.contractService.accountNo = 0;\r\n    this.contractService.totalBalance = 0;\r\n    this.contractService.totalGriseBalance = 0;\r\n    this.contractService.isContractLoadOnNetwork = false;\r\n    this.assignGlobalValues();\r\n    \r\n    this.toastrService.success(\"Sucessfully logout.\");\r\n    this.router.navigate([\"/\"]);\r\n  }\r\n  openDialog() {\r\n    this.localDataUpdateService.forceUpdateDialogData(true);\r\n    //this.dialog.open(DialogComponent);\r\n  }\r\n  \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoaderService {\r\n  \r\n  public isLoading = new BehaviorSubject(false);\r\n  constructor() { }\r\n}\r\n","import { Component, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { SharedService } from 'src/app/services/shared.service';\r\nimport { environment as env } from '../../../environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-launch-timer-dialog',\r\n  templateUrl: './launch-timer-dialog.component.html',\r\n  styleUrls: ['./launch-timer-dialog.component.scss']\r\n})\r\nexport class LaunchTimerDialogComponent implements OnInit {\r\n\r\n  @Input() showLaunchTimerDialog: boolean;\r\n  @ViewChild('closebutton') closebutton: any;\r\n  launchOn = env.launchTimeStamp;\r\n  timeLeft: string;\r\n\r\n  constructor(private sharedService: SharedService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.launchTimer();\r\n  }\r\n\r\n  launchTimer() {\r\n    this.timeLeft = this.sharedService.getTimeLeft(this.launchOn);\r\n    const intervalId = setInterval(() => {\r\n      this.timeLeft = this.sharedService.getTimeLeft(this.launchOn);\r\n      if (this.timeLeft == 'EXPIRED') {\r\n        this.timeLeft = 'Launched';\r\n        this.closebutton?.nativeElement.click();\r\n        clearInterval(intervalId);\r\n      }\r\n    }, 1000);\r\n  }\r\n}\r\n","<div *ngIf=\"showLaunchTimerDialog\" style=\"color: black;\" class=\"modal fade\" id=\"launchTimerModal\" data-backdrop=\"static\"\r\n    data-keyboard=\"true\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"launchTimerModal\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-dialog-centered modal-md\" role=\"document\">\r\n        <div class=\"modal-content dialog-container\">\r\n            <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\" id=\"launchTimerModalLabel\">\r\n                    Launch on mainnet</h5>\r\n                <h3 class=\"launch-date\">Apr 30, 2021</h3>\r\n                <a class=\"btn-close\" href=\"javascript:void(0)\" #closebutton data-dismiss=\"modal\">X</a>\r\n            </div>\r\n            <div class=\"modal-body\" #container>\r\n                <div class=\"timebox\">\r\n                    <button class=\"icon-box\">\r\n                        <i class=\"fa fa-clock\" style=\"font-size: 30px;\" aria-hidden=\"true\"></i>\r\n                    </button>\r\n                    <span class=\"digit\">\r\n                        <span class=\"timer-text\">{{ timeLeft }}</span>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <h4 class=\"footer-text\">Currently we have deployed on bsc Testnet</h4>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { LocalDataUpdateService } from 'src/app/services/local-data-update.service';\r\nimport { ReferralLinkDialogComponent } from './referral-link-dialog/referral-link-dialog.component';\r\n\r\n@Component({\r\n  selector: 'app-tokeninfo',\r\n  templateUrl: './tokeninfo.component.html',\r\n  styleUrls: ['./tokeninfo.component.scss']\r\n})\r\nexport class TokeninfoComponent implements OnInit {\r\n\r\n  constructor(public dialog: MatDialog,\r\n    private localDataUpdateService: LocalDataUpdateService) { }\r\n\r\n  ngOnInit(): void { }\r\n\r\n  public navigateToSection(section: string) {\r\n    window.location.hash = '';\r\n    window.location.hash = section;\r\n  }\r\n\r\n  openReferralLinkDialog() {\r\n    this.localDataUpdateService.forceUpdateDialogData(true);\r\n    //const dialogRef = this.dialog.open(ReferralLinkDialogComponent);\r\n  }\r\n    \r\n}\r\n","<div class=\"container-fluid bg-color\">\r\n\r\n    <div class=\"row content\">\r\n\r\n        <div class=\"col-lg-3 tokeninfo-first\">\r\n            <div style=\"display: grid;\">\r\n                <div class=\"\">\r\n                    <button type=\"button\" class=\"btn btn-primary tab-button all_button\" routerLink=\"../home\"\r\n                        queryParamsHandling=\"merge\" style=\"margin-top: 25%\"> Home </button>\r\n                </div>\r\n                <div>\r\n                    <button type=\"button\" class=\"btn btn-primary tab-button all_button\" fragment=\"Overview\"\r\n                        (click)=\"navigateToSection('Overview')\">Overview</button>\r\n                </div>\r\n                <div>\r\n                    <button type=\"button\" class=\"btn btn-primary tab-button all_button\" fragment=\"Inflation\"\r\n                        (click)=\"navigateToSection('Inflation')\">Inflation</button>\r\n                </div>\r\n                <div>\r\n                    <button type=\"button\" class=\"btn btn-primary tab-button all_button\" fragment=\"use_defi\"\r\n                        (click)=\"navigateToSection('use_defi')\">Use Defi Tokens </button>\r\n\r\n                </div>\r\n                <div>\r\n                    <button type=\"button\" class=\"btn btn-primary tab-button all_button\" fragment=\"smart\"\r\n                        (click)=\"navigateToSection('smart')\">Smart Contract</button>\r\n                </div>\r\n\r\n\r\n                <div>\r\n                    <button type=\"button\" class=\"btn btn-primary tab-button all_button\" fragment=\"fee_structure\"\r\n                        (click)=\"navigateToSection('fee_structure')\">Fee Structure</button>\r\n                </div>\r\n                <div>\r\n                    <button type=\"button\" class=\"btn btn-primary tab-button all_button\" fragment=\"team\"\r\n                        (click)=\"navigateToSection('team')\">Team</button>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n        <div class=\"col-lg-12 tokeninfo-second\" id=\"Overview\">\r\n            <!-- <div class=\"personal\"> -->\r\n                <!-- <img style=\"width: 250px\" src=\"../../../assets/logo.png\"> -->\r\n                <!-- <i class=\"fas fa-coins\"></i> -->\r\n                <!-- <h1 class=\"personal_title\">Token Info</h1> -->\r\n\r\n            <!-- </div> -->\r\n            <div style=\"text-align: center\">\r\n                <div>\r\n                    <h1 class=\"title\">Grise Overview</h1>\r\n                </div>\r\n                <nav>\r\n                    <div class=\"nav nav-tabs\" id=\"nav-tab\" role=\"tablist\">\r\n                        <a class=\"nav-item nav-link active\" id=\"nav-home-tab\" data-toggle=\"tab\" href=\"#nav-home\"\r\n                            role=\"tab\" aria-controls=\"nav-home\" aria-selected=\"true\" style=\"width: 33%\">HOW GRISE\r\n                            WORKS</a>\r\n                        <a class=\"nav-item nav-link\" id=\"nav-profile-tab\" data-toggle=\"tab\" href=\"#nav-profile\"\r\n                            role=\"tab\" aria-controls=\"nav-profile\" aria-selected=\"false\" style=\"width: 33%\"> All\r\n                            PRE-SALE PROBLEMS SOLVED</a>\r\n                        <a class=\"nav-item nav-link\" id=\"nav-contact-tab\" data-toggle=\"tab\" href=\"#nav-contact\"\r\n                            role=\"tab\" aria-controls=\"nav-contact\" aria-selected=\"false\" style=\"width: 33%\">PROMTE GRiSE\r\n                            FOR MORE REWARDS</a>\r\n                    </div>\r\n                </nav>\r\n                <div class=\"tab-content\" id=\"nav-tabContent\">\r\n                    <div class=\"tab-pane fade show active\" id=\"nav-home\" role=\"tabpanel\" aria-labelledby=\"nav-home-tab\">\r\n                        <div class=\"second\" style=\"display: flex; \">\r\n                            <div class=\"subbox\" style=\"width: 33%\"><br>\r\n                                <div class=\"logo\"><i class=\"fa fa-adjust\" aria-hidden=\"true\"></i></div>\r\n                                <span class=\"\">Reserve Grise</span>\r\n                                <p class=\"tokan_span_pad\" style=\"margin: 20px\">\r\n                                    GRISE will have a 200 hour launch period for participants to reserve GRISE. Every 4\r\n                                    hours (except for extreme slots) there are 6,000 grise available, which will be\r\n                                    distributed proportionately according to total Binance sent during that time slot.\r\n                                </p>\r\n                            </div>\r\n                            <div class=\"subbox\" style=\"width: 33%\"><br>\r\n                                <div class=\"logo\"><i class=\"fa fa-adjust\" aria-hidden=\"true\"></i></div>\r\n                                <span class=\"\">Stake GRISE</span>\r\n                                <p class=\"tokan_span_pad\" style=\"margin: 20px\">\r\n                                    Lock up Grise, to earn rewards. Rewards are distributed from inflation and\r\n                                    transactional fees. Reduce or avoid any transactional fees by staking. Mid term and\r\n                                    long term term stakers will benefit more from any future developments, until admin\r\n                                    keys are burned. </p>\r\n                            </div>\r\n                            <div class=\"subbox\" style=\"width: 33%\"><br>\r\n                                <div class=\"logo\"><i class=\"fa fa-adjust\" aria-hidden=\"true\"></i></div>\r\n                                <span>Earn Rewards- Sell GRISE</span>\r\n                                <p style=\"margin: 20px\">\r\n                                    Your reward will directly go to your wallet, which you can claim. You can cash out\r\n                                    your grise without any fees after your staking period. grise is designed to create a\r\n                                    massive liquidity pool on Uniswap, and ability to swap from your private wallet on\r\n                                    uniswap or grise website. </p>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div class=\"tab-pane fade\" id=\"nav-profile\" role=\"tabpanel\" aria-labelledby=\"nav-profile-tab\">\r\n                        <div class=\"second\" style=\"display: flex; \">\r\n                            <div class=\"subbox\" style=\"width: 33%\"><br>\r\n                                <div class=\"logo\"><i class=\"fa fa-adjust\" aria-hidden=\"true\"></i></div>\r\n                                <span>Security</span>\r\n                                <p style=\"margin: 20px\">\r\n                                    Once we burn the key the contract is unchangeable. It is made by a team of 4\r\n                                    developers that tested the code every step of the way. Investors can have a peace of\r\n                                    mind knowing that the contract will do what it says it will do. And cannot be\r\n                                    changed. Even the staking is performed from the safety of your own private wallet.\r\n                                </p>\r\n                            </div>\r\n                            <div class=\"subbox\" style=\"width: 33%\"><br>\r\n                                <div class=\"logo\"><i class=\"fa fa-adjust\" aria-hidden=\"true\"></i></div>\r\n                                <span>Decentralized</span>\r\n                                <p style=\"margin: 20px\">\r\n                                    griseis made of immutable smart contract with rigorous testing. The presale contract\r\n                                    will send 91% of the launch money to Uniswap, this will create create a giant\r\n                                    liquidity pool for trading. The contract is deigned to send liquidity, without any\r\n                                    middlemen or central parties. At launch of the sale contract grise founders will be\r\n                                    on the same level of playing field as all the investors.\r\n                                </p>\r\n                            </div>\r\n                            <div class=\"subbox\" style=\"width: 33%\"><br>\r\n                                <div class=\"logo\"><i class=\"fa fa-adjust\" aria-hidden=\"true\"></i></div>\r\n                                <span>Scalable</span>\r\n                                <p style=\"margin: 20px\">\r\n                                    They problem with short lived projects is that there model is not Scalable. Grise\r\n                                    tokenomics are designed to do one thing and that is to scale the project upwards, in\r\n                                    a better and more profitable way than any other project in the market. The way\r\n                                    everything is structured in the contract is for unlimited growth.\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div class=\"tab-pane fade\" id=\"nav-contact\" role=\"tabpanel\" aria-labelledby=\"nav-contact-tab\">\r\n                        <div class=\"second\" style=\"display: flex; \">\r\n                            <div class=\"subbox\" style=\"width: 33%\"><br>\r\n                                <div class=\"logo\"><i class=\"fa fa-adjust\" aria-hidden=\"true\"></i></div>\r\n                                <span>Pre-launch Phase</span>\r\n                                <p style=\"margin: 20px\">\r\n                                    You can use referral link provided to get a small bonus. You will get a 5 percent\r\n                                    bonus for referring 1 BNB and above. If the referrals contribution is above 20 BNB\r\n                                    you get a 10 percent bonus. Both you and the person you refer are eligible for the\r\n                                    reward.\r\n                                </p>\r\n                            </div>\r\n                            <div class=\"subbox\" style=\"width: 33%\"><br>\r\n                                <div class=\"logo\"><i class=\"fa fa-adjust\" aria-hidden=\"true\"></i></div>\r\n                                <span>Launch Phase</span>\r\n                                <p class=\"tokan_span_pad\" style=\"margin: 20px\">\r\n                                    Any one who refers 20 BNB or more during launch will receive a 10 percent bonus. If\r\n                                    the contribution amount is less than 20 BNB the bonus will be 5 percent. These\r\n                                    commissions will be available immediately after the launch to stake or swap for BNB\r\n                                    on uniswap.\r\n                                </p>\r\n                            </div>\r\n                            <div class=\"subbox\" style=\"width: 33%\"><br>\r\n                                <div class=\"logo\"><i class=\"fa fa-adjust\" aria-hidden=\"true\"></i></div>\r\n                                <span>Post Launch phase</span>\r\n                                <p style=\"margin: 20px\">\r\n                                    THere will be no rewards post launch\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div id=\"smart\"><br><br><br></div>\r\n                </div>\r\n                <!-- <mat-tab-group>\r\n                        <mat-tab label=\"HOW GRISE WORKS\"> \r\n                                    \r\n                            <p>first</p>\r\n                        </mat-tab>\r\n                        <mat-tab label=\"All PRE-SALE PROBLEMS SOLVED\">  \r\n                                                        \r\n                                    <p>second</p>                            \r\n                        </mat-tab>\r\n                        <mat-tab label=\"PROMTE GRiSE FOR MORE REWARDS\">  \r\n                                \r\n                                     <p>third</p>   \r\n\r\n                        </mat-tab>\r\n                </mat-tab-group>      -->\r\n                <div class=\"third\" id=\"smart\" style=\"margin: 0px 50px 50px 50px;\">\r\n                    <div>\r\n                        <h1 class=\"info_title\">Grise Smart Contracts</h1>\r\n                        <p class=\"smart\">\r\n                            Grise project is designed with several contacts that work together to capitalize and grow\r\n                            in a sustainable, safe way but at a faster rate than any other system that exists.\r\n                            Phase one of Grise token mechanism will happen in the following manner\r\n\r\n                        </p>\r\n                    </div>\r\n\r\n                    <div style=\"display: flex\">\r\n                        <div style=\"width: 50%\">\r\n                            <div class=\"subbox\">\r\n                                <div class=\"logo\"><i class=\"fa fa-adjust\" aria-hidden=\"true\"></i></div>\r\n                                <span>Launch event</span>\r\n                                <p style=\"margin: 20px\">\r\n                                    The launch contract will create 50 slots that will be 4 hours long. During this\r\n                                    phase users can send BNB or any other defi token to the contract to reserve grise\r\n                                    for the Main liquidity pool.\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                        <div style=\"width: 50%\">\r\n                            <div class=\"subbox\">\r\n                                <div class=\"logo\"><i class=\"fa fa-adjust\" aria-hidden=\"true\"></i></div>\r\n                                <span>Circulation Event</span>\r\n                                <p style=\"margin: 20px\">\r\n                                    This is the time when all the 50 slots are over. No further reservation can be made.\r\n                                    Reserved grise and all the referral bonus can be claimed by the user and users can\r\n                                    begin staking.\r\n\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <h1 class=\"info_title\" id=\"last\">Liquidity transformer</h1>\r\n\r\n                        <p style=\"margin: 20px\">\r\n                            Liquidity transformer is a Smart Contract that can trustlessly generate the main liquidity\r\n                            pool for grise using Uniswap protocol. grise tokens are minted for investors who make\r\n                            reservation during reservation phase. After the reservation phase is over, users can claim\r\n                            these tokens. And equal amount of minted Tokens created for all users are paired with raised\r\n                            Binance and sent to Uniswap. This liquidity backs up the value of grise tokens.\r\n                        </p>\r\n                        <div id=\"fee_structure\"><br><br></div>\r\n                        <div class=\"liquidity\">\r\n                            <div style=\"width: 100%\">\r\n                                <button type=\"button\" class=\"btn btn-primary content_button all_button\">Check Smart\r\n                                    Contract</button>\r\n                            </div>\r\n                            <!-- <div style=\"width: 50%\"> -->\r\n                            <!-- <button type=\"button\" class=\"btn btn-primary button\">   Uniswap</button> -->\r\n                            <!-- </div> -->\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n                <div class=\"fourth\">\r\n                    <div>\r\n                        <h1 class=\"info_title\">Grise Contract Fees structure</h1>\r\n                        <p style=\"margin: 20px\">\r\n                            The Grise token fees structure and rewards are designed to do the following, in sequence of\r\n                            importance:\r\n                            ---First to make sure that as time passes the system becomes more and more robust\r\n                            ---Second, to give the most possible benefit to the stakers, without compromising the\r\n                            system.\r\n                            ---Third, ensure they system gets built on in the future.\r\n                            ---Every token holder gets a residual benefit for being part of the system\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <div class=\"fifth\">\r\n                    <h1 class=\"info_title\">Transactional Fees, Contact cancellation fee structure</h1>\r\n                    <div style=\"display: flex\">\r\n                        <div style=\"width: 50%\">\r\n                            <p style=\"margin: 20px;min-height: 320px;text-align: justify\">The contract will incur a\r\n                                transaction fees of 3.47% on the sell side of the transaction. Sell side fees can be\r\n                                eliminated or reduced if you stake your tokens for any amount of time.\r\n\r\n                                ----1.06% goes to a reservoir.\r\n                                ----.91% goes to all token holders and stakers in the form of grise token.(can be\r\n                                scraped weekly for stakers)(for token holder there will be a screenshot weekly after\r\n                                which the rewards will be available to claim for a day-if un claimed tokens will be\r\n                                burned)\r\n                                ----.57% more goes to medium term and long term stakers in the form of grise token.(can\r\n                                be scraped weekly)\r\n                                ----.5% goes for operation and future development.\r\n                                ----.43% goes to a burn address\r\n\r\n                                BUY Side fees--- .30%,---- .25% goes to liquidity and .05 goes for operation and future\r\n                                development.\r\n                            </p>\r\n                            <div style=\"display: flex\">\r\n                                <div style=\"width: 100%\">\r\n                                    <button type=\"button\" style=\"white-space: normal;\"\r\n                                        class=\"btn btn-primary content_button all_button\">See complete Grise token\r\n                                        Mecanism: Document</button>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div style=\"width: 50%\">\r\n                            <p style=\"margin: 20px;min-height: 320px;text-align: justify\">If a staking contract is\r\n                                broken there will be 13% fees for breaking the contract.\r\n\r\n                                •The penalty will work on a sliding scale.\r\n                                A. Example: If you are a short term staker and you broke your contract on the first day\r\n                                of your weekly stake you will be penalized 17 %. During the last day you will be\r\n                                penalized 0%\r\n                                B.If you are a long or mid term staker. And break your contract on the first day it will\r\n                                cost you 17%. On your last day it will cost you 0%.\r\n                                • Penalty fee distribution structure.\r\n                                A. 34.27% goes to a reservoir.\r\n                                B.27.81% percent will be distributed in the form of grise token to all mid-term and long\r\n                                term stakers stakers.\r\n                                C.12.81% will be distributed to all token holders and stakers in grise token form .\r\n                                D.12.00% will go for operational expenses.\r\n                                E.8.11% will be distributed to all the weekly stakers in the form of grise token.\r\n                                F.5% will go to a burn address.\r\n\r\n                            </p>\r\n                            <div style=\"display: flex\" id=\"Inflation\">\r\n\r\n                                <div style=\"width: 100%\">\r\n                                    <button type=\"button\" style=\"white-space: normal;\"\r\n                                        class=\"btn btn-primary content_button all_button\"> See complete Grise token\r\n                                        Mecanism: Document</button>\r\n                                </div>\r\n\r\n                                <br>\r\n                                <br>\r\n                                <br><br>\r\n                                <br>\r\n                                <br>\r\n\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div class=\"sixth\">\r\n                    <h1 class=\"info_title\">Inflation</h1>\r\n                    <p style=\"margin: 20px\" id=\"use_defi\">grise token has an inflation rate of 6% per year.\r\n                        A. 70% inflation goes to medium term stakers and long term stakers.\r\n                        B. 30% inflation is given all token holders distributed weekly (tokens in lp excluded).\r\n                        <br>\r\n                        <br>\r\n                        <br>\r\n                    </p>\r\n                </div>\r\n                <div class=\"sixth_second\">\r\n                    <h1 class=\"info_title\">Use DeFI Tokens for GRISE Reservation</h1>\r\n                    <p style=\"margin: 20px\">\r\n                        grise Liquidity Transformer will be able to accept varios tokens and convert them through\r\n                        Uniswap into BNB for grise reservation\r\n                    </p>\r\n                </div>\r\n\r\n                <div class=\"seven\">\r\n\r\n                    <h1 class=\"info_title\">Referral system</h1>\r\n                    <p style=\"margin: 20px\">\r\n                        grise contract has a direct, one level referral system that rewards both the referrer and\r\n                        referee when a user reserves grise\r\n                    </p>\r\n\r\n                    <button type=\"button\" class=\"btn btn-primary link all_button\" data-toggle=\"modal\" data-target=\"#referralModal\" (click)=\"openReferralLinkDialog()\">\r\n                        Create Grise Tokens Referral Link\r\n                    </button>                  \r\n\r\n                </div>\r\n                <div class=\"eight\" id=\"team\">\r\n                    <h1 class=\"info_title\">\r\n                        Grise Team and Vision\r\n                    </h1>\r\n                    <p style=\"margin: 20px\">\r\n                        Our teams motivation and goals for this project can be summarized in 3 points.\r\n                        ----First to create a very robust system that becomes more robust with time.\r\n                        ----Secondly, make sure almost all the benefits go back to the contributors in proportion to\r\n                        their commitment to the project.\r\n                        ----Lastly, ensure the product gets built on-- we are excited for the future.\r\n\r\n                        To support our vision we conceptualized the project in December of 2020 and started working on\r\n                        it in January 2021.\r\n                        Our team consists of 3 expert developers working with a marketing team. We welcome you in our\r\n                        vision for the future.\r\n\r\n                    </p>\r\n                </div>\r\n\r\n                \r\n            </div>\r\n            <div class=\"line-splitter\"></div>\r\n            <div class=\"footer\">\r\n                <div class=\"icon-bar\">\r\n                    <a class=\"telegram\" href=\"https://telegram.org/\" target=\"_blank\"><i class=\"fab fa-telegram\"></i></a>\r\n                    <a class=\"youtube\" href=\"https://www.youtube.com/\" target=\"_blank\"><i class=\"fab fa-youtube\"></i></a>\r\n                    <a class=\"twitter\" href=\"https://twitter.com/\" target=\"_blank\"><i class=\"fab fa-twitter\"></i></a>\r\n                    <!-- <a class=\"raddit\" href=\"https://www.reddit.com/\" target=\"_blank\"><i class=\"fab fa-reddit\"></i></a> -->\r\n                    <a class=\"medium\" href=\"https://medium.com/\" target=\"_blank\"><i class=\"fab fa-medium-m\"></i></a>\r\n                    <a class=\"github\" href=\"https://github.com/\" target=\"_blank\"><i class=\"fab fa-github\"></i></a>\r\n                  </div>\r\n                <div class=\"grise\">\r\n                    <!-- <img style=\"width: 250px\" src=\"../../../assets/logo.png\"> -->\r\n                    <span >\r\n                        Copyright © 2021–2022 — Grise, LLC<br>\r\n                        ALL RIGHTS RESERVED\r\n                    </span>\r\n                </div>\r\n            <br>\r\n            </div>\r\n\r\n\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-tokenstats',\r\n  templateUrl: './tokenstats.component.html',\r\n  styleUrls: ['./tokenstats.component.scss']\r\n})\r\nexport class TokenstatsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid bg-color\">\r\n\r\n  <div class=\"row content\">\r\n\r\n    <div class=\"col-lg-3 tokenstats_first\">\r\n\r\n      <div style=\"display: grid\">\r\n\r\n        <div class=\"\">\r\n          <button type=\"button\" routerLink=\"tokendata\" queryParamsHandling=\"merge\" class=\"btn btn-primary staking\">Token Data</button>\r\n        </div>\r\n        <div class=\"\">\r\n          <button type=\"button\" routerLink=\"staking\" queryParamsHandling=\"merge\"\r\n            class=\"btn btn-primary\">Staking</button>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col-lg-12 tokenstats_second\">\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n  </div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SpinnerService {\r\n\r\n  private isSpinnerShow = new BehaviorSubject<boolean>(false);\r\n  private selectedNft = new BehaviorSubject<any>(false);\r\n  spinnerStateChanged = this.isSpinnerShow.asObservable();\r\n\r\n  constructor() { }\r\n\r\n  show() {\r\n    this.isSpinnerShow.next(true);\r\n  }\r\n\r\n  hide() {\r\n    this.isSpinnerShow.next(false);\r\n  }\r\n\r\n}\r\n","<ng-container *ngIf=\"loading\">\r\n    <div class=\"loader-container\">\r\n        <!-- <div id=\"circle\">\r\n            <div class=\"loader\">\r\n                <div class=\"loader\">\r\n                    <div class=\"loader\">\r\n                        <div class=\"loader\"> </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div> -->\r\n        <div class=\"main-loader\">\r\n            <mat-spinner class=\"mat-spinner-color\"></mat-spinner>\r\n            <h1 class=\"spinner-text\">Please wait...</h1>\r\n        </div>        \r\n    </div>\r\n</ng-container>","import { Component, OnInit } from '@angular/core';\r\nimport { SpinnerService } from './spinner.service';\r\n\r\n@Component({\r\n  selector: 'app-spinner',\r\n  templateUrl: './spinner.component.html',\r\n  styleUrls: ['./spinner.component.css']\r\n})\r\nexport class SpinnerComponent implements OnInit {\r\n\r\n  loading = false;\r\n\r\n  constructor(private spinnerService: SpinnerService) { }\r\n\r\n  ngOnInit() {\r\n    this.spinnerService.spinnerStateChanged.subscribe(state => this.loading = state);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport * as GriseToken from '../../abis/token/GriseToken.json';\r\nimport { SpinnerService } from '../helper/spinner/spinner.service';\r\nimport { LaunchTimeData } from '../models/launch-time-data';\r\nimport { ContractService } from './contract.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class GriseTokenContractService {\r\n\r\n    private claimTokenHolderTransactionRewardData = new BehaviorSubject<boolean>(false);\r\n    isClaimTokenHolderTransactionRewardDataUpdated = this.claimTokenHolderTransactionRewardData.asObservable();\r\n\r\n    constructor(private contractService: ContractService,\r\n        private toastr: ToastrService,\r\n        private spinnerService: SpinnerService) { }\r\n\r\n    async assignGriseAccountNo() {\r\n        try {\r\n            const griseTokenContract = await this.contractService.getContractObject(GriseToken);\r\n            if (griseTokenContract) {\r\n                this.contractService.griseAccountNo = griseTokenContract._address;\r\n            }\r\n        } catch (ex) { }\r\n    }\r\n\r\n    // async getGrise() {\r\n    //     try {\r\n    //         const web3 = window.web3;\r\n\r\n    //         if (web3 != undefined && web3 != null) {\r\n    //             const networkId = await web3.eth.net.getId();\r\n    //             const networks: { [key: string]: any } = GriseToken.networks;\r\n    //             const griseTokenData = networks[networkId];\r\n    //             if (griseTokenData) {\r\n    //                 const griseContract = new web3.eth.Contract(GriseToken.abi, griseTokenData.address);\r\n    //                 // setHomeContract(hdc);\r\n\r\n    //                 const griseName = await griseContract.methods.name().call();\r\n    //                 const griseSymbol = await griseContract.methods._getNow().call();\r\n    //                 console.log('Name', griseName, ' => Symbol', griseSymbol);\r\n    //             }\r\n    //         }\r\n    //     } catch (ex) { }\r\n    // }\r\n\r\n    async getLaunchTime() {\r\n        try {\r\n            const griseTokenContract = await this.contractService.getContractObject(GriseToken);\r\n            if (griseTokenContract) {\r\n                const launchTime = await griseTokenContract.methods.getLaunchTime().call();\r\n                const lpLaunchTime = await griseTokenContract.methods.getLPLaunchTime().call();\r\n                const launchTimeData: LaunchTimeData = {\r\n                    launchTime: +launchTime * 1000,\r\n                    lpLaunchTime: +lpLaunchTime * 1000\r\n                }\r\n                return launchTimeData;\r\n            }\r\n        } catch (ex) { }\r\n        return null;\r\n    }\r\n\r\n    async getGriseBalance() {\r\n        try {\r\n            const griseTokenContract = await this.contractService.getContractObject(GriseToken);\r\n            if (griseTokenContract) {\r\n                let griseBalance = await griseTokenContract.methods.balanceOf(this.contractService.accountNo).call();\r\n                griseBalance = this.contractService.convertAmountInBigUnit(griseBalance);\r\n                this.contractService.totalGriseBalance = griseBalance;\r\n                return griseBalance;\r\n            }\r\n        } catch (ex) { }\r\n        return null;\r\n    }\r\n\r\n    async getTokenHolderTransactionReward() {\r\n        try {\r\n            const griseTokenContract = await this.contractService.getContractObject(GriseToken);\r\n            if (griseTokenContract) {\r\n                let tokenHolderTransactionReward = await griseTokenContract.methods.viewTokenHolderTranscReward().call({ from: this.contractService.accountNo });\r\n                tokenHolderTransactionReward = this.contractService.convertAmountInBigUnit(tokenHolderTransactionReward);\r\n                return tokenHolderTransactionReward;\r\n            }\r\n        } catch (ex) { }\r\n        return null;\r\n    }\r\n\r\n    async getTimeToClaimWeeklyReward() {\r\n        try {\r\n            const griseTokenContract = await this.contractService.getContractObject(GriseToken);\r\n            if (griseTokenContract) {\r\n                const timeToClaimWeeklyReward = await griseTokenContract.methods.timeToClaimWeeklyReward().call();\r\n                return timeToClaimWeeklyReward;\r\n            }\r\n        } catch (ex) { }\r\n        return null;\r\n    }\r\n\r\n    async claimTokenHolderTransactionReward() {\r\n        try {\r\n            const griseTokenContract = await this.contractService.getContractObject(GriseToken);\r\n            if (griseTokenContract) {\r\n                this.spinnerService.show();\r\n                griseTokenContract.methods.claimTokenHolderTranscReward()\r\n                    .send({ from: this.contractService.accountNo })\r\n                    .then((response: any) => {\r\n                        // console.log(\"transaction successful.\", response);\r\n                        this.claimTokenHolderTransactionRewardData.next(true);\r\n                        this.toastr.success('Transaction successful.');\r\n                        this.spinnerService.hide();\r\n                    })\r\n                    .catch((error: any) => {\r\n                        // console.log(\"error\", error);\r\n                        this.toastr.error('Transaction failed. Try again!');\r\n                        this.spinnerService.hide();\r\n                    });\r\n            }\r\n        } catch (ex) { }\r\n    }\r\n\r\n    async timeToClaimWeeklyReward() {\r\n        try {\r\n            const griseTokenContract = await this.contractService.getContractObject(GriseToken);\r\n            if (griseTokenContract) {\r\n                const daysLeft = await griseTokenContract.methods.timeToClaimWeeklyReward().call();\r\n                return daysLeft;\r\n            }\r\n        } catch (ex) { }\r\n        return null;\r\n    }\r\n\r\n    async timeToClaimMonthlyReward() {\r\n        try {\r\n            const griseTokenContract = await this.contractService.getContractObject(GriseToken);\r\n            if (griseTokenContract) {\r\n                const daysLeft = await griseTokenContract.methods.timeToClaimMonthlyReward().call();\r\n                return daysLeft;\r\n            }\r\n        } catch (ex) { }\r\n        return null;\r\n    }\r\n\r\n    async getTotalSupply() {\r\n        try {\r\n            const griseTokenContract = await this.contractService.getContractObject(GriseToken);\r\n            if (griseTokenContract) {\r\n                let totalSupply = await griseTokenContract.methods.totalSupply().call();\r\n                totalSupply = this.contractService.convertAmountInBigUnit(totalSupply);\r\n                return totalSupply;\r\n            }\r\n        } catch (ex) { }\r\n        return null;\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'formattedAccountNo'\r\n})\r\nexport class AccountNoPipe implements PipeTransform {\r\n    transform(accountNo: number): string {\r\n        const strAccountNo = accountNo.toString();\r\n        let formattedAccountNo = strAccountNo;\r\n\r\n        if (strAccountNo.length >= 13) {\r\n            formattedAccountNo = strAccountNo.substr(0, 7);\r\n            formattedAccountNo += '...';\r\n            formattedAccountNo += strAccountNo.substr(strAccountNo.length - 5);\r\n        }\r\n\r\n        return formattedAccountNo;\r\n    }\r\n}\r\n","export class PersonalStakeData {\r\n    periodValue: number;\r\n    stakeValue: number;\r\n    stakeType: number;\r\n    days: number;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport * as StakingToken from '../../abis/stake/StakingToken.json';\r\nimport { SpinnerService } from '../helper/spinner/spinner.service';\r\nimport { StakeCountData } from '../models/stake-count-data';\r\nimport { StakeSlotLeftData } from '../models/stake-slot-left-data';\r\nimport { StakeTransactionBasicData } from '../models/stake-transaction-basic-data';\r\nimport { StakeTransactionRewardData } from '../models/stake-transaction-reward-data';\r\nimport { ContractService } from './contract.service';\r\nimport { LocalDataUpdateService } from './local-data-update.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class StakingTokenContractService {\r\n\r\n    constructor(private contractService: ContractService,\r\n                private toastr: ToastrService,\r\n                private localDataUpdateService: LocalDataUpdateService,\r\n                private spinnerService: SpinnerService) { }\r\n\r\n    async getStakeSlotsLeftData() {\r\n        try {\r\n            const stakingTokenContract = await this.contractService.getContractObject(StakingToken);\r\n            if (stakingTokenContract) {\r\n                const slotLefts = await stakingTokenContract.methods.getSlotLeft().call();\r\n\r\n                const stakeSlotLeftData: StakeSlotLeftData = {\r\n                    stSlotLeft: +slotLefts.STSlotLeft,\r\n                    mt3MonthSlotLeft: +slotLefts.MT3MonthSlotLeft,\r\n                    mt6MonthSlotLeft: +slotLefts.MT6MonthSlotLeft,\r\n                    mt9MonthSlotLeft: +slotLefts.MT9MonthSlotLeft,\r\n                    ltSlotLeft: +slotLefts.LTSlotLeft,\r\n                    mtSlotLeft: 0,\r\n                    totalSlotLeft: 0\r\n                };\r\n                stakeSlotLeftData.mtSlotLeft = stakeSlotLeftData.mt3MonthSlotLeft + stakeSlotLeftData.mt6MonthSlotLeft + stakeSlotLeftData.mt9MonthSlotLeft;\r\n                stakeSlotLeftData.totalSlotLeft = stakeSlotLeftData.stSlotLeft + stakeSlotLeftData.mtSlotLeft + stakeSlotLeftData.ltSlotLeft;\r\n                return stakeSlotLeftData;\r\n            }\r\n        } catch (ex) { }\r\n        return null;\r\n    }\r\n\r\n    async getStakeCountData() {\r\n        try {\r\n            const stakingTokenContract = await this.contractService.getContractObject(StakingToken);\r\n            if (stakingTokenContract) {\r\n                const stakeCounts = await stakingTokenContract.methods.getStakeCount().call();\r\n\r\n                const stakeCountData: StakeCountData = {\r\n                    stStakeCount: +stakeCounts.STStakeCount,\r\n                    mt3MonthStakeCount: +stakeCounts.MT3MonthStakeCount,\r\n                    mt6MonthStakeCount: +stakeCounts.MT6MonthStakeCount,\r\n                    mt9MonthStakeCount: +stakeCounts.MT9MonthStakeCount,\r\n                    ltStakeCount: +stakeCounts.LTStakeCount,\r\n                    mtStakeCount: 0,\r\n                    totalStakeCount: 0\r\n                };\r\n                stakeCountData.mtStakeCount = stakeCountData.mt3MonthStakeCount + stakeCountData.mt6MonthStakeCount + stakeCountData.mt9MonthStakeCount;\r\n                stakeCountData.totalStakeCount = stakeCountData.stStakeCount + stakeCountData.mtStakeCount + stakeCountData.ltStakeCount;\r\n                return stakeCountData;\r\n            }\r\n        } catch (ex) { }\r\n        return null;\r\n    }\r\n\r\n    async createStakeGrise(amount: number, stakeType: number, days: number) {\r\n        try {\r\n            const stakingTokenContract = await this.contractService.getContractObject(StakingToken);\r\n            if (stakingTokenContract) {\r\n                this.spinnerService.show();\r\n                const etherAmount = this.contractService.convertAmountInSmallUnit(amount);\r\n\r\n                stakingTokenContract.methods.createStake(etherAmount, stakeType, days)\r\n                    .send({ from: this.contractService.accountNo })\r\n                    .then((response: any) => {\r\n                        // console.log(\"transaction successful.\", response);\r\n                        this.localDataUpdateService.forceUpdateStakeTransactionsData(true);\r\n                        this.localDataUpdateService.forceUpdateWalletBalanceData(true);\r\n                        this.toastr.success('Transaction successful.');\r\n                        this.spinnerService.hide();\r\n                    })\r\n                    .catch((error: any) => {\r\n                        // console.log(\"error\", error);\r\n                        this.toastr.error('Transaction failed. Try again!');\r\n                        this.spinnerService.hide();\r\n                    });\r\n            }\r\n        } catch (ex) { }\r\n    }\r\n\r\n    async createStakeWithETH(amount: number, stakeType: number, days: number, etherAmount: string) {\r\n        try {\r\n            const stakingTokenContract = await this.contractService.getContractObject(StakingToken);\r\n            if (stakingTokenContract) {\r\n                this.spinnerService.show();\r\n                const tokenAmount = this.contractService.convertAmountInSmallUnit(amount);\r\n\r\n                stakingTokenContract.methods.createStakeWithETH(tokenAmount, stakeType, days)\r\n                    .send({ from: this.contractService.accountNo, value: etherAmount })\r\n                    .then((response: any) => {\r\n                        // console.log(\"transaction successful.\", response);\r\n                        this.localDataUpdateService.forceUpdateStakeTransactionsData(true);\r\n                        this.localDataUpdateService.forceUpdateWalletBalanceData(true);\r\n                        this.toastr.success('Transaction successful.');\r\n                        this.spinnerService.hide();\r\n                    })\r\n                    .catch((error: any) => {\r\n                        // console.log(\"error\", error);\r\n                        this.toastr.error('Transaction failed. Try again!');\r\n                        this.spinnerService.hide();\r\n                    });\r\n            }\r\n        } catch (ex) { }\r\n    }\r\n\r\n    async getStakesPagination(pageNo: number, perPageRecords: number) {\r\n        try {\r\n            const stakingTokenContract = await this.contractService.getContractObject(StakingToken);\r\n            if (stakingTokenContract) {\r\n                const stakeIds = await stakingTokenContract.methods.stakesPagination(this.contractService.accountNo, pageNo, perPageRecords).call();\r\n                return stakeIds;\r\n            }\r\n        } catch (ex) { }\r\n        return null;\r\n    }\r\n\r\n    async checkStakeByID(stakeId: string) {\r\n        try {\r\n            const stakingTokenContract = await this.contractService.getContractObject(StakingToken);\r\n            if (stakingTokenContract) {\r\n                const stakeData = await stakingTokenContract.methods.checkStakeByID(this.contractService.accountNo, stakeId).call();\r\n                stakeData.stakedAmount = this.contractService.convertAmountInBigUnit(stakeData.stakedAmount);\r\n                stakeData.penaltyAmount = this.contractService.convertAmountInBigUnit(stakeData.penaltyAmount);\r\n\r\n                const stakeBasicData: StakeTransactionBasicData = {\r\n                    startDay: stakeData.startDay,\r\n                    lockDays: stakeData.lockDays,\r\n                    finalDay: stakeData.finalDay,\r\n                    scrapeDay: stakeData.scrapeDay,\r\n                    closeDay: stakeData.closeDay,\r\n                    stakeType: stakeData.stakeType,\r\n                    isActive: stakeData.isActive,\r\n                    isMature: stakeData.isMature,\r\n                    stakedAmount: stakeData.stakedAmount,\r\n                    penaltyAmount: stakeData.penaltyAmount\r\n                };\r\n                return stakeBasicData;\r\n            }\r\n        } catch (ex) { }\r\n        return null;\r\n    }\r\n\r\n    async checkStakeRewards(stakeId: string) {\r\n        try {\r\n            const stakingTokenContract = await this.contractService.getContractObject(StakingToken);\r\n            if (stakingTokenContract) {\r\n                const stakeData = await stakingTokenContract.methods.checkStakeRewards(this.contractService.accountNo, stakeId).call();\r\n                stakeData.transcRewardAmount = this.contractService.convertAmountInBigUnit(stakeData.transcRewardAmount);\r\n                stakeData.penaltyRewardAmount = this.contractService.convertAmountInBigUnit(stakeData.penaltyRewardAmount);\r\n                stakeData.reservoirRewardAmount = this.contractService.convertAmountInBigUnit(stakeData.reservoirRewardAmount);\r\n                stakeData.inflationRewardAmount = this.contractService.convertAmountInBigUnit(stakeData.inflationRewardAmount);\r\n\r\n                const stakeRewardData: StakeTransactionRewardData = {\r\n                    transcRewardAmount: stakeData.transcRewardAmount,\r\n                    penaltyRewardAmount: stakeData.penaltyRewardAmount,\r\n                    reservoirRewardAmount: stakeData.reservoirRewardAmount,\r\n                    // inflationRewardAmount: stakeData.inflationRewardAmount\r\n                    inflationRewardAmount: 0\r\n                };\r\n                return stakeRewardData;\r\n            }\r\n        } catch (ex) { }\r\n        return null;\r\n    }\r\n\r\n    async scrapeReward(stakeId: string) {\r\n        try {\r\n            const stakingTokenContract = await this.contractService.getContractObject(StakingToken);\r\n            if (stakingTokenContract) {\r\n                this.spinnerService.show();\r\n                stakingTokenContract.methods.scrapeReward(stakeId)\r\n                    .send({ from: this.contractService.accountNo })\r\n                    .then((response: any) => {\r\n                        // console.log(\"transaction successful.\", response);\r\n                        this.localDataUpdateService.forceUpdateStakePaginationData(stakeId);\r\n                        this.toastr.success('Transaction successful.');\r\n                        this.spinnerService.hide();\r\n                    })\r\n                    .catch((error: any) => {\r\n                        // console.log(\"error\", error);\r\n                        this.toastr.error('Transaction failed. Try again!');\r\n                        this.spinnerService.hide();\r\n                    });\r\n            }\r\n        } catch (ex) { }\r\n    }\r\n\r\n    async endStake(stakeId: string) {\r\n        try {\r\n            const stakingTokenContract = await this.contractService.getContractObject(StakingToken);\r\n            if (stakingTokenContract) {\r\n                this.spinnerService.show();\r\n                stakingTokenContract.methods.endStake(stakeId)\r\n                    .send({ from: this.contractService.accountNo })\r\n                    .then((response: any) => {\r\n                        // console.log(\"transaction successful.\", response);\r\n                        this.localDataUpdateService.forceUpdateStakePaginationData(stakeId);\r\n                        this.toastr.success('Transaction successful.');\r\n                        this.spinnerService.hide();\r\n                    })\r\n                    .catch((error: any) => {\r\n                        // console.log(\"error\", error);\r\n                        this.toastr.error('Transaction failed. Try again!');\r\n                        this.spinnerService.hide();\r\n                    });\r\n            }\r\n        } catch (ex) { }\r\n    }\r\n\r\n    async getTotalStakedToken() {\r\n        try {\r\n            const stakingTokenContract = await this.contractService.getContractObject(StakingToken);\r\n            if (stakingTokenContract) {\r\n                let totalStakedToken = await stakingTokenContract.methods.getTotalStakedToken().call();\r\n                totalStakedToken = this.contractService.convertAmountInBigUnit(totalStakedToken);\r\n                return totalStakedToken;\r\n            }\r\n        } catch (ex) { }\r\n        return null;\r\n    }\r\n}\r\n","<div class=\"container-fluid bg-color\">\r\n  <div class=\"row content\">\r\n    <div class=\"col-lg-3 tokeninfo-first\">\r\n      <div style=\"display: grid; justify-content: center\">\r\n        <button\r\n          type=\"button\"\r\n          class=\"btn btn-primary tab-button all_reser\"\r\n          (click)=\"commonMerge('Common Merge')\"\r\n        >\r\n          Common Merger\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          class=\"btn btn-primary tab-button\"\r\n          (click)=\"mythicMerge('Mythic Merger')\"\r\n        >\r\n          Mythic Merger\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          class=\"btn btn-primary tab-button\"\r\n          (click)=\"legendaryMerge('Legendary Merger')\"\r\n        >\r\n          Legendary Merger\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          class=\"btn btn-primary tab-button\"\r\n          (click)=\"mythicTwoMerge('Mythic Merger')\"\r\n        >\r\n          Mythic Merger\r\n        </button>\r\n      </div>\r\n      <div\r\n        class=\"alert alert-success text-dark mt-3 mx-auto\"\r\n        *ngIf=\"resultBoxMerge\"\r\n        role=\"alert\"\r\n      >\r\n        14 days Left\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col-lg-9 col-md-12 tokeninfo-second\" id=\"Overview\">\r\n      <div class=\"scrollable-title-container\">\r\n        <label class=\"scrollable-title\">{{ userTab }}</label>\r\n      </div>\r\n\r\n      <div class=\"nft-container\">\r\n        <div>\r\n          <div class=\"heading\">\r\n            <h1 class=\"heading-text\"></h1>\r\n            <div class=\"line-splitter\"></div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n              <div class=\"tab flex-column\" *ngIf=\"firstMerge\">\r\n                <h3 *ngIf=\"firstBoxMerge\">\r\n                  Following NFTs are being incubated for this merge\r\n                </h3>\r\n                <h3 *ngIf=\"secondBoxMerge\">\r\n                  You'll get these NFTs after the merge is complete\r\n                </h3>\r\n                <h3 *ngIf=\"resultBoxMerge\">\r\n                  Your NFTs have been incubated, you'll get your new NFTs in\r\n                </h3>\r\n                <div class=\"\" *ngIf=\"firstBoxMerge\">\r\n                  <div class=\"modal-body-inner d-flex\">\r\n                    <a\r\n                      href=\"javascript:void(0);\"\r\n                      data-toggle=\"modal\"\r\n                      data-target=\"#exampleModal\"\r\n                      class=\"modal-body-img-box\"\r\n                    >\r\n                      <img src=\"assets/rare/r1.png\" />\r\n                      <p>Sample Text here</p>\r\n                    </a>\r\n                    <a href=\"javascript:void(0);\" class=\"modal-body-img-box\">\r\n                      <img src=\"assets/rare/r2.png\" />\r\n                      <p>Sample Text here</p>\r\n                    </a>\r\n                    <a href=\"javascript:void(0);\" class=\"modal-body-img-box\">\r\n                      <img src=\"assets/rare/r3.png\" />\r\n                      <p>Sample Text here</p>\r\n                    </a>\r\n                    <a href=\"javascript:void(0);\" class=\"modal-body-img-box\">\r\n                      <img src=\"assets/rare/r4.png\" />\r\n                      <p>Sample Text here</p>\r\n                    </a>\r\n                    <a href=\"javascript:void(0);\" class=\"modal-body-img-box\">\r\n                      <img src=\"assets/rare/r5.png\" />\r\n                      <p>Sample Text here</p>\r\n                    </a>\r\n                    <a href=\"javascript:void(0);\" class=\"modal-body-img-box\">\r\n                      <img src=\"assets/rare/r1.png\" />\r\n                      <p>Sample Text here</p>\r\n                    </a>\r\n                    <a href=\"javascript:void(0);\" class=\"modal-body-img-box\">\r\n                      <img src=\"assets/rare/r2.png\" />\r\n                      <p>Sample Text here</p>\r\n                    </a>\r\n                    <a href=\"javascript:void(0);\" class=\"modal-body-img-box\">\r\n                      <img src=\"assets/rare/r3.png\" />\r\n                      <p>Sample Text here</p>\r\n                    </a>\r\n                    <a href=\"javascript:void(0);\" class=\"modal-body-img-box\">\r\n                      <img src=\"assets/rare/r4.png\" />\r\n                      <p>Sample Text here</p>\r\n                    </a>\r\n                  </div>\r\n                  <button\r\n                    class=\"tab-button border-0 mt-5 mx-auto\"\r\n                    (click)=\"nextMerge()\"\r\n                  >\r\n                    Next\r\n                  </button>\r\n                </div>\r\n                <div class=\"\" *ngIf=\"secondBoxMerge\">\r\n                  <div class=\"modal-body-inner d-flex\">\r\n                    <a href=\"javascript:void(0);\" class=\"modal-body-img-box\">\r\n                      <img src=\"assets/rare/r1.png\" />\r\n                      <p>Sample Text here</p>\r\n                    </a>\r\n                    <a href=\"javascript:void(0);\" class=\"modal-body-img-box\">\r\n                      <img src=\"assets/rare/r2.png\" />\r\n                      <p>Sample Text here</p>\r\n                    </a>\r\n                    <a href=\"javascript:void(0);\" class=\"modal-body-img-box\">\r\n                      <img src=\"assets/rare/r3.png\" />\r\n                      <p>Sample Text here</p>\r\n                    </a>\r\n                    <a href=\"javascript:void(0);\" class=\"modal-body-img-box\">\r\n                      <img src=\"assets/rare/r4.png\" />\r\n                      <p>Sample Text here</p>\r\n                    </a>\r\n                    <a href=\"javascript:void(0);\" class=\"modal-body-img-box\">\r\n                      <img src=\"assets/rare/r5.png\" />\r\n                      <p>Sample Text here</p>\r\n                    </a>\r\n                    <a href=\"javascript:void(0);\" class=\"modal-body-img-box\">\r\n                      <img src=\"assets/rare/r1.png\" />\r\n                      <p>Sample Text here</p>\r\n                    </a>\r\n                    <a href=\"javascript:void(0);\" class=\"modal-body-img-box\">\r\n                      <img src=\"assets/rare/r2.png\" />\r\n                      <p>Sample Text here</p>\r\n                    </a>\r\n                  </div>\r\n                  <button class=\"tab-button border-0 mt-5\">Rent Key</button>\r\n                  <button\r\n                    class=\"tab-button border-0 mt-5 mx-auto\"\r\n                    (click)=\"submitmerge()\"\r\n                  >\r\n                    Submit\r\n                  </button>\r\n                </div>\r\n                <div class=\"\" *ngIf=\"resultBoxMerge\">\r\n                  <div class=\"modal-body-inner d-flex\">\r\n                    <h3>14 Days Left</h3>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"tab flex-column\" *ngIf=\"secondMerge\">\r\n                <div class=\"modal-body-inner d-flex\">\r\n                  <div class=\"modal-body-img-box\">\r\n                    <img src=\"assets/rare/r1.png\" />\r\n                    <p>Sample Text here</p>\r\n                  </div>\r\n                </div>\r\n                <button class=\"tab-button border-0 mt-5 mx-auto\">Next</button>\r\n              </div>\r\n              <div class=\"tab flex-column\" *ngIf=\"threeMerge\">\r\n                <div class=\"modal-body-inner d-flex\">\r\n                  <div class=\"modal-body-img-box\">\r\n                    <img src=\"assets/rare/r1.png\" />\r\n                    <p>Sample Text here</p>\r\n                  </div>\r\n                </div>\r\n                <button class=\"tab-button border-0 mt-5 mx-auto\">Next</button>\r\n              </div>\r\n              <div class=\"tab flex-column\" *ngIf=\"fourMerge\">\r\n                <div class=\"modal-body-inner d-flex\">\r\n                  <div class=\"modal-body-img-box\">\r\n                    <img src=\"assets/rare/r1.png\" />\r\n                    <p>Sample Text here</p>\r\n                  </div>\r\n                </div>\r\n                <button class=\"tab-button border-0 mt-5 mx-auto\">Next</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- Modal -->\r\n\r\n<div\r\n  class=\"modal fade\"\r\n  id=\"exampleModal\"\r\n  tabindex=\"-1\"\r\n  role=\"dialog\"\r\n  aria-labelledby=\"exampleModalLongTitle\"\r\n  aria-hidden=\"true\"\r\n>\r\n  <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title mb-0\">Listing</h5>\r\n\r\n        <button\r\n          type=\"button\"\r\n          class=\"close\"\r\n          data-dismiss=\"modal\"\r\n          aria-label=\"Close\"\r\n        >\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <div class=\"modal-body-inner d-flex\">\r\n          <div class=\"modal-body-img-box\">\r\n            <img src=\"assets/rare/r1.png\" />\r\n            <p>Sample Text here Sample</p>\r\n          </div>\r\n          <div class=\"modal-body-img-box\">\r\n            <img src=\"assets/rare/r5.png\" />\r\n            <p>Sample Text here Sample Text</p>\r\n          </div>\r\n          <div class=\"modal-body-img-box\">\r\n            <img src=\"assets/rare/r2.png\" />\r\n            <p>Sample Text here Sample</p>\r\n          </div>\r\n          <div class=\"modal-body-img-box\">\r\n            <img src=\"assets/rare/r3.png\" />\r\n            <p>Sample Text here Sample</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: \"app-mergepopup\",\r\n  templateUrl: \"./mergepopup.component.html\",\r\n  styleUrls: [\"./mergepopup.component.scss\"],\r\n})\r\nexport class MergepopupComponent implements OnInit {\r\n  constructor() {}\r\n  showNext = false;\r\n  firstMerge = true;\r\n  secondMerge = false;\r\n  threeMerge = false;\r\n  fourMerge = false;\r\n  firstBoxMerge = true;\r\n  secondBoxMerge = false;\r\n  resultBoxMerge = false;\r\n  userTab = \"Common Merge\";\r\n  tabData = [\r\n    {\r\n      src: \"assets/rare/r1.png\",\r\n      text: \"Sample text here Sample text here Sample text here\",\r\n    },\r\n    {\r\n      src: \"assets/rare/r2.png\",\r\n      text: \"Sample text here Sample text here Sample text here\",\r\n    },\r\n    {\r\n      src: \"assets/rare/r3.png\",\r\n      text: \"Sample text here Sample text here Sample text here\",\r\n    },\r\n    {\r\n      src: \"assets/rare/r4.png\",\r\n      text: \"Sample text here Sample text here Sample text here\",\r\n    },\r\n    {\r\n      src: \"assets/rare/r5.png\",\r\n      text: \"Sample text here Sample text here Sample text here\",\r\n    },\r\n    {\r\n      src: \"assets/rare/r1.png\",\r\n      text: \"Sample text here Sample text here Sample text here\",\r\n    },\r\n    {\r\n      src: \"assets/rare/r2.png\",\r\n      text: \"Sample text here Sample text here Sample text here\",\r\n    },\r\n    {\r\n      src: \"assets/rare/r3.png\",\r\n      text: \"Sample text here Sample text here Sample text here\",\r\n    },\r\n  ];\r\n\r\n  ngOnInit(): void {}\r\n\r\n  commonMerge(name: string) {\r\n    this.userTab = name;\r\n    this.firstMerge = true;\r\n    this.secondMerge = false;\r\n    this.threeMerge = false;\r\n    this.fourMerge = false;\r\n  }\r\n  mythicMerge(name: string) {\r\n    this.userTab = name;\r\n    this.firstMerge = false;\r\n    this.secondMerge = true;\r\n    this.threeMerge = false;\r\n    this.fourMerge = false;\r\n  }\r\n  legendaryMerge(name: string) {\r\n    this.userTab = name;\r\n    this.firstMerge = false;\r\n    this.secondMerge = false;\r\n    this.threeMerge = true;\r\n    this.fourMerge = false;\r\n  }\r\n  mythicTwoMerge(name: string) {\r\n    this.userTab = name;\r\n    this.firstMerge = false;\r\n    this.secondMerge = false;\r\n    this.threeMerge = false;\r\n    this.fourMerge = true;\r\n  }\r\n\r\n  nextMerge() {\r\n    this.firstBoxMerge = false;\r\n    this.secondBoxMerge = true;\r\n    this.resultBoxMerge = false;\r\n  }\r\n  submitmerge() {\r\n    this.firstBoxMerge = false;\r\n    this.secondBoxMerge = false;\r\n    this.resultBoxMerge = true;\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\n// const URL = 'https://f370c13eceed.ngrok.io';\r\nconst URL = 'https://backend.grisemetamoonverse.io';\r\n\r\nexport const environment = {\r\n  production: false,\r\n  uniswapUrl: \"https://uniswap.org/\",\r\n  tokenDayDataAddress: \"0x6b175474e89094c44da98b954eedeac495271d0f\",\r\n  marketCapPairAddress: \"0xa478c2975ab1ea89e8196811f51a7b7ade33eb11\",\r\n  initialTimeStamp: 1614556800,\r\n  launchTimeStamp: 1619740800000,\r\n  graphAPIBaseUrl:\r\n    \"https://api.dex.guru/v1/tokens/0xb359e4290573a3974616b7c26ea86939689b9ec4-bsc\",\r\n  blockFrostApiKey: 'testnetLYuDgDFyN0OD1s9hXnNMVzyRlPN7imcG',\r\n  blockFrostApiKeyMainnet: 'mainnetlAVJlI0cwOhk8Iv8jVVLcRJGGGjg41J8',\r\n  adminNamiWalletAddress: 'addr_test1qzs9twae6mr972hrvnglv8hhujygcelgjgwmyt7zxpwghyg6x6z4ph0smdthszxfw2sctq4f0u6dltl65wqy2dpjxwaq0mnttc',\r\n  ADMIN_ROYALITY: 1.77,\r\n  ASSET_TRANSFER_PRICE: 1.5,\r\n  TRIPPY_OWL_COLLECTION_PRICE: 3,\r\n  SERVER_URL: URL,\r\n  baseUrlAPI: `${URL}/api/v0/nft` // 'https://6db24df63462.ngrok.io/api/v0/nft' // 'https://backend.grisemetamoonverse.io/api/v0/nft'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, EventEmitter, Inject, Input, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { ModalDirective } from 'angular-bootstrap-md';\r\n\r\n@Component({\r\n  selector: 'app-confirm-dialog',\r\n  templateUrl: './confirm-dialog.component.html',\r\n  styleUrls: ['./confirm-dialog.component.scss']\r\n})\r\nexport class ConfirmDialogComponent implements OnInit {\r\n\r\n  @Input() data: any;\r\n  @Output() onConfirm = new EventEmitter<any>();\r\n  @ViewChild('closebutton') closebutton: any;\r\n\r\n  // constructor(public dialogRef: MatDialogRef<ConfirmDialogComponent>,\r\n  //   @Inject(MAT_DIALOG_DATA) public data: any) { }\r\n\r\n  ngOnInit() { }\r\n\r\n  onNoClick() {\r\n    // this.dialogRef.close();\r\n  }\r\n\r\n  onYesClick() {\r\n    this.onConfirm.emit(this.data);\r\n    this.closebutton.nativeElement.click();\r\n  }\r\n}\r\n","<!-- <div class=\"dialog-container\">\r\n  <h1 mat-dialog-title>Confirmation</h1>\r\n  <div mat-dialog-content *ngIf=\"data?.dialogType == 0\">\r\n    <h3>Do you want to continue to cancel stake...?</h3>\r\n    <table>\r\n      <tr *ngIf=\"data?.transaction?.stakeBasicData?.penaltyAmount != 0\">\r\n        <td>Stake Penalty Amount:</td>\r\n        <td>{{ data?.transaction?.stakeBasicData?.penaltyAmount | number:'1.0-2' }} Grise</td>\r\n      </tr>\r\n    </table>\r\n  </div>\r\n  <div mat-dialog-content *ngIf=\"data?.dialogType == 1\">\r\n    <h3>Do you want to continue to scrape reward...?</h3>\r\n    <table>\r\n      <tr *ngIf=\"data?.transaction?.stakeRewardData?.transcRewardAmount != 0\">\r\n        <td>Transaction Fees Reward:</td>\r\n        <td>{{ data?.transaction?.stakeRewardData?.transcRewardAmount | number: '1.0-2' }} Grise</td>\r\n      </tr>\r\n      <tr *ngIf=\"data?.transaction?.stakeRewardData?.penaltyRewardAmount != 0\">\r\n        <td>Cancellation Penalty Reward:</td>\r\n        <td>{{ data?.transaction?.stakeRewardData?.penaltyRewardAmount | number: '1.0-2' }} Grise</td>\r\n      </tr>\r\n      <tr *ngIf=\"data?.transaction?.stakeRewardData?.reservoirRewardAmount != 0\">\r\n        <td>Reservoir Reward:</td>\r\n        <td>{{ data?.transaction?.stakeRewardData?.reservoirRewardAmount | number: '1.0-2' }} Grise</td>\r\n      </tr>\r\n      <tr *ngIf=\"data?.transaction?.stakeRewardData?.inflationRewardAmount != 0\">\r\n        <td>Inflation Reward:</td>\r\n        <td>{{ data?.transaction?.stakeRewardData?.inflationRewardAmount | number: '1.0-2' }} Grise</td>\r\n      </tr>\r\n      <tr *ngIf=\"data?.haveMultiReward\">\r\n        <td></td>\r\n        <td></td>\r\n      </tr>\r\n      <tr *ngIf=\"data?.haveMultiReward\">\r\n        <td>Total Scrape Reward:</td>\r\n        <td>{{ data?.totalScrapeReward | number: '1.0-2' }} Grise</td>\r\n      </tr>\r\n    </table>\r\n  </div>\r\n  <div mat-dialog-actions>\r\n    <button class=\"btn btn-primary tab-button\" mat-button [mat-dialog-close]=\"data.transaction\" cdkFocusInitial><i\r\n        class=\"fas fa-check\"></i> Yes</button>\r\n    <button class=\"btn btn-primary tab-button\" mat-button (click)=\"onNoClick()\"><i class=\"fas fa-times\"></i>\r\n      No</button>\r\n  </div>\r\n</div> -->\r\n\r\n<div style=\"color: black;\" class=\"modal fade\" id=\"confirmModal\" data-backdrop=\"static\" data-keyboard=\"true\"\r\n  tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"confirmModalLabel\" aria-hidden=\"true\" #myModal>\r\n  <div class=\"modal-dialog modal-dialog-centered modal-md\" role=\"document\">\r\n    <div class=\"modal-content dialog-container\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\" id=\"confirmModalLabel\">\r\n          Confirmation</h5>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <div mat-dialog-content *ngIf=\"data?.dialogType == 0\">\r\n          <h3 class=\"text-left\">Do you want to continue to cancel stake...?</h3>\r\n          <table>\r\n            <tr *ngIf=\"data?.transaction?.stakeBasicData?.penaltyAmount != 0\">\r\n              <td>Stake Penalty Amount:</td>\r\n              <td>{{ data?.transaction?.stakeBasicData?.penaltyAmount | number:'1.0-2' }} Grise</td>\r\n            </tr>\r\n          </table>\r\n        </div>\r\n        <div mat-dialog-content *ngIf=\"data?.dialogType == 1\">\r\n          <h3 class=\"text-left\">Do you want to continue to scrape reward...?</h3>\r\n          <table>\r\n            <tr *ngIf=\"data?.transaction?.stakeRewardData?.transcRewardAmount != 0\">\r\n              <td>Transaction Fees Reward:</td>\r\n              <td>{{ data?.transaction?.stakeRewardData?.transcRewardAmount | number: '1.0-2' }} Grise</td>\r\n            </tr>\r\n            <tr *ngIf=\"data?.transaction?.stakeRewardData?.penaltyRewardAmount != 0\">\r\n              <td>Cancellation Penalty Reward:</td>\r\n              <td>{{ data?.transaction?.stakeRewardData?.penaltyRewardAmount | number: '1.0-2' }} Grise</td>\r\n            </tr>\r\n            <tr *ngIf=\"data?.transaction?.stakeRewardData?.reservoirRewardAmount != 0\">\r\n              <td>Reservoir Reward:</td>\r\n              <td>{{ data?.transaction?.stakeRewardData?.reservoirRewardAmount | number: '1.0-2' }} Grise</td>\r\n            </tr>\r\n            <tr *ngIf=\"data?.transaction?.stakeRewardData?.inflationRewardAmount != 0\">\r\n              <td>Inflation Reward:</td>\r\n              <td>{{ data?.transaction?.stakeRewardData?.inflationRewardAmount | number: '1.0-2' }} Grise</td>\r\n            </tr>\r\n            <tr *ngIf=\"data?.haveMultiReward\">\r\n              <td></td>\r\n              <td></td>\r\n            </tr>\r\n            <tr *ngIf=\"data?.haveMultiReward\">\r\n              <td>Total Scrape Reward:</td>\r\n              <td>{{ data?.totalScrapeReward | number: '1.0-2' }} Grise</td>\r\n            </tr>\r\n          </table>\r\n        </div>\r\n      </div>\r\n      <div class=\"modal-footer\" style=\"padding:0; margin:0\">\r\n        <button class=\"btn btn-primary tab-button\" (click)=\"onYesClick()\"><i class=\"fas fa-check\"></i> Yes</button>\r\n        <button class=\"btn btn-primary tab-button\" data-dismiss=\"modal\" #closebutton><i\r\n            class=\"fas fa-times\"></i>\r\n          No</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { OtherTokenBalanceData } from 'src/app/models/other-token-balance-data';\r\nimport { LocalDataUpdateService } from 'src/app/services/local-data-update.service';\r\nimport { SharedService } from 'src/app/services/shared.service';\r\nimport { SlotData, SlotType } from '../../models/slot-data';\r\nimport { LiquidityContractService } from '../../services/liquidity-contract.service';\r\nimport { environment as env } from './../../../environments/environment';\r\nimport { SpinnerService } from './../../helper/spinner/spinner.service';\r\nimport { ContractService } from './../../services/contract.service';\r\nimport { MinAbiDataContractService } from './../../services/minabi-data-contract.service';\r\n\r\n@Component({\r\n  selector: 'app-dialog',\r\n  templateUrl: './dialog.component.html',\r\n  styleUrls: ['./dialog.component.scss']\r\n})\r\nexport class DialogComponent implements OnInit {\r\n  selectedCoin: string;\r\n  amount: number;\r\n  allSelected = false;\r\n  fixedSelected = false;\r\n  randomSelected = false;\r\n  workingSlots: SlotData[];\r\n  filterSlots: SlotData[];\r\n  allOtherCoins = [{ name: 'BNB', tokenAddress: '' }];\r\n  minValueRequired: number;\r\n  valuePlaceHolder: string;\r\n  selectedCoinBalaceData: OtherTokenBalanceData;\r\n  totalSelectedSlots = 0;\r\n  insufficientBalanceText: string;\r\n  @ViewChild('f') form: NgForm;\r\n\r\n  constructor(private sharedService: SharedService,\r\n    private liquidityContractService: LiquidityContractService,\r\n    private localDataUpdateService: LocalDataUpdateService,\r\n    private minAbiDataContractService: MinAbiDataContractService,\r\n    private contractService: ContractService,\r\n    private toastr: ToastrService,\r\n    private spinnerService: SpinnerService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.localDataUpdateService.isDialogDataUpdated.subscribe((state) => {\r\n      this.setDefaultCoinData('BNB');\r\n      if (state) {\r\n        this.sharedService.deselectAllSlots();\r\n        this.workingSlots = this.sharedService.allSlots.filter(s => !s.isExpired);\r\n        this.filterSlots = this.workingSlots;\r\n        this.sharedService.updateSlotsTimer();\r\n\r\n        this.localDataUpdateService.isSlotsReservationDataUpdated.subscribe(() => {\r\n          this.sharedService.updateSlotsReservation();\r\n          setTimeout(() => {\r\n            const selCoin = this.allOtherCoins.filter(c => c.name == this.selectedCoin);\r\n            if (selCoin.length > 0) { this.getSelectedCoinBalanceData(selCoin[0]); }\r\n          }, 1000);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  getSelectedCoin(coin: any) {\r\n    if (this.selectedCoin == coin.name) {\r\n      return;\r\n    }\r\n\r\n    this.getSelectedCoinBalanceData(coin);\r\n  }\r\n\r\n  getSelectedCoinBalanceData(coin: any) {\r\n    if (coin.tokenAddress) {\r\n      this.spinnerService.show();\r\n      this.minAbiDataContractService.getOtherTokenBalance(coin.tokenAddress).then(otherTokenBalanceData => {\r\n        if (otherTokenBalanceData) {\r\n          this.selectedCoin = coin.name;\r\n          this.selectedCoinBalaceData = otherTokenBalanceData;\r\n          this.minValueRequired = +(this.selectedCoinBalaceData.regularRate * 0.11).toFixed(2);\r\n          this.setPlaceHolderValueText();\r\n          this.spinnerService.hide();\r\n        }\r\n      });\r\n    } else {\r\n      this.setDefaultCoinData(coin.name);\r\n    }\r\n  }\r\n\r\n  setDefaultCoinData(coinName: string) {\r\n    this.selectedCoin = coinName;\r\n    this.selectedCoinBalaceData = {\r\n      tokenLargeBalance: this.contractService.totalBalance * (10 ** 18),\r\n      decimalPlaces: 18,\r\n      tokenShortBalance: +this.contractService.totalBalance,\r\n      regularRate: 1,\r\n      reverseRate: 1\r\n    };\r\n    this.minValueRequired = 0.5;\r\n    this.setPlaceHolderValueText();\r\n  }\r\n\r\n  setPlaceHolderValueText() {\r\n    this.setTotalSelectedSlotsCount();\r\n    const minValue = this.minValueRequired * this.totalSelectedSlots;\r\n    this.valuePlaceHolder = `Min [${minValue.toFixed(2)}] Required`;\r\n  }\r\n\r\n  setTotalSelectedSlotsCount() {\r\n    if (this.workingSlots != undefined) {\r\n      this.totalSelectedSlots = this.workingSlots.filter(val => val.isSelected && !val.isExpired).length;\r\n    }\r\n    this.totalSelectedSlots = this.totalSelectedSlots == 0 ? 1 : this.totalSelectedSlots;\r\n  }\r\n\r\n  selectDeselectAll() {\r\n    this.allSelected = !this.allSelected;\r\n    this.fixedSelected = false;\r\n    this.randomSelected = false;\r\n    this.workingSlots.forEach(slot => {\r\n      slot.isSelected = this.allSelected;\r\n    });\r\n    this.setPlaceHolderValueText();\r\n  }\r\n\r\n  selectDeselectFixed() {\r\n    this.fixedSelected = !this.fixedSelected;\r\n    this.allSelected = false;\r\n    this.randomSelected = false;\r\n    this.workingSlots.forEach(slot => {\r\n      if (this.fixedSelected && slot.type != SlotType.Fixed) {\r\n        slot.isSelected = false;\r\n      } else {\r\n        slot.isSelected = this.fixedSelected;\r\n      }\r\n    });\r\n    this.setPlaceHolderValueText();\r\n  }\r\n\r\n  selectDeselectRandom() {\r\n    this.randomSelected = !this.randomSelected;\r\n    this.allSelected = false;\r\n    this.fixedSelected = false;\r\n    this.workingSlots.forEach(slot => {\r\n      if (this.randomSelected && slot.type != SlotType.Random) {\r\n        slot.isSelected = false;\r\n      } else {\r\n        slot.isSelected = this.randomSelected;\r\n      }\r\n    });\r\n    this.setPlaceHolderValueText();\r\n  }\r\n\r\n  singleSelect(slot: any) {\r\n    const selectedSlot = this.workingSlots.find(s => s.id == slot.id);\r\n    if (selectedSlot) {\r\n      selectedSlot.isSelected = !selectedSlot.isSelected;\r\n    }\r\n    this.setPlaceHolderValueText();\r\n  }\r\n\r\n  checkValueWithBalance(): boolean {\r\n    if (this.insufficientBalanceText) { this.insufficientBalanceText = ''; }\r\n    if (this.form && !this.form.valid) {\r\n      return true;\r\n    }\r\n    let minRequired = +(this.minValueRequired * this.totalSelectedSlots).toFixed(2);\r\n    if (this.amount < minRequired) {\r\n      return true;\r\n    }\r\n    if (this.amount > this.selectedCoinBalaceData.tokenShortBalance) {\r\n      this.insufficientBalanceText = 'Insufficient Balance';\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  reserveClick() {\r\n    if (this.checkValueWithBalance()) {\r\n      return;\r\n    }\r\n    // if (this.amount > this.selectedCoinBalaceData.tokenShortBalance) {\r\n    //   this.toastr.warning('Insufficient Balance.');\r\n    //   return;\r\n    // }\r\n\r\n    const slotNos: number[] = [];\r\n    this.workingSlots.filter(val => val.isSelected && !val.isExpired).forEach(slot => {\r\n      slotNos.push(slot.id);\r\n    });\r\n\r\n    if (slotNos.length > 0) {\r\n      const coinData = this.allOtherCoins.filter(c => c.name == this.selectedCoin);\r\n      if (coinData.length > 0) {\r\n        const coinTokenAddress = coinData[0].tokenAddress;\r\n        if (coinTokenAddress) {\r\n          const coinAmount = (this.amount * (10 ** this.selectedCoinBalaceData.decimalPlaces)).toString();\r\n\r\n          this.minAbiDataContractService.getTransactionApproval(coinTokenAddress, coinAmount);\r\n          const subscription = this.localDataUpdateService.isTransactionApproved.subscribe((isApproved) => {\r\n            if (isApproved) {\r\n              this.liquidityContractService.addReservationWithToken(coinTokenAddress, slotNos, coinAmount);\r\n              this.localDataUpdateService.updateTransactionApproved(false);\r\n              subscription.unsubscribe();\r\n            }\r\n          });\r\n        } else {\r\n          this.liquidityContractService.addReservation(slotNos, this.amount);\r\n        }\r\n        this.form.reset();\r\n        this.reset();\r\n      }\r\n    } else {\r\n      this.toastr.info('You must select a slot.');\r\n      return;\r\n    }\r\n  }\r\n\r\n  reset() {\r\n    this.sharedService.deselectAllSlots();\r\n    this.allSelected = false;\r\n    this.fixedSelected = false;\r\n    this.randomSelected = false;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.sharedService.stopSlotsTimer();\r\n    this.sharedService.deselectAllSlots();\r\n  }\r\n\r\n}\r\n","<div style=\"color: black;\" class=\"modal fade\" id=\"reserveModal\" data-backdrop=\"static\" data-keyboard=\"true\"\r\n    tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"reserveModalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"model\">\r\n                <a class=\"btn-close\" href=\"javascript:void(0)\" data-dismiss=\"modal\">X</a>\r\n\r\n                <!-- <div style=\"float: right;background-color:black;border-radius:50px; \">\r\n      <i class=\"fas fa-info\" style=\"color: white;margin:15px; background-color:black; \"></i>\r\n    </div> -->\r\n                <!-- <br>\r\n    <br> -->\r\n                <div>\r\n                    <div style=\"float: left\">\r\n                        <button class=\"button\" mat-button (click)=\"selectDeselectAll()\" style=\"margin-top: 0\">{{\r\n                            allSelected ?\r\n                            'Deselect All Days' : 'Select All Days' }}</button>\r\n                        <!-- <button class=\"button\" mat-button (click)=\"selectDeselectFixed()\" style=\"margin-top: 0\">{{\r\n                            fixedSelected ?\r\n                            'Deselect Fixed Days' : 'Select Fixed Days' }}</button>\r\n                        <button class=\"button\" mat-button (click)=\"selectDeselectRandom()\" style=\"margin-top: 0\">{{\r\n                            randomSelected ?\r\n                            'Deselect Random Days' : 'Select Random Days' }}</button> -->\r\n                    </div>\r\n                    <!-- <div style=\"float: right\">\r\n            \r\n                <button class=\"button\" mat-button (click)=\"select_all()\" style=\"margin-top: 0;width:100px\">Select All</button>\r\n        \r\n        </div> -->\r\n                </div>\r\n                <div style=\"width: 656px;height: 445px; overflow-x: hidden\">\r\n\r\n                    <div *ngFor=\"let slot of filterSlots\">\r\n                        <div class=\"col-sm-12 main\" *ngIf=\"!slot.isExpired\">\r\n\r\n                            <div class=\"card product_item cell \" (click)=\"singleSelect(slot)\"\r\n                                [ngStyle]=\"{'background-color': slot.isSelected ? '#8C52FF' : '#46494f' }\"\r\n                                id='{{slot.id}}'>\r\n                                <div class=\"body\">\r\n                                    <div class=\"cp_img\">\r\n                                        <div class=\"hover\">\r\n                                            <div style=\"display: flex\">\r\n                                                <div style=\"width: 49%; margin-top: 2%;\">\r\n                                                    <p class=\"btn  btn-sm waves-effect time\" style=\"margin: 0;\">{{\r\n                                                        slot.startDate |\r\n                                                        date }}\r\n                                                        day#{{(slot.day)}} </p>\r\n                                                    <p class=\"snd\" style=\"text-align:center; margin-bottom: 0px;\">\r\n                                                        {{slot.name}}\r\n                                                        GRISE </p>\r\n                                                    <a class=\"btn  btn-sm waves-effect time\"\r\n                                                        style=\"margin: 8px;margin-top: 0\">\r\n                                                        <i class=\"fa fa-clock\"></i>\r\n                                                        closing in {{ slot.timeLeft }}\r\n                                                    </a>\r\n                                                </div>\r\n                                                <div class=\"vertical-divider\">\r\n                                                    <div class=\"center-element\">{{slot.id}}</div>\r\n                                                </div>\r\n                                                <div style=\"width: 49%; display: flex;margin-top: 2%;\">\r\n                                                    <div class=\"section\" style=\"margin-left: 20%;\">\r\n                                                        <i class=\"fa fa-user\" [style.color]=\"slot.color\"\r\n                                                            aria-hidden=\"true\" style=\"font-size:40px\"></i>\r\n                                                        <h4>{{slot.slotLeft}}</h4>\r\n                                                        <h4>Slots Left</h4>\r\n                                                    </div>\r\n                                                    <div class=\"section\" style=\"margin-right: 5%;\">\r\n                                                        <i class=\"fab fa-ethereum\" [style.color]=\"slot.color\"\r\n                                                            style=\"font-size: 40px\"></i><br>\r\n                                                        <h4>{{slot.totalInvest | number:'1.0-5'}}</h4>\r\n                                                        <h4>Total BNB</h4>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <form #f=\"ngForm\" (ngSubmit)=\"reserveClick()\">\r\n                    <div style=\"float: left;margin-top: 12px;\">\r\n                        <!-- <button mat-button class=\"button\" style=\"margin-bottom: 0\">MiniMum amount 0.5 BNB</button> -->\r\n                        <span style=\"display: flex !important;\">\r\n                            <input type=\"number\" class=\"form-control\" [placeholder]=\"valuePlaceHolder\" required\r\n                                name=\"amountInput\" id=\"amountInput\" [(ngModel)]=\"amount\" #amountInput=\"ngModel\"\r\n                                style=\"border-radius: 0; height: 36px;border: none;border-radius: 5px 0 0 5px; width: 60%;\">\r\n                            <button class=\"dropdown_button\"\r\n                                style=\"border-radius: 0;height: 36px;border-radius: 0 5px 5px 0 ;background-color: #f0ebeb !important\"\r\n                                value=\"{{selectedCoin}}\">{{selectedCoin}}</button>\r\n                            <ul class=\"dropdown-menu\">\r\n                                <li *ngFor=\"let othercoin of allOtherCoins\">\r\n                                    <a (click)=\"getSelectedCoin(othercoin)\">{{ othercoin.name }}</a>\r\n                                </li>\r\n                            </ul>\r\n                        </span>\r\n                    </div>\r\n                    <button type=\"submit\" class=\"btn btn-primary button\" [disabled]=\"checkValueWithBalance()\"\r\n                        style=\"float: right;margin-bottom:0;height: 38px;width: 249px\">{{ insufficientBalanceText ?\r\n                        insufficientBalanceText : 'Reserve' }}</button>\r\n                </form>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n</div>","<div class=\"container-fluid bg-color\">\r\n    <div class=\"row content\">\r\n      \r\n  \r\n      <div class=\"col-lg-12 col-md-12 tokeninfo-second\">\r\n        <div class=\"scrollable-title-container\">\r\n          <!-- <img style=\"width: 250px\" src=\"../../../assets/logo.png\"> -->\r\n          <!-- <i class=\"fas fa-coins\"></i> -->\r\n          <label class=\"scrollable-title mb-5\">My NFT's</label>\r\n        </div>\r\n  \r\n        <div class=\"nft-container\">\r\n          <!-- <div *ngIf=\"!allMyNFTGroups[0] || !allMyNFTGroups[0].contentData || allMyNFTGroups[0].contentData.length === 0 && hideAssets\" class=\"empty-list\">\r\n            <img src=\"/assets/empty-bids.svg\"/>\r\n            <p>No assets yet</p>\r\n           </div> -->\r\n\r\n           <div *ngIf=\"(!allMyNFTGroups[0] || !allMyNFTGroups[0].contentData || allMyNFTGroups[0].contentData.length === 0) && hideAssets\" class=\"empty-list\">\r\n            <img src=\"/assets/empty-bids.svg\"/>\r\n            <p>No assets yet</p>\r\n           </div>\r\n          <div>\r\n            <div class=\"heading\">\r\n              <h1 class=\"heading-text\"></h1>\r\n              <div class=\"line-splitter\"></div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div\r\n              *ngFor=\"let nftContent of ((allMyNFTGroups[0] && allMyNFTGroups[0].contentData) ? allMyNFTGroups[0].contentData : [])\"\r\n                class=\"col-xl-4 col-lg-4 col-md-4 col-sm-6 col-xs-12 d-flex\"\r\n              >\r\n              <div class=\"tab flex-column align-items-center\">\r\n                \r\n                <!-- <img\r\n                class=\"img-responsive nft-img\"\r\n                [src]=\"nftContent.contentPath\"\r\n                alt=\"NFTs\"\r\n                (click)=\"redirectlandingPage(nftContent.nftObj)\"\r\n                /> -->\r\n\r\n                <img *ngIf=\"!spinnerLoader\" src=\"../../../assets/wait-loader.gif\" class=\"loader-image\">\r\n                <img *ngIf=\"!nftContent.src\" [hidden]=\"!spinnerLoader\" [src]=\"nftContent.contentPath\" (load)=\"spinnerLoader = true\" class=\"img-responsive nft-img\" (click)=\"redirectlandingPage(nftContent.nftObj)\">\r\n                <img *ngIf=\"nftContent.src\" [hidden]=\"!spinnerLoader\" [src]=\"nftContent.src\" (load)=\"spinnerLoader = true\" class=\"img-responsive nft-img\" (click)=\"redirectlandingPage(nftContent.nftObj)\">\r\n\r\n                <div class=\"d-flex justify-content-between align-items-center nftcolumn\" *ngIf=\"false\">\r\n                <a\r\n                *ngIf=\"nftContent.nftObj.status == 'mint' || nftContent.nftObj.status == 'buy' || nftContent.nftObj.status == 'cancel'\"\r\n                (click)=\"redirectform(nftContent.nftObj)\"\r\n                href=\"javascript:void(0)\"\r\n                class=\"btn btn-primary tab-button border-0\"\r\n                >\r\n                Sell\r\n                </a>\r\n                <a\r\n                *ngIf=\"nftContent.nftObj.status == 'list' || nftContent.nftObj.status == 'cancelPending'\"\r\n                (click)=\"cancelSelectedNft(nftContent.nftObj)\"\r\n                href=\"javascript:void(0)\"\r\n                class=\"btn btn-primary tab-button border-0 position-relative\"\r\n                [ngClass]=\"{'custumspinner' : cancelbtn}\"\r\n                >\r\n                Cancel from list\r\n                </a>\r\n                <span>{{ nftContent.nftObj.amount || '-' }} ADA</span>\r\n                </div>\r\n             </div>\r\n            </div>\r\n\r\n            <!-- <div\r\n                \r\n                class=\"col-xl-4 col-lg-4 col-md-4 col-sm-6 col-xs-12\"\r\n              >\r\n                <div class=\"tab flex-column align-items-center\">\r\n                    <img\r\n                  class=\"img-responsive nft-img\"\r\n                  alt=\"NFTs\"\r\n                  src=\"../../../assets/rare.png\"\r\n                />\r\n                <div class=\"d-flex justify-content-between align-items-center nftcolumn \">\r\n                  <a\r\n                href=\"javascript:void(0)\"\r\n                class=\"btn btn-primary tab-button border-0\"\r\n                >\r\n                Mint\r\n                </a>\r\n                <span>$100</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n\r\n            <div\r\n                \r\n                class=\"col-xl-4 col-lg-4 col-md-4 col-sm-6 col-xs-12\"\r\n              >\r\n                <div class=\"tab flex-column align-items-center\">\r\n                    <img\r\n                  class=\"img-responsive nft-img\"\r\n                  alt=\"NFTs\"\r\n                  src=\"../../../assets/rare.png\"\r\n                />\r\n                <div class=\"d-flex justify-content-between align-items-center nftcolumn \">\r\n                  <a\r\n                href=\"javascript:void(0)\"\r\n                class=\"btn btn-primary tab-button border-0\"\r\n                >\r\n                Mint\r\n                </a>\r\n                <span>$100</span>\r\n                </div>\r\n              </div>\r\n            </div> -->\r\n            \r\n          </div>\r\n          \r\n        </div>\r\n       \r\n      </div>\r\n      \r\n    </div>\r\n  </div>\r\n\r\n  </div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from \"@angular/router\";\r\nimport {\r\n  NFTContentGroup,\r\n  NFTContentGroupData,\r\n  NftObjData\r\n} from \"src/app/models/nft-content-group-data\";\r\nimport { NFTContentType } from \"src/app/models/nft-content-data\";\r\nimport { NFTsAPIServices } from \"../../services/nft.service\";\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { SpinnerService } from '../../helper/spinner/spinner.service';\r\nimport { environment as env } from '../../../environments/environment';\r\nimport Loader from '../../services/nami-loader.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-my-nfts',\r\n  templateUrl: './my-nfts.component.html',\r\n  styleUrls: ['./my-nfts.component.scss']\r\n})\r\nexport class MyNftsComponent implements OnInit {\r\n  SERVER_URL = env.SERVER_URL;\r\n  \r\n  allMyNFTGroups: NFTContentGroupData[] = [];\r\n  selectedNft: any;\r\n  authUser: any = null;\r\n  hideAssets = false;\r\n  spinnerLoader = true;\r\n  constructor(\r\n    private readonly APIServices: NFTsAPIServices,\r\n    private readonly router: Router,\r\n    private toastr: ToastrService,\r\n    private spinnerService: SpinnerService\r\n  ) { }\r\n  cancelbtn: boolean = false;\r\n  async ngOnInit() {\r\n\r\n    this.APIServices.userLoginData$.subscribe(async (data) => {\r\n      // console.log(data, 'My NFT component');\r\n      this.authUser = data;\r\n\r\n      this.allMyNFTGroups = [];\r\n\r\n      try {\r\n        const Nami = await Loader.Cardano();\r\n\r\n        const namiWalletAssetsList = await Nami.getAssets();\r\n        const namiWalletTokens = namiWalletAssetsList.map((item: any) => item.unit);\r\n        let paymentAddr = await Loader.CardanoWalletAddress(); // await Nami.getAddress();\r\n        const walletAddr = paymentAddr;\r\n\r\n        if (walletAddr) {\r\n\r\n          const checkWallet = await Loader.verifyWallet(0, this.authUser.type);\r\n          // console.log(\"clickMint verifyWallet => \", checkWallet);\r\n\r\n          if (checkWallet !== true) {\r\n            this.toastr.warning(checkWallet)\r\n            return\r\n          }\r\n\r\n          this.APIServices.myNftsList(\r\n            {\r\n              walletAddress: await Loader.CardanoWalletAddress(),\r\n              action: 'getUserNfts'\r\n            }\r\n          )\r\n            .then(async (res) => {\r\n\r\n              let userNftsList = res.data ? res.data : [];\r\n              const list: any = [];\r\n              this.spinnerLoader =  false;\r\n              userNftsList.map(async (item: any) => {\r\n                if ((namiWalletTokens.includes(item.mintToken) || item.status === 'list' || item.status === 'cancelPending') && (item.nftId && item.nftId.nftType !== 'trippy-owl')) {\r\n                  list.push(item);\r\n                }\r\n              });\r\n\r\n              this.allMyNFTGroups = [\r\n                {\r\n                  id: 1,\r\n                  contentGroup: NFTContentGroup.Mythic,\r\n                  contentHeader: \"My NFTs\",\r\n                  contentData: list.map( (item: any) => {\r\n                    const nft = item.nftId;\r\n                    \r\n                    return {\r\n                      contentType: (nft && nft.nftType === \"mythic\") ? NFTContentType.Gif : NFTContentType.Image,\r\n                      contentPath: nft && nft.imageLink, //? nft.imageLink : `assets/${nft && nft.nftType ? nft.nftType : 'type'}/${nft && nft.src ? nft.src : 'src'}`,\r\n                      nftObj: item,\r\n                      src: nft && nft.nftType === 'trippy-owl-single' ? `${this.SERVER_URL}/trippy-owl/${nft.src}` : null \r\n                    }\r\n                  }),\r\n                },\r\n              ];\r\n              \r\n            })\r\n            .catch(async (err) => {\r\n              console.log(\"Error is: \", err);\r\n            });\r\n        }\r\n      } catch (err) {\r\n        console.log(\"wallet error is: \", err);\r\n      }\r\n    })\r\n\r\n    setTimeout(() => {\r\n      this.hideAssets = true;\r\n     }, 5000);\r\n\r\n  }\r\n\r\n  redirectlandingPage(data: any) {\r\n    this.setSelectedNft(data);\r\n    // this.router.navigateByUrl(\"/landing\");\r\n  }\r\n  setSelectedNft(data: any) {\r\n    // this.selectedNft = data;\r\n    data.nftId[\"userNftId\"] = data._id;\r\n    // this.selectedNft$ = new BehaviorSubject(data);\r\n    const obj = {\r\n      ...data.nftId,\r\n      mintToken: data.mintToken,\r\n      amount: data.amount\r\n    }\r\n    localStorage.setItem(\"selectedNft\", JSON.stringify(obj));\r\n    this.APIServices.userLoginData$.next(data.nftId);\r\n  }\r\n\r\n  redirectform(data: any) {\r\n    console.log(\"data :: \", data);\r\n\r\n    this.setSelectedNft(data);\r\n    this.router.navigateByUrl(\"/form\");\r\n\r\n    // service\r\n    // make a observable\r\n  }\r\n\r\n  cancelSelectedNft(data: any) {\r\n    console.log(\"data :: \", data);\r\n    this.cancelbtn = true;\r\n    if (data && data._id) {\r\n      this.APIServices.cancelUserNft(data._id)\r\n        .then((res) => {\r\n          console.log(this.allMyNFTGroups, \"response is \", res);\r\n          if (res.status) {\r\n            // const nftIndex = this.allMyNFTGroups[0].contentData.findIndex(item => item.nftObj._id === data._id);\r\n            // this.allMyNFTGroups[0].contentData[nftIndex].nftObj.status = 'list';\r\n            // this.allMyNFTGroups = JSON.parse(JSON.stringify(this.allMyNFTGroups));\r\n            this.cancelbtn = false;\r\n            this.toastr.success(res.msg);\r\n          } else {\r\n            this.toastr.error(res.msg);\r\n            this.cancelbtn = false;\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"Error is: \", err);\r\n          this.cancelbtn = false;\r\n        });\r\n    }\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, ChangeDetectionStrategy } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { NFTsAPIServices } from \"../../services/nft.service\";\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { SpinnerService } from '../../helper/spinner/spinner.service';\r\nimport { environment as env } from \"../../../environments/environment\";\r\n\r\nimport Loader from '../../services/nami-loader.service';\r\nimport MintLoader from '../../services/nami-minting-243.service';\r\nimport { CountdownConfig, CountdownEvent } from 'ngx-countdown';\r\n@Component({\r\n  selector: \"app-home\",\r\n  templateUrl: \"./home.component.html\",\r\n  styleUrls: [\"./home.component.scss\"],\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  adminNamiWalletAddress = env.adminNamiWalletAddress;\r\n  TRIPPY_OWL_COLLECTION_PRICE = env.TRIPPY_OWL_COLLECTION_PRICE\r\n  ASSET_TRANSFER_PRICE = env.ASSET_TRANSFER_PRICE;\r\n  SERVER_URL = env.SERVER_URL;\r\n\r\n  authUser: any = null;\r\n  uniswapUrl = env.uniswapUrl;\r\n  days: number;\r\n  hours: number;\r\n  minutes: number;\r\n  seconds: number;\r\n  timerhide: boolean = true;\r\n  buttondisnft: boolean = false;\r\n  timershow: null;\r\n  circleLoader: boolean = false;\r\n  // myObj = JSON.parse('{\"name\":\"John\", \"age\":31, \"city\":\"New York\"}');\r\n  // constructor() { }\r\n\r\n  KEY = 'time'\r\n  DEFAULT = 300 // seconds (5 min)\r\n\r\n  config: CountdownConfig = { leftTime: this.DEFAULT, notify: 0, format: 'm:s' }\r\n\r\n  constructor(\r\n    private readonly APIServices: NFTsAPIServices,\r\n    private readonly router: Router,\r\n    private toastr: ToastrService,\r\n    private spinnerService: SpinnerService\r\n  ) { }\r\n\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n  public navigateToSection(section: string) {\r\n    window.location.hash = \"\";\r\n    window.location.hash = section;\r\n  }\r\n\r\n  async ngOnInit() {\r\n    localStorage.setItem(\"isCollectionLaunched\", \"0\");\r\n\r\n    let exctingValue: any = localStorage.getItem(this.KEY)\r\n    let value = +exctingValue ?? this.DEFAULT;\r\n    if (value <= 0) {\r\n      value = this.DEFAULT\r\n      //localStorage.clear();\r\n    }\r\n    this.config = { ...this.config, leftTime: value }\r\n\r\n\r\n    this.buttondisnft = Boolean(localStorage.getItem('buttonvaluenft'));\r\n\r\n\r\n\r\n    // const userApiResp: any = await new Promise(async (resolve, reject) => {\r\n    //   const regUser = await this.APIServices.userRegister({\r\n    //     walletAddr: await Loader.CardanoWalletAddress()\r\n    //   });\r\n    //   resolve(regUser)\r\n    // });\r\n    // if (userApiResp.status) {\r\n    //   localStorage.setItem(\"token\", userApiResp.token);\r\n    //   this.authUser = userApiResp.data.type;\r\n    // }\r\n\r\n\r\n\r\n\r\n    this.read();\r\n\r\n    // var countDownDate = new Date(\"March 26, 2022 17:00:00\").getTime();\r\n    var countDownDate = new Date(Date.UTC(2022, 2, 29, 14)).getTime();\r\n\r\n    var x = setInterval(() => {\r\n      var now = new Date().getTime();\r\n\r\n      var distance = countDownDate - now;\r\n\r\n      this.days = Math.floor(distance / (1000 * 60 * 60 * 24));\r\n      this.hours = Math.floor(\r\n        (distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\r\n      );\r\n      this.minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\r\n      this.seconds = Math.floor((distance % (1000 * 60)) / 1000);\r\n\r\n      if (distance < 0) {\r\n        clearInterval(x);\r\n        localStorage.setItem(\"isCollectionLaunched\", \"1\");\r\n        this.timerhide = false;\r\n      }\r\n    }, 1000);\r\n\r\n    this.APIServices.userLoginData$.subscribe((data) => {\r\n      console.log(data, 'Home component');\r\n      this.authUser = data;\r\n    })\r\n\r\n    this.APIServices.claimButtonLoading$.subscribe((data) => {\r\n      console.log(data, '@dadadadad home component claimButtonLoading');\r\n      this.circleLoader = data;\r\n    })\r\n\r\n    this.handleClaimButton((localStorage.getItem(\"claimBtnLoading\") === \"true\" ? true : false));\r\n    await this.syncNamiWallet();\r\n  }\r\n\r\n  text: string;\r\n  _CONTENT = [\"Secure\", \"Fair\", \"Sustainable\", \" Exponential growth\"];\r\n  _PART = 0;\r\n  _PART_INDEX = 0;\r\n  _INTERVAL_VAL: any;\r\n\r\n  read() {\r\n    this._INTERVAL_VAL = setInterval(() => this.Type(), 100);\r\n  }\r\n\r\n  Type() {\r\n    this.text = this._CONTENT[this._PART].substring(0, this._PART_INDEX + 1);\r\n\r\n    //_ELEMENT.innerHTML = text;\r\n\r\n    this._PART_INDEX++;\r\n    if (this.text === this._CONTENT[this._PART]) {\r\n      clearInterval(this._INTERVAL_VAL);\r\n      setTimeout(() => {\r\n        this._INTERVAL_VAL = setInterval(() => this.Delete(), 50);\r\n      }, 1000);\r\n    }\r\n  }\r\n\r\n  Delete() {\r\n    this.text = this._CONTENT[this._PART].substring(0, this._PART_INDEX - 1);\r\n\r\n    this._PART_INDEX--;\r\n    if (this.text === \"\") {\r\n      clearInterval(this._INTERVAL_VAL);\r\n      if (this._PART == this._CONTENT.length - 1) this._PART = 0;\r\n      else this._PART++;\r\n      this._PART_INDEX = 0;\r\n      setTimeout(() => {\r\n        this._INTERVAL_VAL = setInterval(() => this.Type(), 100);\r\n      }, 200);\r\n    }\r\n  }\r\n\r\n  async syncNamiWallet() {\r\n    const Nami = await Loader.Cardano();\r\n    const namiWalletAssetsList = await Nami.getAssets();\r\n    let totalNamiAssets = 0;\r\n    namiWalletAssetsList.map((item: any) => totalNamiAssets += Number(item.quantity));\r\n    console.log(\"Total Assets: \", totalNamiAssets);\r\n\r\n    // this.APIServices.totalNamiWalletNFT$.subscribe((totalNamiAssets) => {\r\n    if (!totalNamiAssets) return;\r\n    console.log(totalNamiAssets, '@dadadadad totalNamiWalletNFT nft collection component');\r\n    // this.authToken = data;\r\n    const prevTotalNamiAssets = localStorage.getItem(\"namiWalletTotalAssets\") ? Number(localStorage.getItem(\"namiWalletTotalAssets\")) : 0;\r\n    console.log(\"=============== HI ===================\", prevTotalNamiAssets)\r\n    if (totalNamiAssets > prevTotalNamiAssets) {\r\n      // console.log(\"current assets are more than prev\");\r\n      // Enable claim button\r\n      this.buttondisnft = false;\r\n      // localStorage.removeItem(\"buttonvaluenft\")\r\n      localStorage.removeItem(\"claimStartTime\");\r\n      localStorage.setItem(\"namiWalletTotalAssets\", `${totalNamiAssets}`);\r\n      this.handleClaimButton(false);\r\n\r\n    } else { // if (totalNamiAssets <= prevTotalNamiAssets) {\r\n      // console.log(\"current assets are less than prev or equal\");\r\n\r\n      const claimStartTime: any = localStorage.getItem(\"claimStartTime\");\r\n      if (claimStartTime) {\r\n\r\n        const prevTime: any = new Date(claimStartTime)\r\n        const currentTime: any = new Date();\r\n\r\n        var diffMs = (currentTime - prevTime);\r\n        var diffDays = Math.floor(diffMs / 86400000); // days\r\n        var diffHrs = Math.floor((diffMs % 86400000) / 3600000); // hours\r\n        var diffMins = Math.round(((diffMs % 86400000) % 3600000) / 60000); // minutes\r\n\r\n        console.log(\"date values: \", diffDays, diffHrs, diffMins);\r\n\r\n        // var currentdate: any = new Date(\"3/8/2022 18:31\");\r\n        //     localStorage.setItem(\"claimStartTime\", currentdate);\r\n\r\n        // enable claim button if 20 minutes passed\r\n        if (diffDays > 0 || diffHrs > 0 || diffMins > 5) {\r\n          console.log(\"check data\");\r\n          this.buttondisnft = false;\r\n          // localStorage.removeItem(\"buttonvaluenft\")\r\n          localStorage.setItem(\"namiWalletTotalAssets\", `${totalNamiAssets}`);\r\n          localStorage.removeItem(\"claimStartTime\");\r\n          this.handleClaimButton(false);\r\n        }\r\n      } else {\r\n        this.handleClaimButton(false);\r\n        this.buttondisnft = false;\r\n      }\r\n    }\r\n    // })\r\n  }\r\n\r\n  handleClaimButton = (_value: boolean) => {\r\n    // console.log(\"handleClaimButton func : \", _value);\r\n    localStorage.setItem(\"claimBtnLoading\", `${_value}`);\r\n    this.APIServices.claimButtonLoading$.next(_value);\r\n  }\r\n\r\n  // this._INTERVAL_VAL = setInterval(this.Type, 100);\r\n  clickMint = async () => {\r\n    // if (!this.authUser) return;\r\n\r\n    // console.log(this.mintNftObj, 'this.mintNftObjakldjfa;lksdjfas')\r\n    // ***\r\n    // verify wallet validations\r\n    // check availbele tokens for minting\r\n    // nami-wallet minting\r\n    // update db records\r\n    // ***\r\n    // this.disablebtn = true;\r\n    // this.circleLoader = true;\r\n\r\n    try {\r\n\r\n      // const tokenAmmount = Number(this.mintNftObj.amount)\r\n      const MintNami = await MintLoader.Cardano();\r\n\r\n      // const userApiResp: any = await new Promise(async (resolve, reject) => {\r\n      //   const regUser = await this.APIServices.userRegister({\r\n      //     walletAddr: await Loader.CardanoWalletAddress()\r\n      //   });\r\n      //   resolve(regUser)\r\n      // });\r\n      // if (userApiResp.status) {\r\n      //   localStorage.setItem(\"token\", userApiResp.token);\r\n      //   this.authUser = userApiResp.data.type;\r\n      // }\r\n\r\n\r\n      const checkWallet = await Loader.verifyWallet(0, this.authUser.type);\r\n      console.log(\"clickMint verifyWallet => \", checkWallet);\r\n\r\n      if (checkWallet !== true) {\r\n        this.toastr.warning(checkWallet)\r\n        return\r\n      }\r\n\r\n\r\n      // if ((!localStorage.getItem(\"isCollectionLaunched\") || localStorage.getItem(\"isCollectionLaunched\") !== \"1\") && this.authUser.type !== \"dev\") {\r\n      //   if (localStorage.getItem(\"isCollectionLaunched\") || localStorage.getItem(\"isCollectionLaunched\") !== \"1\") {\r\n      //   this.toastr.info(\"Comming Soon!\")\r\n      //   return\r\n      // }\r\n\r\n      const nftResp: any = await new Promise(async (resolve, reject) => {\r\n        const resp = await this.APIServices.verifyClaimedCollection({\r\n          action: 'trippy-owl',\r\n          walletAddress: await Loader.CardanoWalletAddress()\r\n        });\r\n        resolve(resp)\r\n      });\r\n      if (!nftResp.status) {\r\n        this.toastr.error(nftResp.msg);\r\n        // this.circleLoader = false;\r\n        this.handleClaimButton(false);\r\n        return\r\n      }\r\n\r\n      const requiredAmount = nftResp.isFreeClaimable ? this.ASSET_TRANSFER_PRICE : this.TRIPPY_OWL_COLLECTION_PRICE + this.ASSET_TRANSFER_PRICE;\r\n      const getBalance = await Loader.getWalletBalance();\r\n      console.log(\"Wallet balance is: \", getBalance);\r\n      if (!getBalance) { this.toastr.warning('Something went wrong to get wallet balance'); return; }\r\n      if (await Loader.convertToADA(getBalance) < requiredAmount) { this.toastr.warning('Insufficient balance'); return; }\r\n\r\n      this.handleClaimButton(true);\r\n\r\n      // const newPolicy = await MintLoader.createPolicy();\r\n      // console.log(\"newPolicy \", JSON.stringify(newPolicy));\r\n      const recipients = [\r\n        // { // mint nft against connected wallet\r\n        //   address: await MintNami.getAddress(),\r\n        //   amount: this.ASSET_TRANSFER_PRICE,\r\n        //   mintedAssets: [{\r\n        //     assetName: this.mintNftObj.assetKey, quantity: \"1\", policyId: newPolicy.id,\r\n        //     policyScript: newPolicy.script\r\n        //   }]\r\n        // },\r\n        { // send nft amount to admin\r\n          address: this.adminNamiWalletAddress,\r\n          // claim free if exist into airdrop addresses\r\n          amount: requiredAmount\r\n        }\r\n      ];\r\n\r\n      // const mintMetadata: any = {\r\n      //   \"721\": {\r\n      //     [newPolicy.id]: {\r\n      //       [this.mintNftObj.assetKey]: {\r\n      //         name: this.mintNftObj.assetKey,\r\n      //         description: 'GRISE NFT Marketplace.', // `GRISE Metamoonverse NFT Marketplace. https://grisemetamoonverse.io/nft`,\r\n      //         image: this.mintNftObj.imageUrl,\r\n      //         authors: [\"GRISE\"] // GRISEMETAMOONVERSE\r\n      //       }\r\n      //     }\r\n      //   }\r\n      // };\r\n      // console.log(\"mintMetadata => \", JSON.stringify(mintMetadata));\r\n      let txHash: any = '';\r\n      try { // T#1\r\n        console.log(\"======================= Start Tx ==========================\")\r\n        txHash = await MintLoader.buildFullTransaction(recipients);\r\n        console.log(\"======================= End Tx ==========================\")\r\n\r\n        if (txHash && txHash.error) {\r\n          this.toastr.error(\"Transaction Failed\");\r\n          // this.disablebtn = false;\r\n          // this.circleLoader = false;\r\n          this.handleClaimButton(false);\r\n          return\r\n        }\r\n      } catch (err: any) {\r\n        console.log(\"err1: \", err);\r\n        this.handleClaimButton(false);\r\n        if (err && err.info) {\r\n          this.toastr.info(err.info);\r\n          // this.circleLoader = false;\r\n          // this.disablebtn = false;\r\n          //console.log(err.info, \"error test\");\r\n          return\r\n\r\n        }\r\n        else if (err.toString().includes(\"MIN_UTXO_ERROR\")) {\r\n          this.toastr.warning(\"Insufficient balance\");\r\n          return;\r\n        }\r\n        // else {\r\n\r\n        //   console.log(\"mintMetadata 1:: \", JSON.stringify(mintMetadata));\r\n        //   try { // T#2\r\n        //     delete mintMetadata[\"721\"][newPolicy.id][this.mintNftObj.assetKey].description;\r\n        //     txHash = await MintLoader.buildFullTransaction(recipients, mintMetadata);\r\n        //   } catch (err2) {\r\n        //     console.log(\"err2: \", err2);\r\n        //     try { // T#3\r\n        //       mintMetadata[\"721\"][newPolicy.id][this.mintNftObj.assetKey].image = this.mintNftObj.imageLink;\r\n        //       txHash = await MintLoader.buildFullTransaction(recipients, mintMetadata);\r\n        //     } catch (err3) {\r\n        //       console.log(\"err3: \", err3);\r\n        //       try { // T#4\r\n        //         delete mintMetadata[\"721\"][newPolicy.id][this.mintNftObj.assetKey].image;\r\n        //         // mintMetadata[\"721\"][newPolicy.script] = mintMetadata[\"721\"][newPolicy.id];\r\n        //         // delete mintMetadata[\"721\"][newPolicy.id];\r\n        //         // console.log(\"mintMetadata 3:: \", JSON.stringify(mintMetadata));\r\n        //         txHash = await MintLoader.buildFullTransaction(recipients, mintMetadata);\r\n        //       } catch (err4) {\r\n        //         console.log(\"err4: \", err4);\r\n        //         txHash = await MintLoader.buildFullTransaction(recipients);\r\n        //       }\r\n        //     }\r\n\r\n        //   }\r\n        // }\r\n      }\r\n      console.log(\"mintTransaction \", txHash);\r\n\r\n      // const txHash = await Nami.send({\r\n      //   address: this.adminNamiWalletAddress, // ADMIN ADDRESS\r\n      //   amount: tokenAmmount\r\n      // })\r\n      if (!txHash) {\r\n        this.toastr.error(\"Unable to proceed this transaction, Try again!\");\r\n        // this.circleLoader = false;\r\n        this.handleClaimButton(false);\r\n      } else {\r\n        // this.toastr.success(`TxHash is: ${txHash}`, \"Trippy Owl Collection claimed successfully\");\r\n        const data = {\r\n          isFreeClaimable: nftResp.isFreeClaimable,\r\n          walletAddress: await Loader.CardanoWalletAddress() // this.authUser.walletAddr\r\n\r\n          // nftId: this.mintNftObj._id,\r\n          // mintToken: `${newPolicy.id}.${this.mintNftObj.assetKey}`,\r\n          // nftQuantity: 1\r\n        }\r\n\r\n        this.APIServices.mintTrippyOwl(data)\r\n          .then((res) => {\r\n\r\n            // this.btnid = \"\"\r\n            if (res.status) {\r\n              var currentdate: any = new Date();\r\n              localStorage.setItem(\"claimStartTime\", currentdate);\r\n\r\n              // this.disablebtn = false;\r\n              // this.mintNftObj.quantity = String(Number(this.mintNftObj.quantity) - 1);\r\n              this.toastr.success(`TxHash is: ${txHash}`, res.msg);\r\n              this.buttondisnft = true;\r\n              localStorage.setItem(\"buttonvaluenft\", `${this.buttondisnft}`)\r\n              // this.circleLoader = false;\r\n              this.handleClaimButton(false);\r\n              setTimeout(() => {\r\n                this.buttondisnft = false;\r\n                // localStorage.removeItem(`${this.buttondis}`)\r\n              }, 300000);\r\n\r\n            } else {\r\n              // this.toastr.success(`TxHash is: ${txHash}`, \"Trippy Owl Collection claimed successfully\");\r\n              this.toastr.error(res.msg);\r\n              // this.circleLoader = false;\r\n              this.handleClaimButton(false);\r\n\r\n\r\n            }\r\n          })\r\n          .catch((err) => {\r\n            // this.toastr.success(`TxHash is: ${txHash}`, \"Trippy Owl Collection claimed successfully\");\r\n            this.toastr.error(\"Something went wrong\");\r\n            console.log(\"Error is: \", err);\r\n            // this.circleLoader = false;\r\n            this.handleClaimButton(false);\r\n\r\n            // this.disablebtn = false;\r\n          });\r\n      }\r\n\r\n    } catch (error: any) {\r\n      console.log(\"Error :: \", error);\r\n      if (error && error.info) {\r\n        this.toastr.info(error.info);\r\n      } else {\r\n        this.toastr.error(\"Something went wrong\");\r\n        // this.circleLoader = false;\r\n\r\n      }\r\n      this.handleClaimButton(false);\r\n    }\r\n  }\r\n  // handleEvent(ev: CountdownEvent) {\r\n  //   //console.log(ev, \"envkfadfja;lsdjf\")\r\n  //   if (ev.action === 'notify') {\r\n  //     // Save current value\r\n  //    localStorage.setItem(this.KEY, `${ev.left / 1000}`);\r\n  //   }\r\n  //   if (ev.action === 'done'){\r\n  //     localStorage.removeItem(\"buttonvalue\")\r\n  //     localStorage.removeItem(\"time\")\r\n  //     //localStorage.clear();\r\n  //     this.buttondis = false;   \r\n  //   }\r\n\r\n  // }\r\n\r\n\r\n\r\n}\r\n","<div class=\"container-fluid bg-color px-0 video-part\">\r\n  <div class=\"content_video ml-auto\">\r\n    <div class=\"row h_custom_100\">\r\n      \r\n      <!-- <div class=\"col-lg-12 \"> -->\r\n      <div class=\"w-100 h_custom_100 position-relative\">\r\n        <video loop muted autoplay class=\"homeBgVideo\" oncanplay=\"this.play()\" onloadedmetadata=\"this.muted = true\">\r\n          <source src=\"../../../assets/homepage-new.mp4\" type=\"video/mp4\" />\r\n        </video>\r\n\r\n        <a\r\n          href=\"../../../assets/website-terms-grise.pdf\"\r\n          target=\"_blank\"\r\n          class=\"disclamir-btn tealcolor btn\"\r\n          >Disclosure</a\r\n        >\r\n      </div>\r\n      <div class=\"video_side_content\">\r\n        <div class=\"left-scroll text-left\">\r\n          <div class=\"home-logo\">\r\n              <!-- <a routerLink=\"\" class=\"\"><img src=\"../assets/Green_logo.png\"></a> -->\r\n              <div class=\"heading_btn\">\r\n            <h1 class=\"nfsize\">THE OWL STORY</h1>\r\n            <a class=\"btn btn-primary pancakeswap\" href=\"assets/Beyond-Owls-White-Paper.pdf\" target=\"_blank\">\r\n              White Paper\r\n            </a>\r\n          </div>\r\n            <p>This tale begins over 500 years ago where a mystical and magical mineral was consumed by 30 owls. After the ritual the owls began to gain an intelligence far exceeding anyone’s expectations, but there was more. The owls acquired supernatural strength, their physical bodies capable of awe-inspiring feats, they flew high above the sky, far beyond the eyes, higher and higher.</p>\r\n            <p>The owls were unstoppable, they were compelled to find a land so different to the one that they used to call home. That’s when they came upon the moon, a gray celestial body suspended in space with craters far as the eye could see. This would be home, a rearing ground, an owl’s dream for breeding. The original owls, the forefathers eventually disappeared, to a mythical land on the dark side of the moon where no one goes. However, their legacy remains, it still thrives 500 years later to this day as the population of the owls on the moon grew. Now 500 years later, there are over 10,000 owls that exist today that live on different lands on the moon.</p>\r\n              <p>The owls ferociously work from their lands releasing innovative and technologically advanced products from the ‘Owl Lab’ which are utilized by other owls on the moon so that they can flourish and succeed on their lands. It’s rumored that their greatest invention yet ‘The Owl Platform’ which is a price prediction platform for crypto currency, is soon to be released that will forever change the way moon trading works.</p>\r\n              <p>This is the beginning, the first of many inventions to come from the owls who are advancing and innovating at an extraordinary rate. Be sure to check out the “The Owl Lab” for new, unique and ingenious releases from the owls.</p>\r\n            <div class=\"text-center\">\r\n            <!-- <a class=\"btn btn-primary pancakeswap\" >Enter App</a> -->\r\n            </div>\r\n          </div>\r\n          <div class=\"info-sec mb-4\">\r\n            <h2 class=\"nfsize2\">The Owl Vision</h2>\r\n            <div class=\"row align-items-center\">\r\n              <div class=\"col-md-12\">\r\n              <p>Beyond Owls is a metaverse on the moon that incorporates NFT’s, P2E gaming, Staking, Lands and an AI price prediction model known as the ‘The Owl Platform’. We constantly try to bring innovative technology to our community that will be released consistently in “The Owl Lab”. Since the start of our journey, we have taken every step with community at the forefront of our mind, because without them the adventure cannot take place.</p>\r\n\r\n              <p>The first invention in the “Owl Lab” is “The Owl Platform” followed by the “Owly Birds” game which will be released quite quickly in the “Owl Lab” with reward distribution for leaderboard scorers which will be followed with further releases.</p>\r\n              <p>We take great pride in developing a supportive and inclusive core community that we will cultivate daily. As an Owl holder you will be part of a great journey and an epic adventure. We will quest into hidden lands of the moon to uncover great mysteries while expanding this ecosystem.</p>\r\n              </div>\r\n              \r\n            </div>\r\n          </div>\r\n          <!-- <div class=\"info-sec mb-4\">\r\n            <h2 class=\"nfsize2\">Owl Map</h2>\r\n            <div class=\"row align-items-center\">\r\n              <div class=\"col-md-12\">\r\n              <p>As a team our belief has always been to under promise and over deliver. We believe structure must be balanced with a heuristic approach. Our idea is to provide value to collectors through surprise mystery and rewards. As a team our goal is to delight our collectors. You can expect more of this as we journey through each adventure!</p>\r\n              </div>\r\n              \r\n            </div>\r\n          </div> -->\r\n          <div class=\"info-sec mb-4\">\r\n            <h2 class=\"nfsize2\">Technology</h2>\r\n            <div class=\"row align-items-center\">\r\n              <div class=\"col-md-12\">\r\n                <a href=\"assets/AI-Story-Page.pdf\"  target=\"_blank\" class=\"btn btn-primary pancakeswap story_btn\" >AI story</a> \r\n              </div>\r\n              \r\n            </div>\r\n          </div>\r\n\r\n          <!-- <div class=\"info-sec mb-4\">\r\n            <h2 class=\"nfsize2\">Conclusion</h2>\r\n            <div class=\"row align-items-center\">\r\n              <div class=\"col-md-12\">\r\n                <p>Result</p>\r\n                <p>The team created the fully ready working solution for Cryptocurrency price prediction within four weeks.</p>\r\n                <p>The main challenges were:</p>\r\n                <p>Research and selection of the optimal model architecture for Cryptocurrency price prediction within this solution.</p>\r\n                <p>Improving prediction quality, optimizing time and resources for model training and real-time prediction. In the results we observed a variance of accuract between 40%- 73%  accuracy of prediction.</p>\r\n                <p> To demonstrate the capabilities of this solution both to specialists in AI and to investment market traders as well as to those interested in investing in this project, our platform is available for member of our token and NFT holders.</p>\r\n              </div>\r\n              \r\n            </div>\r\n          </div> -->\r\n          <div class=\"info-sec custom_img mb-5\">\r\n            <h2 class=\"nfsize2\">The Owl Lab</h2>\r\n            <div class=\"row\">\r\n                        <div class=\"col-md-12 col-lg-4\">\r\n              \r\n              <img src=\"assets/technology.png\" class=\"img-responsive\"/>\r\n              <a href=\"/#/AI\" class=\"btn btn-primary pancakeswap story_btn text-center\">The Owl AI Platform</a>\r\n            </div>\r\n          </div>\r\n            </div>\r\n          <div class=\"info-sec mb-4\">\r\n            \r\n            <h2 class=\"nfsize2\">The Owls are working hard for you.</h2>\r\n            <div class=\"row align-items-center mb-2\">\r\n              <div class=\"col-md-12\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-4 mb-3\">\r\n                    <img src=\"assets/dekala-owl/1.png\" class=\"img-responsive\"/>\r\n                  </div>\r\n                   <div class=\"col-md-4 mb-3\">\r\n                    <img src=\"assets/dekala-owl/2.png\" class=\"img-responsive\"/>\r\n                  </div>\r\n                  <div class=\"col-md-4 mb-3\">\r\n                    <img src=\"assets/dekala-owl/3.png\" class=\"img-responsive\"/>\r\n                  </div>\r\n                 \r\n                </div>\r\n              </div>\r\n            </div>\r\n            <!--<div class=\"info-sec mb-4\">\r\n              \r\n              &lt;!&ndash; <div class=\"row align-items-center\">\r\n                <div class=\"col-md-4\">\r\n                  <div class=\"row align-items-center\">\r\n                    <div class=\"col-md-4 mb-3\">\r\n                      <img src=\"https://www.linkpicture.com/q/bronze.png\" class=\"img-responsive\">\r\n                    </div>\r\n                  </div>\r\n                  <span class=\"legnd-text\">Common</span>\r\n                </div>\r\n                <div class=\"col-md-4\">\r\n                  <div class=\"row align-items-center\">\r\n                    <div class=\"col-md-4 mb-3\">\r\n                      <img src=\"https://www.linkpicture.com/q/gold_4.png\" class=\"img-responsive\">\r\n                    </div>\r\n                  </div>\r\n                  <span class=\"legnd-text\">Legendary</span>\r\n                </div>\r\n                <div class=\"col-md-4\">\r\n                  <div class=\"row align-items-center\">\r\n                    <div class=\"col-md-4 mb-3\"><img src=\"https://www.linkpicture.com/q/silver_3.png\" class=\"img-responsive\">\r\n                    </div>\r\n                  </div>\r\n                  <span class=\"legnd-text\">Rare</span>\r\n                </div>\r\n              </div> &ndash;&gt;\r\n              <div  class=\"row align-items-center\">\r\n                <div  class=\"col-md-4\">\r\n                  <div  class=\"row align-items-center\">\r\n                    <div  class=\"col-md-4 mb-3\">\r\n                      <img  src=\"https://www.linkpicture.com/q/bronze.png\" class=\"img-responsive\">\r\n                    </div>\r\n                    <div  class=\"col-md-4 mb-3 legnd-text\">Common</div>\r\n                  </div>\r\n                </div>\r\n                <div  class=\"col-md-4\">\r\n                  <div  class=\"row align-items-center\">\r\n                    <div  class=\"col-md-4 mb-3\">\r\n                      <img  src=\"https://www.linkpicture.com/q/silver_3.png\" class=\"img-responsive\">\r\n                    </div>\r\n                    <div  class=\"col-md-4 mb-3 legnd-text\">Rare</div>\r\n                  </div>\r\n                </div>\r\n                <div  class=\"col-md-4\">\r\n                  <div  class=\"row align-items-center\">\r\n                    <div  class=\"col-md-4 mb-3\">\r\n                      <img  src=\"https://www.linkpicture.com/q/gold_4.png\" class=\"img-responsive\">\r\n                    </div>\r\n                    <div  class=\"col-md-4 mb-3 legnd-text\">Legendary</div>\r\n                  </div>\r\n                </div>\r\n                \r\n              </div>\r\n            </div>-->\r\n          </div>\r\n          <!-- <div class=\"info-sec mb-4\">\r\n            <h2 class=\"nfsize2\">Mythic: qty 30</h2>\r\n            <div class=\"row align-items-center\">\r\n              <div class=\"col-md-12 \">\r\n                <div class=\"row align-items-center\">\r\n                <div class=\"col-md-6 mb-3\">\r\n                  <img src=\"assets/technology.png\" class=\"img-responsive\"/>\r\n                </div>\r\n                <div class=\"col-md-6 mb-3\">\r\n                  <img src=\"assets/logo_new.gif\" class=\"img-responsive\"/>\r\n                </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div> -->\r\n          <!--<div  class=\"info-sec mb-4\">\r\n            <div  class=\"row align-items-center\">\r\n              <div  class=\"col-md-12\">\r\n                <div  class=\"row align-items-center\">\r\n                  <div  class=\"col-md-2 mb-3\">\r\n                    <img  src=\"https://www.linkpicture.com/q/logo_new_part1.gif\" class=\"img-responsive img-width\">\r\n                  </div>\r\n                  <div  class=\"col-md-6 mb-3 mythic\">Mythic: Quantity 30  - </div>\r\n                  <div  class=\"col-md-6 mb-3 mythic1\">Mythic: Quantity 30</div>\r\n                  <div  class=\"col-md-4 mb-3 logo2\"><img  src=\"https://www.linkpicture.com/q/logo_new_part2.gif\" class=\"img-responsive\">\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>-->\r\n          <!-- <div class=\"info-sec mb-4\">\r\n            <div class=\"d-flex justify-content-start align-items-center flex-column policy-ids\">\r\n              <h3 class=\"mb-0\">Verified by <a href=\"https://cnft.io/\" target=\"_blank\" class=\"text-white\"><u>cnft.io</u> </a></h3>\r\n              <span>\r\n                <img src=\"../../../assets/yellow-batch.svg\" class=\"batchicon\"/>\r\n              </span>\r\n            </div>\r\n            <div class=\"d-flex justify-content-start align-items-center flex-column policy-ids\">\r\n              <h3 class=\"mb-0\">Verified by <a href=\"https://www.jpg.store/\" target=\"_blank\" class=\"text-white\"><u>jpeg.store</u> </a></h3>\r\n              <span>\r\n                <img src=\"../../../assets/blue-batch.svg\" class=\"batchicon\"/>\r\n              </span>\r\n            </div>\r\n          </div> -->\r\n          <!-- <div class=\"info-sec mb-4\">\r\n            <h2 class=\"nfsize2\">Verified policy Ids</h2> \r\n        <h3 class=\"mb-0\">Trippy Owl Policy ID: <span class=\"policyidstext\">ca30fb2d5a3af8498a9ee034685476a7f35c4f0bafd92f342a892f1a</span></h3> \r\n        <div class=\"d-flex justify-content-start align-items-center flex-column policy-ids\">\r\n          <h3 class=\"mb-0\">Legacy NFT Policy IDs: </h3>\r\n          <a class=\"btn btn-primary pancakeswap\" href=\"javascript:void(0)\" data-toggle=\"modal\"\r\n          data-target=\"#policy\">Click Here</a>\r\n        </div>\r\n            \r\n          </div> -->\r\n\r\n          <!-- <div class=\"info-sec mb-4\">\r\n        <div class=\"d-flex justify-content-start  flex-column policy-ids\">\r\n          <h2 class=\"mb-0 mr-3 normal-line\">Roadmap: </h2>\r\n          <p>Join our discord for current development we are working on few things in tandem and will keep announcing our current development on our discord.\r\n          </p>\r\n          \r\n        </div>\r\n          <div class=\"d-flex justify-content-center\">\r\n            <img src=\"../../../assets/grise-moonmap.png\" class=\"img-responsive roadmapimage\" />\r\n          </div>  \r\n          </div> -->\r\n        <!-- <h2 class=\"home_text mb-0\">Welcome to</h2>\r\n        <h1 class=\"mb-0\">Grise Metamoonverse</h1>\r\n        <hr class=\"hr_css\" />\r\n        <h5 style=\"text-align: center\">\r\n         \r\n          Grise meta moonverse is based on land on the moon entirely. All of the\r\n          moon will be divided into 10,000 pieces of 69.09 acre lands. These\r\n          lands can be owned by anyone. On the land you can merge with Our head\r\n          NFts . And create a base, these head NFts we intend on making them\r\n          intelligent.\r\n          <br />\r\n          If you own a GRSE mythic NFT you will automatically be given Land. The\r\n          rest of the pieces of land will be listed on sale in our marketplace.\r\n          Incrementally more piece will be released for your land and more\r\n          information will be announced on how these bases can get setup.\r\n        </h5> -->\r\n\r\n        \r\n        <br />\r\n        <!-- <div style=\"font-size: 15px\" class=\"newtitleres\">\r\n          best place for the Crypto World for money making decisions\r\n        </div> -->\r\n\r\n        \r\n        \r\n\r\n        <!-- <h1 class=\"get_start_heading\">Get Started Now</h1>\r\n        <div class=\"row\">\r\n          <div class=\"col-md-12 mx-0 mt-0 p-0\">\r\n            <div class=\"col-sm-12\">\r\n              <button\r\n                type=\"button\"\r\n                routerLink=\"/roadmap\"\r\n                queryParamsHandling=\"merge\"\r\n                class=\"btn btn-primary tab-button pr_button\"\r\n              >\r\n                Roadmap\r\n              </button>\r\n            </div>\r\n            <div class=\"col-sm-12\">\r\n              <a\r\n                class=\"btn btn-primary pancakeswap tealcolor\"\r\n                href=\"/nft\"\r\n                >MINT</a\r\n              >\r\n            </div>\r\n\r\n            <div class=\"col-sm-12\">\r\n              <a class=\"btn btn-primary pancakeswap\" href=\"https://forms.sendpulse.com/6d3584fad8/\" target=\"_blank\"\r\n                >Subscribe</a\r\n              >\r\n            </div>\r\n          </div>\r\n        </div> -->\r\n        <!-- <div class=\"row\">\r\n          <div class=\"col-md-12\">\r\n            <h2 class=\"nfsize2\">Copy Grise Token Address For Pancake</h2>\r\n\r\n            <div #container>\r\n              <button\r\n                class=\"token_address\"\r\n                ngxClipboard\r\n                [cbContent]=\"'0xb359e4290573a3974616b7c26ea86939689b9ec4'\"\r\n                [container]=\"container\"\r\n              >\r\n                Click here to Copy 0xb359e4290573a3974616b7c26ea86939689b9ec4\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"col-md-12\">\r\n            <a\r\n              class=\"twitter-share-button\"\r\n              target=\"_blank\"\r\n              href=\"https://twitter.com/intent/tweet?text=You%20can%20earn%20tokens%20through%20there%20marketing%20campaign%20by%20clicking%20here%20https%3A//t.me/Grise_Marketing_bot%20%0A%0AJust%20join%20https%3A//grise.finance%20they%20have%20NFTs%20for%20cardano%20with%20utility%20going%20live%20on%20November%205th.%20And%20a%20full%20AI%20Price%20prediction%20platform.&hashtags=nft%2Cnfts%2Cnftart%2Ccnft%2Cnftartist\"\r\n            >\r\n              <img\r\n                class=\"twitter-share-button-img\"\r\n                src=\"../assets/twit.png\"\r\n              />Tweet</a\r\n            >\r\n          </div>\r\n        </div> -->\r\n      </div>\r\n      </div>\r\n    </div>\r\n    <!-- </div> -->\r\n  </div>\r\n</div>\r\n\r\n\r\n<!-- Ids popup -->\r\n<div\r\n  class=\"modal fade\"\r\n  id=\"policy\"\r\n  tabindex=\"-1\"\r\n  role=\"dialog\"\r\n  aria-labelledby=\"exampleModalLongTitle\"\r\n  aria-hidden=\"true\"\r\n  >\r\n  <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n     <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n           <h3 class=\"modal-title mb-0 text-center\">\r\n            Legacy NFT Policy IDs\r\n           </h3>\r\n           <button\r\n              type=\"button\"\r\n              class=\"close\"\r\n              data-dismiss=\"modal\"\r\n              aria-label=\"Close\"\r\n              >\r\n           <span aria-hidden=\"true\">&times;</span>\r\n           </button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n           <div class=\"modal-body-inner d-flex justify-content-start\" style=\"height: 250px; overflow-y: auto;\">\r\n              <ul>\r\n                <li>c30daacecc6161354e8f659a17455a8d83c90cb53296d69cc55f30a0</li>\r\n                <li>6f1ded6a68495834893121928798ae55f8429dcbe7d6f03de0da2907</li>\r\n                <li>3caedd9b1c58641de68020c21c54c67d67f2a2c7fea6d8ca0f3ec2f0</li>\r\n                <li>3126e011103e275531ba70f4f0d828b35c9fc138fe154f63cebeaadb</li>\r\n                <li>ed49e050b9bba670ecbe8c40bb2a1041d00a926cc1cda9de102114db</li>\r\n                <li>886855e9c50087226164a68db9a2ab3d8df2efa60aed80904a8de340</li>\r\n                <li>df2b72480174a5ef046e9cca2e89e87a185f4f9e91e2285aa04da53c</li>\r\n                <li>e88c7c813848a36484af933c43ef4e6b6766fa942ed7882d2d40a555</li>\r\n                <li>86fdd412cd7373fcab109560037aa77b3809d550909995f59833f5b7</li>\r\n                <li>8c8858c6eda39a5460dc2c1a8515872ff4be57cafb41c57dc2920415</li>\r\n                <li>daa59c51d1a752114cb97d45a6e6a2b84a84998bd731a2909e37b200</li>\r\n                <li>3f2d72c4f1e281b9b9072a42c42a523b0c56b39b47eeb3116d0089b9</li>\r\n                <li>09715194260df1a27fff45e3c8cc22f324b0d7e26d161b7ef2fe8cfc</li>\r\n                <li>8c6e540d8f80f0bb4f3a455744868cefb4c97948163e1a7be96fc52e</li>\r\n                <li>50171841fedb63ec94a7425d9333d797c452ee631025e022cc6d911d</li>\r\n                <li>4d69a4aaf03522d4943a7e20924b84cafc16e10b679274b5de7d4809</li>\r\n                <li>82687c0be066d191a5acc020aa7545697a14165ceec2f942e56d8f92</li>\r\n                <li>0d206afa88c466482b0e93d24ef176651ad07e47bafc482f0f540504</li>\r\n                <li>4c2df178fc104590ef6e87676e8015d521d36ed44871f2de5c64e75b</li>\r\n                <li>6bf516bfb81caebf050361d6db8f6d5a397217f0eaa05b5f5b0f7d35</li>\r\n                <li>4a26afe3142ea0044d7a85f6d412ddc7202eb7a9b138c0966b33613c</li>\r\n                <li>02dfc77226fcc7d418bf40d0feb758193c0ae746cc6b5bdb6fc268c4</li>\r\n                <li>be4cbb8e02f8beba904ca2e7b8d83b70bbb24efb849d67e75d219cf8</li>\r\n                <li>cba39d15be8e430a74d8cd712954600953b22a75739ed504afcb6f82</li>\r\n                <li>363f03aa5f4b49f591918381e355844e7fc7e7cdef809bfeacd1c443</li>\r\n                <li>43cadb4ff00223fc2c678889a34bc7da4f48db79028b968a9a6e556b</li>\r\n                <li>5955f2ad97c4c6cb20fe9c8e8d2725387fb775fbb156a0fa0a38833d</li>\r\n                <li>950d3c6b2d7e1660ac8464b7a7c1a5119842dffc046e09fc552960e0</li>\r\n                <li>e0f09c8b367f493ccaf4de31545d59ffaa67315efb40ed2ae477506d</li>\r\n                <li>52e9289a2b7b58d2140ceb03fee910ef43476ebfbdef662a0f1bc502</li>\r\n                <li>3fe96b4d19af4eb3bcb904770a8a788617baa9304e45d69ec8b3dd8c</li>\r\n                <li>9cbb09ddf3379b1e2577a04b7a6dbfaf044b6be2e127c6c7ab1b8253</li>\r\n                <li>6aa77593dfbd5c29bb4683068089ca103a7179f23adbcffd0676d1a0</li>\r\n                <li>b915c3e62e5ea2f550321302b9770a358715eca28930c613ecd41c02</li>\r\n                <li>db0defc7913ef460a9193f0bd211c67031b3c31f77cdaa4f21d18e21</li>\r\n                <li>0848f483d631279948a3c4d2fb1c6179b5c88f823c35516a11ed394c</li>\r\n                <li>4f56561213e5a1952586a682a9cc0427004637ebe19940aa1b0e4d7d</li>\r\n                <li>03b5dd63d9030b580d2ff41b642ee3325a5d31c1460e1f1d1083619f</li>\r\n                <li>1a8f753cd661d04611714b5088a86917f60c26529c2edf66e9c7d389</li>\r\n                <li>d0fc0ca5d7c6093045e08d4234d28aac0420322b6088f792aa2b9843</li>\r\n                <li>b28227824f725f051b2e69fb092f53714bd7c7ddf32f17eb4f5e3894</li>\r\n                <li>13cbdd985963b09a0427d0280246a2ac75610f05275501e6ba1b59b6</li>\r\n                <li>2fd58a9f27b4e3510285838f0b691b9807818a5376580a290ca559a1</li>\r\n                <li>6b362592171088019440a2daa493333c2eb2248b046df6b107054b2d</li>\r\n                <li>56cd617296aff69dcff340db80614476f9d4f35427a3fe6c9a5dc001</li>\r\n                <li>2cca00495e7f0fd4165535775acc94e522b083bc89195d688a175c3f</li>\r\n                <li>b12c972a700364504b3036fa80fbe0e425f7959df51d527ddaafd6d9</li>\r\n                <li>35fa14c0167496ab3ab43c6e70a18b47c918d8393d9c91124706e268</li>\r\n                <li>67387c7abe1711e294d09892ad3e0d49f7ad713ab5c3197a6eadf595</li>\r\n                <li>95d65dc5525c08ed9ecc748d890946b63871bf4278e6a1b60aa03757</li>\r\n                <li>e7ee6e69e7c5d1da6bd1013ac63b7501ed4290e26b7ff5d6361a5c50</li>\r\n                <li>9d09dbf51f7ef5d3523ce7ea278a99393f5dbf3bba32cbfa2e679efb</li>\r\n                <li>7bfbbdc011dd0ab58a5bfe77a1eb96d2ca5fed1f3536fda22ad1c3a5</li>\r\n                <li>044bb2d7d83f1bc7131e8bef947132d75f7c78f6202733c8c26e339a</li>\r\n                <li>ca4fd5c13af26a7a64f7191796eb46fdd5a5b2cb5f667d346642fbe5</li>\r\n                <li>2169e14c0db8f7d0d5989381d96ca73329d64e7304add2aea70039f2</li>\r\n                <li>d11813ed546ee8d196f1d9779c9cdce2ff7c344aab1c86d50725c0b0</li>\r\n                <li>4e22d342f6bce54f9e4f564875f354e9c355f310f234ffb6a679170a</li>\r\n                <li>2247bba59005946356710a64c8e054e2924667c8de2943ba716ebcd2</li>\r\n                <li>c173d00382758cce7b3d1a6dbbc63735d50223a0bb021a650b4121a7 (443 NFT's legacy collection)</li>\r\n              </ul>\r\n            </div>\r\n           \r\n        </div>\r\n        <div class=\"modal-footer justify-content-center\">\r\n           <button\r\n           type=\"button\"\r\n           class=\"tab-button\"\r\n           data-dismiss=\"modal\"\r\n              aria-label=\"Close\"\r\n           >\r\n           Close\r\n           </button>\r\n        </div>\r\n     </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- conformation modal -->\r\n<div\r\n  class=\"modal fade mintmodal\"\r\n  id=\"claimconfirm\"\r\n  tabindex=\"-1\"\r\n  role=\"dialog\"\r\n  aria-labelledby=\"exampleModaltwo\"\r\n  aria-hidden=\"true\"\r\n  \r\n  >\r\n  <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n     <div class=\"modal-content\">\r\n        <div class=\"modal-header border-0 mb-0\">\r\n           <h3 class=\"modal-title mb-0\">\r\n            Are you sure you want to  Claim ?\r\n           </h3>\r\n           \r\n        </div>\r\n        <div class=\"modal-footer\">\r\n           \r\n          \r\n           <button\r\n              type=\"button\"\r\n              class=\"tab-button\"\r\n              data-dismiss=\"modal\"\r\n              aria-label=\"Close\"\r\n              >\r\n           Cancel\r\n           </button>\r\n           <button\r\n           type=\"button\"\r\n           class=\"tab-button\"\r\n           (click)=\"clickMint()\"\r\n           data-dismiss=\"modal\"\r\n           aria-label=\"Close\"\r\n           >\r\n        Confirm\r\n        </button>\r\n        </div>\r\n     </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from \"@angular/router\";\r\nimport { NFTsAPIServices } from \"../../services/nft.service\";\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { environment as env } from '../../../environments/environment';\r\n\r\nconst INCREAMENT = 12;\r\n\r\n@Component({\r\n  selector: 'app-trippy-owl-detail',\r\n  templateUrl: './trippy-owl-detail.component.html',\r\n  styleUrls: ['./trippy-owl-detail.component.scss']\r\n\r\n})\r\nexport class TrippyOwlDetailComponent implements OnInit {\r\n  SERVER_URL = env.SERVER_URL;\r\n\r\n  p: number = 1;\r\n  lists: any = [];\r\n  allRecords: any = [];\r\n  empty = false;\r\n\r\n  spinnerloader = false;\r\n  hideassets = false;\r\n  loadMoreBtn = false;\r\n\r\n  //lists: any = [];\r\n  constructor(\r\n    private readonly APIServices: NFTsAPIServices,\r\n    private readonly router: Router,\r\n    private toastr: ToastrService,\r\n  ) { }\r\n\r\n  async ngOnInit() {\r\n    /*const resp: any = await new Promise(async (resolve, reject) => {\r\n      const data = await this.APIServices.trippyOwlList();\r\n      resolve(data)\r\n    });\r\n    if (resp.data && resp.data.length) {\r\n      this.allRecords = resp.data;\r\n      this.lists = resp.data.slice(0, INCREAMENT)\r\n      this.empty = false;\r\n      this.spinnerloader = false;\r\n    }\r\n    setTimeout(() => {\r\n      this.hideassets = true;\r\n    }, 1000);\r\n*/\r\n  }\r\n\r\n  loadMore() {\r\n    this.loadMoreBtn = true;\r\n\r\n    //console.log(\"======== HI ==========\")\r\n    const currentList = this.lists.length;\r\n\r\n    //console.log(\"check data: \",currentList, this.lists, this.allRecords.slice(currentList, currentList + 3), this.allRecords)\r\n    this.lists.push(...this.allRecords.slice(currentList, currentList + INCREAMENT))\r\n    //console.log(\"Lists: \", this.lists);\r\n\r\n    setTimeout(() => {\r\n      this.loadMoreBtn = false;\r\n    }, 5000);\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"container-fluid bg-color\">\r\n    <div class=\"d-flex flex-column justify-content-center align-items-center\" style=\"height: 70vh\">\r\n        <h1>Collection will be visible on the launch day</h1>\r\n        <a class=\"btn btn-primary wallet\" href=\"/#/nft-collection\" style=\"min-width: 6.5em; height: 2.5em\">\r\n            Go Back\r\n        </a>\r\n    </div>\r\n\r\n    <!--<div class=\"row content\">\r\n\r\n        \r\n        <div class=\"col-lg-12\" id=\"Overview\">\r\n            <div class=\"scrollable-title-container\">\r\n                &lt;!&ndash; <h3 style=\"float: left;\">12/500</h3> &ndash;&gt;\r\n                &lt;!&ndash; <label class=\"scrollable-title mb-5\">Trippy Owl</label> &ndash;&gt;\r\n              </div>\r\n\r\n             <div class=\"row mt-5 mb-5\">\r\n                <div class=\"empty-list mx-auto\" *ngIf=\"hideassets && lists.length === 0\">\r\n                    <img src=\"/assets/empty-bids.svg\"/>\r\n                    <p>No assets yet</p>\r\n                   </div>\r\n\r\n                <div class=\"col-xl-4 col-lg-4 col-md-4 col-sm-6 col-xs-12\" *ngFor=\"let list of lists\" > \r\n                    &lt;!&ndash; | paginate: { itemsPerPage: 12, currentPage: p } &ndash;&gt;\r\n                    <div class=\"tab flex-column align-items-center\">\r\n                        &lt;!&ndash; <h3 class=\"text-uppercase\"> {{list.src.split('.')[0] }} </h3> &ndash;&gt;\r\n\r\n                        \r\n                        \r\n                        <div class=\"trippy-box\">\r\n                            &lt;!&ndash; <img\r\n                            class=\"img-responsive nft-img\"\r\n                            alt=\"NFTs\"\r\n                            src= {{list.imageLink}} \r\n                            *ngIf=\"!spinnerloader\"\r\n                            loading=\"lazy\"\r\n                        />\r\n                        <i class=\"fas fa-spinner fa-spin\" *ngIf=\"spinnerloader\"></i> &ndash;&gt;\r\n\r\n\r\n                        <img *ngIf=\"!spinnerloader\" src=\"../../../assets/wait-loader.gif\" class=\"loader-image\">\r\n                        &lt;!&ndash; <img [hidden]=\"!spinnerloader\" src=\"{{SERVER_URL}}/trippy-owl/{{list.src}}\" (load)=\"spinnerloader = true\" class=\"img-responsive nft-img\"> &ndash;&gt;\r\n                        <img [hidden]=\"!spinnerloader\" src=\"../../../assets/trippy-owl/{{list.src}}\" (load)=\"spinnerloader = true\" class=\"img-responsive nft-img\">\r\n                        </div>\r\n\r\n                        \r\n\r\n                        \r\n                \r\n                    </div>\r\n                </div>\r\n                <div class=\"d-flex justify-content-center w-100\" *ngIf=\"lists.length !== allRecords.length\">\r\n                    <button (click)=\"loadMore()\" class=\"btn btn-secondary tab-button border-0 pancakeswap\" [ngClass]=\"{'notallowed': loadMoreBtn}\" >Load More <div class=\"spinner-border spinner-border-sm\" role=\"status\" *ngIf=\"loadMoreBtn\"></div></button>\r\n                    \r\n                </div>\r\n                \r\n                \r\n                \r\n\r\n                &lt;!&ndash; <div class=\"mx-auto\">\r\n                    <pagination-controls (pageChange)=\"p = $event\" ></pagination-controls>\r\n                </div> &ndash;&gt;\r\n                \r\n\r\n                \r\n             </div>\r\n\r\n             \r\n            \r\n            \r\n\r\n\r\n        </div>\r\n          \r\n    </div>-->\r\n</div>\r\n","export enum NFTContentType {\r\n    Image = 1,\r\n    Video = 2,\r\n    Gif = 3\r\n}\r\n\r\nexport class NFTContentData {\r\n    contentType: NFTContentType;\r\n    contentPath: string;\r\n    availableForSale: boolean;\r\n    nftObj: any;\r\n    src: string;\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\r\nimport * as Highcharts from \"highcharts/highstock\";\r\nimport Indicators from \"highcharts/indicators/indicators-all.js\";\r\nimport DragPanes from \"highcharts/modules/drag-panes.js\";\r\nimport AnnotationsAdvanced from \"highcharts/modules/annotations-advanced.js\";\r\nimport PriceIndicator from \"highcharts/modules/price-indicator.js\";\r\nimport StockTools from \"highcharts/modules/stock-tools.js\";\r\n\r\nIndicators(Highcharts);\r\nDragPanes(Highcharts);\r\nAnnotationsAdvanced(Highcharts);\r\nPriceIndicator(Highcharts);\r\nStockTools(Highcharts);\r\n\r\n@Component({\r\n  selector: 'app-coin-technical-analysis',\r\n  templateUrl: './coin-technical-analysis.component.html',\r\n  styleUrls: ['./coin-technical-analysis.component.scss']\r\n})\r\nexport class CoinTechnicalAnalysisComponent implements OnInit {\r\n\r\n  highcharts = Highcharts;\r\n\r\n  CashIn:any = 0\r\n  CashOut:any = 0\r\n  coins_list_api:any = []\r\n  currentProduct:string = 'bitcoin'\r\n  \r\n  CashflowGraph:any = {\r\n    chart: {\r\n      backgroundColor: \"#3b4148\",\r\n    },\r\n    rangeSelector: {\r\n      buttonTheme: { // styles for the buttons\r\n        fill: 'none',\r\n        stroke: 'none',\r\n        'stroke-width': 0,\r\n        r: 8,\r\n        style: {\r\n            color: 'white',\r\n            fontWeight: 'bold'\r\n        },\r\n        states: {\r\n            hover: {\r\n                fill: 'white',\r\n                style: {\r\n                    color: 'black'\r\n                }\r\n            },\r\n            select: {\r\n                fill: 'white',\r\n                style: {\r\n                    color: 'black'\r\n                }\r\n            }\r\n        }\r\n    },\r\n    inputStyle: {\r\n        color: 'white',\r\n        fontWeight: 'bold',\r\n        states:{\r\n            select:{\r\n                color: 'black',\r\n            }\r\n        }\r\n    },\r\n    labelStyle: {\r\n        color: 'white',\r\n        fontWeight: 'bold',\r\n    }\r\n    },\r\n    title: {\r\n      text: `Cashflow`,\r\n      style: {\r\n        color: '#fff'\r\n      }\r\n    },\r\n    yAxis: {\r\n        title: {\r\n            text: ''\r\n        },\r\n        gridLineColor: 'gray',\r\n        labels: {\r\n          style: {\r\n              color: 'white'\r\n          }\r\n      }\r\n    },\r\n    \r\n    series: [\r\n      {\r\n        type: \"line\",\r\n        name: `price`,\r\n        data: [],\r\n        color: '#DDDF00',\r\n      },\r\n    ]\r\n  }\r\n\r\n  TechnicalGraph:any = {\r\n    chart: {\r\n      backgroundColor: \"#3b4148\",\r\n    },\r\n    title: {\r\n      text: `Price`,\r\n      style: {\r\n        color: '#fff'\r\n      }\r\n    },\r\n    yAxis: {\r\n        title: {\r\n            text: ''\r\n        },\r\n        gridLineColor: 'gray',\r\n        labels: {\r\n          style: {\r\n              color: 'white'\r\n          }\r\n      }\r\n    },\r\n    series: [\r\n      {\r\n        type: \"line\",\r\n        name: `price`,\r\n        data: [],\r\n        color: 'green',\r\n        zoneAxis: 'x',\r\n        zones: []\r\n      },\r\n    ]\r\n  }\r\n\r\n  getCoinCashflow(coinName:any){\r\n    let headers = new HttpHeaders();\r\n    let params = new HttpParams().set(\"coin\", coinName)\r\n    this.http.get(`https://api.ethama.finance/get-cashflow?coin=${coinName}&days=30`, {\r\n      headers: headers,\r\n      params: params,\r\n      responseType: 'text'\r\n    }).toPromise().then(Response => {\r\n      let details = JSON.parse(Response);\r\n      if(details.code == 200){\r\n        var Data:any = [];\r\n        details.data.data.data_plot.map((data:any) => {\r\n            Data.push([data.date,data.cashflow]);\r\n            return null;\r\n        })\r\n        this.CashIn = details.data.data.cashin_percentage\r\n        this.CashOut = details.data.data.cashout_percentage\r\n        this.CashflowGraph = {\r\n          chart: {\r\n            backgroundColor: \"#3b4148\",\r\n          },\r\n          rangeSelector: {\r\n            buttonTheme: { // styles for the buttons\r\n              fill: 'none',\r\n              stroke: 'none',\r\n              'stroke-width': 0,\r\n              r: 8,\r\n              style: {\r\n                  color: 'white',\r\n                  fontWeight: 'bold'\r\n              },\r\n              states: {\r\n                  hover: {\r\n                      fill: 'white',\r\n                      style: {\r\n                          color: 'black'\r\n                      }\r\n                  },\r\n                  select: {\r\n                      fill: 'white',\r\n                      style: {\r\n                          color: 'black'\r\n                      }\r\n                  }\r\n              }\r\n          },\r\n          inputStyle: {\r\n              color: 'white',\r\n              fontWeight: 'bold',\r\n              states:{\r\n                  select:{\r\n                      color: 'black',\r\n                  }\r\n              }\r\n          },\r\n          labelStyle: {\r\n              color: 'white',\r\n              fontWeight: 'bold',\r\n          }\r\n          },\r\n          title: {\r\n            text: `${coinName} Cashflow`,\r\n            style: {\r\n              color: '#fff'\r\n            }\r\n          },\r\n          yAxis: {\r\n              title: {\r\n                  text: ''\r\n              },\r\n              gridLineColor: 'gray',\r\n              labels: {\r\n                style: {\r\n                    color: 'white'\r\n                }\r\n            }\r\n          },\r\n          \r\n          series: [\r\n            {\r\n              type: \"line\",\r\n              name: `${coinName} price`,\r\n              data: Data,\r\n              color: '#DDDF00',\r\n            },\r\n          ]\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  getCoinTechnicalGraph(coinName:any){\r\n    let headers = new HttpHeaders();\r\n    let params = new HttpParams().set(\"coin\", coinName)\r\n    this.http.get(`https://api.ethama.finance/get-tech-analysis?coin=${coinName}`, {\r\n      headers: headers,\r\n      params: params,\r\n      responseType: 'text'\r\n    }).toPromise().then(Response => {\r\n      let details = JSON.parse(Response);\r\n      if(details.code == 200){\r\n        var Data:any = [];\r\n        var zonesColor:any = [];\r\n        details.data.data.timeseries.map((data:any) => {\r\n          Data.push({x: data.index,y: data.price});\r\n          return null;\r\n        })\r\n        \r\n        details.data.data.down_span_data.map((points:any) => {\r\n          zonesColor.push({value: points[0]}, {value: points[1], color: 'red'})\r\n          return null;\r\n        })\r\n\r\n        this.TechnicalGraph = {\r\n          chart: {\r\n            backgroundColor: \"#3b4148\",\r\n          },\r\n          title: {\r\n            text: `${coinName} Price`,\r\n            style: {\r\n              color: '#fff'\r\n            }\r\n          },\r\n          legend: {\r\n            itemStyle: {\r\n                color: '#fff',\r\n            },\r\n            itemHoverStyle: {\r\n              color: '#fff',\r\n            }\r\n          },\r\n          yAxis: {\r\n              title: {\r\n                  text: ''\r\n              },\r\n              gridLineColor: 'gray',\r\n              labels: {\r\n                style: {\r\n                    color: 'white'\r\n                }\r\n            }\r\n          },\r\n          series: [\r\n            {\r\n              type: \"line\",\r\n              name: `${coinName} price`,\r\n              data: Data,\r\n              color: 'green',\r\n              zoneAxis: 'x',\r\n              zones: zonesColor\r\n            },\r\n          ]\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  getCoinData(name:string){\r\n    this.getCoinCashflow(name);\r\n    this.getCoinTechnicalGraph(name);\r\n  }\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getCoinData('bitcoin')\r\n    this.http.get('https://api.ethama.finance/get-coin-name').subscribe(Response => {\r\n      // console.log(Response);\r\n      let resSTR = JSON.stringify(Response);\r\n      let resJSON = JSON.parse(resSTR);\r\n      this.coins_list_api = resJSON.data.data;\r\n\r\n      // console.log(this.coins_list_api);\r\n    })\r\n  }\r\n\r\n}\r\n","<div class=\"coin-technical-analysis-div\">\r\n    <h2 for=\"ice-cream-choice\" class=\"mr-3\">Choose Coin:</h2>\r\n    <input class=\"inputcoinsearch mb-3 \" type=\"text\" list=\"productList\" name=\"product\" [(ngModel)]='currentProduct'\r\n      (change)=\"getCoinData(currentProduct)\" />\r\n\r\n    <datalist id=\"productList\">\r\n      <option *ngFor=\"let data_coin_name of coins_list_api;\" [value]=\"data_coin_name.id\">\r\n        {{data_coin_name.id}} ({{data_coin_name.symbol}})\r\n      </option>\r\n    </datalist>\r\n    <div class=\"row \">\r\n        <!-- introduction part -->\r\n        \r\n        <div class=\"col-lg-12 card-outer-div\" style=\"margin-top: 59px;\">\r\n        \r\n            <h1 class=\"headingAi\">Introduction AI Platform</h1>\r\n            <div class=\"main-div card-div\" style=\"text-align: justify;\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-lg-12\">\r\n                    <h1> How to use Grise Token AI-Indices</h1>\r\n                    </div>\r\n                    <div class=\"col-lg-12 my-3\">\r\n                    <h4 class=\"text-danger\">NOTE: Indices Rebalancing Times Are an Approximation.</h4>\r\n                    </div>\r\n                    <div class=\"col-lg-12 my-3\">\r\n                        <div class=\"info-text\">\r\n                        Sometimes we may update the indices when we make important updates or changes to technical details and\r\n                        calculations for an index. For example, we recently added a requirement for all indices to only hold\r\n                        cryptocurrencies with a daily trading volume greater than $500k. Each of these technical updates requires us\r\n                        to re-do the index. This will apply with future technical updates to indices.\r\n                            Furthermore, we have recently add features related to trading signal. This features is based on Deep Learning by which our stacker can take smart decision to avoid loss in trading. In AI-Price prediction algorithms we can see the future expected price up-to two months and take fast decision to in-out the market.\r\n                        As a result, the days and times are an approximation and indices may take 1-4 hours to fully update or on\r\n                        occasion be rebalanced more than their time-horizon to make important technical updates.\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-lg-12 my-3\">\r\n                    <h4 class=\"text-danger\">DISCLAIMER\r\n                    Indices of crypto investments, like all types of investment-related information, are subject to risk; they can\r\n                    go down as well as up; and relying on such information can lead to losses as well as gains. Information about\r\n                    past performance is not necessarily indicative of future performance.\r\n                    </h4>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"card-outer-div\">\r\n        <h1 class=\"headingAi\">Coin Cashflow</h1>\r\n        <div class=\"card-div\">\r\n            <div class=\"d-flex justify-content-between cashflow-percentage-div\">\r\n                <span>Cashflow In: {{CashIn.toFixed(2)}}%</span>\r\n                <span>Cashflow Out: {{CashOut.toFixed(2)}}%</span>\r\n            </div>\r\n            <highcharts-chart class=\"custom-chart-styles\"\r\n                [Highcharts]=\"highcharts\"\r\n                [constructorType]=\"'stockChart'\"\r\n                [options]=\"CashflowGraph\">\r\n            </highcharts-chart>\r\n        </div>\r\n    </div>\r\n    <div class=\"card-outer-div\">\r\n        <h1 class=\"headingAi\">Coin Technical Analysis</h1>\r\n        <div class=\"card-div\">\r\n            <highcharts-chart class=\"custom-chart-styles\"\r\n                [Highcharts]=\"highcharts\"\r\n                [options]=\"TechnicalGraph\">\r\n            </highcharts-chart>\r\n        </div>\r\n    </div>\r\n</div>","\r\n<div class=\"container\">\r\n    <div class=\"row full-height\">\r\n        <div class=\"col-md-6 col-lg-6\">\r\n            <div class=\"tab flex-column align-items-center\">\r\n                <form>\r\n                    <div class=\"mb-5\">\r\n                        <label for=\"Username\" class=\"form-label\">Amount</label>\r\n                        <input type=\"text\" class=\"form-control\" id=\"Username\" aria-describedby=\"Username\" [(ngModel)]=\"inputValue\" id=\"inputValue\" name=\"inputValue\">\r\n                        \r\n                    </div>\r\n                    <!-- <div class=\"mb-5\">\r\n                        <label for=\"exampleInputEmail1\" class=\"form-label\">Password</label>\r\n                        <input type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\">\r\n                    </div> -->\r\n                    <button type=\"submit\" class=\"btn btn-primary tab-button\" (click)=\"confirmpopup()\"> Withdraw Grise Wallet Amount</button>\r\n                </form>\r\n                \r\n            </div>\r\n        </div>\r\n        <div class=\"col-md-6 col-lg-6\">\r\n            <button class=\"btn btn-primary tab-button\" (click)=\"getBalance()\">Get Balance</button>\r\n            <p class=\"text-white\">Available Balance: <span *ngIf=\"hidezero\">0</span>{{availablebalance}} ADA</p>\r\n            <p class=\"text-white\">Total Balance: <span *ngIf=\"hidezero\">0</span>{{totalbalance}} ADA</p>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<!-- conformation modal -->\r\n<div\r\n  class=\"modal fade mintmodal\"\r\n  id=\"exampleModaltwo\"\r\n  tabindex=\"-1\"\r\n  role=\"dialog\"\r\n  aria-labelledby=\"exampleModaltwo\"\r\n  aria-hidden=\"true\"\r\n  \r\n  >\r\n  <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n     <div class=\"modal-content\">\r\n        <div class=\"modal-header border-0\">\r\n           <h3 class=\"modal-title mb-0\">\r\n            Are you sure you want to withdraw available Amount?\r\n           </h3>\r\n           \r\n        </div>\r\n        <div class=\"modal-footer border-0\">\r\n           <button\r\n              type=\"button\"\r\n              class=\"tab-button\"\r\n              data-dismiss=\"modal\"\r\n              aria-label=\"Close\"\r\n              >\r\n           Cancel\r\n           </button>\r\n           <button\r\n              type=\"button\"\r\n              class=\"tab-button\"\r\n              data-dismiss=\"modal\"\r\n              aria-label=\"Close\"\r\n              (click)=\"withdrawGrise()\"\r\n              >\r\n           Confirm\r\n           </button>\r\n        </div>\r\n     </div>\r\n  </div>\r\n</div>","import { DOCUMENT } from '@angular/common';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { NFTsAPIServices } from \"../../services/nft.service\";\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport Loader from '../../services/nami-loader.service';\r\n\r\ndeclare var $: any;\r\n@Component({\r\n  selector: 'app-adminpanel',\r\n  templateUrl: './adminpanel.component.html',\r\n  styleUrls: ['./adminpanel.component.scss']\r\n})\r\nexport class AdminpanelComponent implements OnInit {\r\n  renderer: any;\r\n  constructor(@Inject(DOCUMENT) private document: any, private readonly APIServices: NFTsAPIServices, private toastr: ToastrService,) {\r\n    this.document.body.classList.add('leftmenu');\r\n   }\r\n   availablebalance:\"\";\r\n   totalbalance:\"\";\r\n   hidezero:any = true;\r\n   inputValue: number;\r\n  ngOnInit(): void {\r\n  }\r\n  ngOnDestroy() {\r\n    this.document.body.classList.remove('leftmenu');\r\n  }\r\n  getBalance = async () => {\r\n    try {\r\n      this.APIServices.getGriseBalance()\r\n      .then((res) => {\r\n          //console.log(res.balance);\r\n          if(res.status === true){\r\n            this.hidezero = false;\r\n            this.availablebalance = res.balance \r\n            this.totalbalance = res.total\r\n          } else {\r\n\r\n            this.hidezero = true;\r\n            this.availablebalance = \"\"\r\n            this.totalbalance = \"\"\r\n          }\r\n        \r\n      })\r\n    } catch (error) {\r\n      \r\n    }\r\n  }\r\n\r\n  withdrawGrise = async () => {\r\n    this.inputValue \r\n    try {\r\n      this.APIServices.sendGriseBalance(\r\n        this.inputValue, \r\n        await Loader.CardanoWalletAddress()\r\n      )\r\n      .then((res) => {\r\n        //console.log(res)\r\n       if(res.status === true){\r\n        this.toastr.success(\"txHash: \" + res.resp);\r\n       } else {\r\n        this.toastr.error(res.msg);\r\n       }\r\n      })\r\n    } catch (error) {\r\n      this.toastr.error();\r\n    }\r\n  }\r\n\r\n  \r\n  async confirmpopup() {\r\n    $('#exampleModaltwo').modal('show');\r\n  }\r\n}\r\n\r\n\r\n","// loader-interceptor.service.ts\r\nimport { Injectable } from '@angular/core';\r\nimport {\r\n  HttpResponse,\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { LoaderService } from '../services/loader.service';\r\n\r\n@Injectable()\r\nexport class LoaderInterceptor implements HttpInterceptor {\r\n  private requests: HttpRequest<any>[] = [];\r\n\r\n  constructor(private loaderService: LoaderService) { }\r\n\r\n  removeRequest(req: HttpRequest<any>) {\r\n    const i = this.requests.indexOf(req);\r\n    if (i >= 0) {\r\n      this.requests.splice(i, 1);\r\n    }\r\n    this.loaderService.isLoading.next(this.requests.length > 0);\r\n  }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n    this.requests.push(req);\r\n\r\n    console.log(\"No of requests--->\" + this.requests.length);\r\n\r\n    this.loaderService.isLoading.next(true);\r\n    return Observable.create((observer:any) => {\r\n      const subscription = next.handle(req)\r\n        .subscribe(\r\n          event => {\r\n            if (event instanceof HttpResponse) {\r\n              this.removeRequest(req);\r\n              observer.next(event);\r\n            }\r\n          },\r\n          err => {\r\n            // alert('error' + err);\r\n            this.removeRequest(req);\r\n            observer.error(err);\r\n          },\r\n          () => {\r\n            this.removeRequest(req);\r\n            observer.complete();\r\n          });\r\n      // remove request from queue when cancelled\r\n      return () => {\r\n        this.removeRequest(req);\r\n        subscription.unsubscribe();\r\n      };\r\n    });\r\n  }\r\n}\r\n","import { ContractService } from './../../services/contract.service';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { SlotData, SlotType } from 'src/app/models/slot-data';\r\nimport { LiquidityContractService } from 'src/app/services/liquidity-contract.service';\r\nimport { SharedService } from 'src/app/services/shared.service';\r\nimport { LocalDataUpdateService } from './../../services/local-data-update.service';\r\nimport { SpinnerService } from 'src/app/helper/spinner/spinner.service';\r\n\r\n@Component({\r\n  selector: 'app-reservation',\r\n  templateUrl: './reservation.component.html',\r\n  styleUrls: ['./reservation.component.scss']\r\n})\r\nexport class ReservationComponent implements OnInit, OnDestroy {\r\n\r\n  filterType = 0;\r\n  filterSlots: SlotData[];\r\n  minValueRequired = 0.5;\r\n  nftdetail : any;\r\n  nftImg : any;\r\n  nftDetailEnable = false;\r\n  nftButton(val : any){\r\n    this.nftdetail = this.sharedService.allSlots[val-1].nftDetail;\r\n    this.nftImg = this.sharedService.allSlots[val-1].nftImg;\r\n  }\r\n  nftCloseButton(){\r\n    this.nftDetailEnable = false;\r\n  }\r\n  constructor(private sharedService: SharedService,\r\n              private liquidityContractService: LiquidityContractService,\r\n              private localDataUpdateService: LocalDataUpdateService,\r\n              private contractService: ContractService,\r\n              private spinnerService: SpinnerService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.spinnerService.show();\r\n    this.localDataUpdateService.isSlotsReservationDataUpdated.subscribe((isUpdated) => {\r\n      if (isUpdated) {\r\n        this.sharedService.updateSlotsTimer();\r\n        this.sharedService.updateSlotsReservation();\r\n        this.filterSlots = [];\r\n        if (this.filterType == 1) {\r\n          this.fixedSlots();\r\n        } else if (this.filterType == 2) {\r\n          this.randomSlots();\r\n        } else {\r\n          this.allSlots();\r\n        }\r\n        this.spinnerService.hide();\r\n      }\r\n      if (!this.contractService.isContractLoadOnNetwork)\r\n        this.spinnerService.hide();\r\n    });\r\n  }\r\n\r\n  allSlots() {\r\n    this.filterSlots = this.sharedService.allSlots;\r\n    this.filterType = 0;\r\n  }\r\n\r\n  fixedSlots() {\r\n    this.filterSlots = this.sharedService.allSlots.filter(val => val.type == SlotType.Fixed);\r\n    this.filterType = 1;\r\n  }\r\n\r\n  randomSlots() {\r\n    this.filterSlots = this.sharedService.allSlots.filter(val => val.type == SlotType.Random);\r\n    this.filterType = 2;\r\n  }\r\n\r\n  checkValueWithBalance(slot: SlotData, form: NgForm): boolean {\r\n    if (slot.isExpired) {\r\n      return true;\r\n    }\r\n    if (slot.slotLeft == 0) {\r\n      return true;\r\n    }\r\n    if (slot.validationText) { slot.validationText = ''; }\r\n    if (!form.valid) {\r\n      return true;\r\n    }\r\n    if (form.controls.slotAmount == undefined) {\r\n      return true;\r\n    }\r\n    const amount: number = form.controls.slotAmount.value;\r\n    if (amount == 0) {\r\n      return true;\r\n    }\r\n    if (amount < this.minValueRequired && slot.myContribution == 0) {\r\n      return true;\r\n    }\r\n    if (amount > this.contractService.totalBalance) {\r\n      slot.validationText = 'Insufficient Balance';\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  reserveClick(slot: SlotData, form: NgForm) {\r\n    if (this.checkValueWithBalance(slot, form)) {\r\n      return;\r\n    }\r\n\r\n    const amount: number = form.controls.slotAmount.value;\r\n    if (amount > 0) {\r\n      const slotNos: number[] = [slot.id];\r\n      this.liquidityContractService.addReservation(slotNos, amount);\r\n      form.reset();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.sharedService.stopSlotsTimer();\r\n  }\r\n}\r\n","<!-- <head>\r\n    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css\"\r\n        integrity=\"sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm\" crossorigin=\"anonymous\">\r\n    <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js\"\r\n        integrity=\"sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl\"\r\n        crossorigin=\"anonymous\"></script>\r\n</head> -->\r\n<div class=\"container-fluid bg-color\">\r\n\r\n    <div class=\"row content\">\r\n\r\n        <div class=\"col-lg-3 reservation-first\">\r\n            <div style=\"display: grid; justify-content: center;\">\r\n                <button type=\"button\" class=\"btn btn-primary tab-button all_reser\" (click)=\"allSlots()\">All Reservation\r\n                    Slots</button>\r\n                <!-- <button type=\"button\" class=\"btn btn-primary tab-button\" (click)=\"fixedSlots()\">Fixed Supply\r\n                    Slots</button>\r\n                <button type=\"button\" class=\"btn btn-primary tab-button\" (click)=\"randomSlots()\">Extreme Supply\r\n                    Slots</button> -->\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    <div class=\"col-lg-12 reservation-second\">\r\n        <!-- <h1 class=\"reservation-title\"></h1> -->\r\n        <div class=\" personal\">\r\n            <!-- <img style=\"width: 250px\" src=\"../../../assets/logo.png\"> -->\r\n            <!-- <i class=\"fas fa-coins personal_icon\"></i> -->\r\n            <label class=\"personal_title\">Grise Token Reservation</label>\r\n        </div>\r\n\r\n        <div class=\"itemdiv\" style=\"padding-top: 94px;\">\r\n            <div *ngFor=\"let slot of filterSlots\">\r\n                <div class=\"col-xl-4 col-lg-6 col-md-6 col-sm-12 itemcard\">\r\n                    <div class=\"card product_item cell\">\r\n                        <div class=\"body\">\r\n                            <div class=\"cp_img\">\r\n\r\n                                <p class=\"btn  btn-sm waves-effect time truncate\" style=\"margin: 0;\">{{\r\n                                    slot.startDate |\r\n                                    date }} day#{{slot.day}}</p>\r\n                                <a class=\"btn  btn-sm waves-effect time truncate\" style=\"margin: 0;\">{{slot.hours}}-hour\r\n                                    reservation slot #{{slot.id}}</a>\r\n                                <p class=\"snd truncate\">{{slot.name}} GRISE </p>\r\n                                <div class=\"hover\">\r\n                                    <div style=\"display: flex\">\r\n                                        <div class=\"section\">\r\n                                            <i class=\"fa fa-user\" [style.color]=\"slot.color\" aria-hidden=\"true\"\r\n                                                style=\"font-size:40px\"></i>\r\n\r\n                                            <h4>{{slot.slotLeft}}</h4>\r\n                                            <h4>Slots Left</h4>\r\n\r\n                                        </div>\r\n                                        <div class=\"line\"></div>\r\n                                        <!-- <div class=\"vl\"></div> -->\r\n                                        <div class=\"section\">\r\n                                            <i class=\"fab fa-ethereum\" [style.color]=\"slot.color\"\r\n                                                style=\"font-size: 40px\"></i><br>\r\n\r\n                                            <h4>{{slot.totalInvest | number:'1.0-5'}}</h4>\r\n                                            <h4>Total BNB</h4>\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <form #f=\"ngForm\" (ngSubmit)=\"reserveClick(slot, f)\">\r\n                                        <div\r\n                                            style=\"display: flex; padding-left:8px; padding-right: 8px;padding-top: 20px\">\r\n\r\n                                            <input type=\"number\" class=\"form-control\"\r\n                                                style=\"width: 90%;margin-left: 5%;border-radius: 6px;background-color: #e7e7e7;\"\r\n                                                id=\"slotAmount\" name=\"slotAmount\"\r\n                                                placeholder=\"Enter BNB (Min: 0.5 BNB)\" min=\"0.5\" required\r\n                                                [disabled]=\"slot.isExpired\" ngModel #slotAmount=\"ngModel\">\r\n\r\n                                        </div>\r\n\r\n                                        <button type=\"submit\" class=\"btn btn-primary reservation-button\"\r\n                                            [disabled]=\"checkValueWithBalance(slot, f)\"\r\n                                            [style.background-color]=\"slot.color\">{{ slot.validationText ?\r\n                                            slot.validationText : 'Reserve Grise' }}</button>\r\n\r\n                                    </form>\r\n                                    <!-- <br> -->\r\n\r\n                                    <button type=\"submit\" class=\"btn btn-primary reservation-button\" data-toggle=\"modal\"\r\n                                        [style.background-color]=\"slot.color\" (click)=\"nftButton(slot.id)\"\r\n                                        data-target=\"#exampleModal\">NFT</button>\r\n\r\n\r\n                                    <!-- <button style=\"background-color: transparent;border: none;\" data-toggle=\"modal\"\r\n                                        data-target=\"#exampleModal\">\r\n                                        <img style=\"width: 10%;border-radius: 50%;\" src=\"../../../assets/NFT_Icon.png\">\r\n                                    </button> -->\r\n\r\n\r\n                                    <div style=\"color: black;\" class=\"modal fade\" id=\"exampleModal\"\r\n                                        data-backdrop=\"static\" data-keyboard=\"false\" tabindex=\"-1\" role=\"dialog\"\r\n                                        aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                                        <div class=\"modal-dialog modal-dialog-centered modal-sm\" role=\"document\">\r\n                                            <div class=\"modal-content\">\r\n                                                <div class=\"modal-header\"\r\n                                                    style=\"background-color: #6610f2;color: white;\">\r\n                                                    <h5 class=\"modal-title\" style=\"margin: 0;font-size: 27px;\"\r\n                                                        id=\"exampleModalLabel\">\r\n                                                        NFT</h5>\r\n\r\n                                                </div>\r\n                                                <div class=\"modal-body\" style=\"text-align: left;\">\r\n                                                    <div class=\"nftmodal\" style=\"display: flex;\">\r\n                                                        <div class=\"model_img_box modal_nft_img\">\r\n                                                            <img class=\"model_img\" src={{nftImg}}>\r\n                                                        </div>\r\n                                                        <div>\r\n                                                            <div class=\"description\">\r\n                                                                <p class=\"text_paragraph\">\r\n                                                                    {{nftdetail}}\r\n                                                                </p>\r\n\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class=\"modal-footer\" style=\"padding:0; margin:0\">\r\n                                                    <button type=\"button\" class=\"model_btn btn btn-primary btn-close\"\r\n                                                        data-dismiss=\"modal\" (click)=\"nftCloseButton()\">Close</button>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <a class=\"btn  btn-sm waves-effect time truncate\"\r\n                                        style=\"margin: 8px;margin-bottom: -20px;\">\r\n                                        <i class=\"fa fa-clock\"></i>\r\n                                        {{ (slot.isExpired ? '' : 'closing in ') + slot.timeLeft }}\r\n\r\n                                    </a>\r\n                                    <!-- <h4>26  </h4>  -->\r\n                                    <div class=\"bar-pro\"></div>\r\n                                    <a class=\"progress\">\r\n                                        <a class=\"progress-bar\" role=\"progressbar\"\r\n                                            [attr.aria-valuenow]=\"slot.progressDone\" aria-valuemin=\"0\"\r\n                                            aria-valuemax=\"100\" [style.width.%]=\"slot.progressDone\"\r\n                                            [style.background-color]=\"slot.color\"></a>\r\n                                    </a>\r\n\r\n\r\n                                    <div class=\"price\" style=\"display: flex\">\r\n                                        <div style=\"width: 50%\">\r\n                                            <span class=\"old_price\">Your Share</span><br>\r\n                                            <span class=\"new_price\">{{ slot.mySharePercent }}</span>\r\n                                        </div>\r\n                                        <div style=\"width: 50%\">\r\n                                            <span class=\"old_price\">Contribution</span><br>\r\n                                            <span class=\"new_price\">{{slot.myContribution | number:'1.0-5'}}\r\n                                                BNB</span>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    </div>\r\n</div>","/**\r\n * Loads the WASM modules\r\n */\r\n// import { Component, OnInit } from '@angular/core';\r\n// import { ToastrService } from 'ngx-toastr';\r\nimport { environment as env } from '../../environments/environment';\r\n\r\nclass Loader {\r\n    // export default class Loader implements OnInit {\r\n    blockFrostApiKey = env.blockFrostApiKey;\r\n    blockFrostApiKeyMainnet = env.blockFrostApiKeyMainnet;\r\n    production = env.production;\r\n\r\n    nami_lib: any;\r\n    wasm_lib: any;\r\n    nami: any;\r\n    cardano: any;\r\n    // toastr: ToastrService\r\n    // constructor(\r\n    //     private toastr: ToastrService\r\n    // ) { }\r\n\r\n    // ngOnInit(): void {\r\n    //     this.load();\r\n    // }\r\n    // Setup the wasm lib to get 100x performance\r\n    // https://www.npmjs.com/package/@emurgo/cardano-serialization-lib-browser\r\n\r\n\r\n    public async load() {\r\n        if (this.cardano && this.nami_lib && this.wasm_lib && this.nami) return;\r\n        /**\r\n         * @private\r\n         */\r\n        this.cardano = (window as any).cardano;\r\n        this.nami_lib = await import('nami-wallet-api-library');\r\n        this.wasm_lib = await import('@emurgo/cardano-serialization-lib-browser/cardano_serialization_lib');\r\n\r\n        console.log(\"this.cardano :: \", this.cardano);\r\n        this.nami = await this.nami_lib.NamiWalletApi(\r\n            this.cardano,\r\n            this.production ? this.blockFrostApiKeyMainnet : this.blockFrostApiKey,\r\n            this.wasm_lib\r\n        )\r\n        // if (!await this.cardano.isEnabled()) {\r\n        //     console.log(\"info is: \", this.nami);\r\n        //     // alert(this.nami.info);\r\n        //     // this.toastr.error(this.nami.info);\r\n        // }\r\n        // this.cardano.onAccountChange((address: any) => {\r\n        //     console.log(address, \"namiAddress\")\r\n        // }),\r\n        //     this.cardano.onNetworkChange((address: any) => {\r\n        //         console.log(address, \"namiAddress\")\r\n        //     })\r\n    }\r\n\r\n\r\n    private async isNamiInstalled() {\r\n        await this.load()\r\n        if (!this.nami || Object.keys(this.nami).length === 0) return false;\r\n        return true;\r\n    }\r\n\r\n    public async isWalletConnected() {\r\n        return await this.nami.isEnabled();\r\n    }\r\n\r\n    // Get Connected Wallet Address\r\n    public async CardanoWalletAddress() {\r\n        try {\r\n            if (!await this.isNamiInstalled()) return false;\r\n\r\n            const addr = await this.nami.getAddress();\r\n            return addr ? addr : false;\r\n        } catch (err) {\r\n            console.log(err);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    public async convertToADA(value: any) {\r\n        return value ? value / 1000000 : 0;\r\n    }\r\n\r\n    public async getWalletBalance() {\r\n        try {\r\n            await this.load();\r\n            return await new Promise(async (resolve, reject) => {\r\n                const S = this.wasm_lib;\r\n                if (!S) return reject(false);\r\n                // (window as any).global = window;\r\n                // window.Buffer = window.Buffer || require('buffer').Buffer;\r\n\r\n                await this.cardano.getBalance().then(async (res: any) => {\r\n                    const balance = S.Value.from_bytes(Buffer.from(res, 'hex'));\r\n                    const lovelaces = balance.coin().to_str();\r\n                    console.log(\"**  lovelaces  ** \", lovelaces);\r\n                    return resolve(lovelaces);\r\n                    // return lovelaces;\r\n                    // console.log(\"**  lovelaces  ** \", this.convertToADA(lovelaces));\r\n                })\r\n                return reject(false);\r\n            });\r\n        } catch (error) {\r\n            console.log(error)\r\n            return false;\r\n        }\r\n    }\r\n\r\n    public async verifyWallet(requiredBalance: any = 0, userType: string = '') {\r\n        // is wallet installed\r\n        // is wallet connected\r\n        // is on required network (testnet or mainnet)\r\n        // check wallet balance (amount of available ada is smaller than required amount)\r\n        // testnet network allowed only to developers\r\n\r\n        try {\r\n            if (!await this.isNamiInstalled()) return \"Nami-wallet not installed yet\";\r\n            if (!await this.isWalletConnected()) return \"Nami-wallet not connected\";\r\n\r\n            if (userType !== 'dev') {\r\n                const getNetwork = await this.nami.getNetworkId();\r\n                if (this.production) { // mainnet\r\n                    if (getNetwork.id !== 1 && getNetwork.network !== 'mainnet') return 'Wrong Network';\r\n                } else { // testnet // {id: 0, network: 'testnet'}\r\n                    if (getNetwork.id !== 0 && getNetwork.network !== 'testnet') return 'Wrong Network';\r\n                }\r\n            }\r\n            if (requiredBalance && requiredBalance !== 0) {\r\n                const getBalance = await this.getWalletBalance();\r\n                console.log(\"Wallet balance is: \", getBalance);\r\n                if (!getBalance) return 'Something went wrong to get wallet balance';\r\n                if (await this.convertToADA(getBalance) < requiredBalance) return 'Insufficient balance';\r\n            }\r\n            return true;\r\n        } catch (err) {\r\n            console.log(err);\r\n            return 'Nami-wallet extension not installed/enabled';  // 'Wrong nami-wallet connection';\r\n        }\r\n    }\r\n\r\n\r\n\r\n    public async Cardano() {\r\n        await this.load();\r\n        return this.nami;\r\n    }\r\n\r\n    public async CCVault() {\r\n        await this.load();\r\n        return this.cardano.ccvault;\r\n    }\r\n\r\n    public async CardanoSRL() {\r\n        return this.wasm_lib;\r\n    }\r\n}\r\n\r\n// class Loader {\r\n//     this.wasm = null;\r\n//     async load() {\r\n\r\n//     }\r\n\r\n\r\n//     get \r\n// };\r\n\r\nexport default new Loader();\r\n","<!-- keep that comment start -->\r\n<div *ngIf=\"allowed_user == true\">\r\n<!-- keep that comment end -->\r\n\r\n<div class=\"bg-color \">\r\n\r\n  <div class=\"row tab-outer-div\">\r\n    <!-- introduction part -->\r\n    \r\n    <div class=\"col-lg-12 \">\r\n\r\n      <h1 class=\"headingAi_first\">Introduction AI Platform</h1>\r\n      <div class=\"tab\" style=\"text-align: justify;\">\r\n\r\n\r\n      <div class=\"row\">\r\n        <div class=\"col-lg-12\">\r\n         <h1> How to use Grise Token AI-Indices</h1>\r\n        </div>\r\n        <div class=\"col-lg-12 my-3\">\r\n          <h4 class=\"text-danger\">NOTE: Indices Rebalancing Times Are an Approximation.</h4>\r\n        </div>\r\n        <div class=\"col-lg-12 my-3\">\r\n          <div class=\"info-text\">\r\n          Sometimes we may update the indices when we make important updates or changes to technical details and\r\n          calculations for an index. For example, we recently added a requirement for all indices to only hold\r\n          cryptocurrencies with a daily trading volume greater than $500k. Each of these technical updates requires us\r\n          to re-do the index. This will apply with future technical updates to indices.\r\n\t        Furthermore, we have recently add features related to trading signal. This features is based on Deep Learning by which our stacker can take smart decision to avoid loss in trading. In AI-Price prediction algorithms we can see the future expected price up-to two months and take fast decision to in-out the market.\r\n          As a result, the days and times are an approximation and indices may take 1-4 hours to fully update or on\r\n          occasion be rebalanced more than their time-horizon to make important technical updates.\r\n        </div>\r\n      </div>\r\n      <div class=\"col-lg-12 my-3\">\r\n          <h4 class=\"text-danger\">DISCLAIMER\r\n          Indices of crypto investments, like all types of investment-related information, are subject to risk; they can\r\n          go down as well as up; and relying on such information can lead to losses as well as gains. Information about\r\n          past performance is not necessarily indicative of future performance.\r\n          </h4>\r\n      </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n\r\n    <!-- index module and trading signal -->\r\n    <div class=\"row tab-outer-div\">\r\n    <div class=\"col-lg-6\">\r\n      <h1 class=\"headingAi\">Index Section</h1>\r\n\r\n      <div class=\"tab\">\r\n\r\n        <div class=\"indice_form\">\r\n\r\n          <form #myForm=\"ngForm\" (ngSubmit)=\"onSubmit(myForm)\">\r\n              <h2 class=\"text-danger\">\r\n                <span class=\"mr-3 text-danger\">Last Updated Date/Time:</span>  {{last_change_date}}\r\n              </h2>\r\n              <label>\r\n                <h3>Crypto indice module can be use to find the best coins in current market.\r\n                  Furthermore, we are feeding real-time data to our AI models so we can expect better\r\n                  results with the passage of time.</h3>\r\n              </label>\r\n              <div class=\"col-lg-12\">\r\n                <div class=\"col-lg-6 text-left\">\r\n                  <label>Type: Trader/Inverstor\r\n                    <label class=\"switch\">\r\n                      <input (change)=\"handleInvester()\" type=\"checkbox\" name=\"inv_type\" ngModel checked>\r\n                      <span class=\"slider round\"></span>\r\n                    </label>\r\n                  </label>\r\n                </div>\r\n                <div class=\"col-lg-6 text-left\">\r\n\r\n                  <!-- <label> Time Window\r\n                    <label class=\"switch\">\r\n                      <input type=\"checkbox\" name=\"time_wind\" ngModel checked>\r\n                      <span class=\"slider round\"></span>\r\n                    </label>\r\n                  </label> -->\r\n                </div>\r\n                <div class=\"col-lg-12 text-left\">\r\n\r\n                  <label class=\"text-center\">Time-Horizon: &nbsp; &nbsp;</label>\r\n                  <br>\r\n                  <div>\r\n                    <input class=\"form-check-input\" type=\"radio\" name=\"exampleRadios\" id=\"exampleRadios4\" value=\"d\"\r\n                      ngModel checked>\r\n                    <label class=\"form-check-label ml-1 mr-3\" for=\"exampleRadios4\">\r\n                      &nbsp; &nbsp;&nbsp; Daily\r\n                    </label>\r\n                    <input class=\"form-check-input\" type=\"radio\" name=\"exampleRadios\" id=\"exampleRadios5\" value=\"h\"\r\n                      ngModel>\r\n                    <label class=\"form-check-label ml-1 mr-3\" for=\"exampleRadios5\">\r\n                      &nbsp; &nbsp;&nbsp; Hourly\r\n                    </label>\r\n\r\n                    <input class=\"form-check-input\" type=\"radio\" name=\"exampleRadios\" id=\"exampleRadios1\" value=\"w\"\r\n                      ngModel checked>\r\n                    <label class=\"form-check-label ml-1 mr-3\" for=\"exampleRadios1\">\r\n                      &nbsp; &nbsp;&nbsp; Weekly\r\n                    </label>\r\n\r\n                    <input class=\"form-check-input\" type=\"radio\" name=\"exampleRadios\" id=\"exampleRadios2\" value=\"m\"\r\n                      ngModel>\r\n                    <label class=\"form-check-label ml-1 mr-3\" for=\"exampleRadios2\">\r\n                      &nbsp; &nbsp;&nbsp; Monthly\r\n                    </label>\r\n\r\n                    <input class=\"form-check-input\" type=\"radio\" name=\"exampleRadios\" id=\"exampleRadios3\" value=\"y\"\r\n                      ngModel>\r\n                    <label class=\"form-check-label ml-1 mr-3\" for=\"exampleRadios3\">\r\n                      &nbsp; &nbsp;&nbsp; Yearly\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n\r\n\r\n              </div>\r\n            \r\n\r\n            <div class=\"text-center mt-3\">\r\n              <h3>Minimum Trading Volume: 500K</h3>\r\n            </div>\r\n            <div class=\"indbutton text-center\">\r\n              <button class=\"buttonind\"><span>Submit </span></button>\r\n            </div>\r\n            <div class=\"text-left text-danger\">\r\n              Disclaimer: Some tokens and crypto investments may have higher risk than others, for instance smaller\r\n              market cap tokens and issuers; and tokens with lower daily trading volume have higher risks because of\r\n              lower liquidity. Risks related to specific tokens can be mitigated by diversification, which is present\r\n              to\r\n              varying extents in the indices.\r\n            </div>\r\n          </form>\r\n\r\n        </div>\r\n\r\n\r\n      </div>\r\n    </div>\r\n  \r\n   \r\n  <!-- trading signal  -->\r\n  <div class=\"col-lg-6 \">\r\n    <h1 class=\"headingAi\">Get Your Trading Signal</h1>\r\n\r\n    <div class=\"tab\">\r\n      <div class=\"row\">\r\n        <div class=\"col-lg-12\">\r\n          <div class=\"col-lg-6\">\r\n            <h4 for=\"ice-cream-choice_t\">Choose Coin:</h4>\r\n            <input class=\"inputcoinsearch mb-3\" type=\"text\" list=\"coinListTrading\" name=\"coin\" [(ngModel)]='trade_coin_t'\r\n              (change)=\"coinListTrading(trade_coin_t)\" />\r\n\r\n            <datalist id=\"coinListTrading\">\r\n              <option *ngFor=\"let data_coin_name of coins_list_api;\" [value]=\"data_coin_name.symbol\">\r\n                {{data_coin_name.id}} ({{data_coin_name.symbol}})\r\n              </option>\r\n            </datalist>\r\n            <p>Money IN-OUT Sentiment: {{ai_decision_1}}</p>\r\n            <p>User Growth Sentiment: {{ai_decision_3}}</p>\r\n          </div>\r\n          <div class=\"col-lg-6\">\r\n            <h3 class=\"text-danger\">\r\n              <span class=\"mr-3 text-danger\">Last Updated Date/Time:</span>  {{last_change_date}}\r\n            </h3>\r\n            <p>Largest Transaction Sentiment: {{ai_decision_2}}</p>\r\n          \r\n            <p>Concentration On-Chain Sentiment: {{ai_decision_4}}</p>\r\n    \r\n            <!-- <p>Response {{success_response}}</p> -->\r\n          </div>\r\n        </div>\r\n        <div class=\"col-lg-12\">\r\n          <div class=\"chart-wrapper\">\r\n            <canvas baseChart height=\"270px\" width=\"450px\" [colors]=\"doughnutChartColors\" [data]=\"doughnutChartData\"\r\n              [options]=\"DonOptions\" [labels]=\"doughnutChartLabels\" [chartType]=\"doughnutChartType\">\r\n            </canvas>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n  <div class=\"row tab-outer-div\">\r\n      <!-- graph index section -->\r\n      <div class=\"col-lg-12 tab-outer-div\">\r\n        <div *ngIf=\"ld == 1\" id=\"loader\" class=\"loader\"></div>\r\n    \r\n        <div *ngIf=\"!loadData\" class=\"chart-wrapper\">\r\n          <h1 class=\"headingAi\">Indices Coin Predictions</h1>\r\n          <div class=\"tab\">\r\n            <canvas baseChart [colors]=\"PieChartColor\" [data]=\"pieChartData\"\r\n              [options]=\"pieChartOptions\" [legend]=\"pieChartLegend\" [labels]=\"pieChartLabels\" [chartType]=\"pieChartType\">\r\n            </canvas>\r\n            <!-- <highcharts-chart class=\"custom-chart-styles\"\r\n              [Highcharts]=\"highcharts\"\r\n              [options]=\"pieChart\">\r\n            </highcharts-chart> -->\r\n          </div>\r\n        </div>\r\n      </div>\r\n  </div>\r\n  <div class=\"tab-outer-div\">\r\n    <h1 class=\"headingAi\">Coin Price Prediction</h1>\r\n    <div class=\"tab\">\r\n      <h4 class=\"text-danger\">\r\n        <span class=\"mr-3 text-danger\">Last Updated Date/Time:</span>  {{last_change_date}}\r\n      </h4>\r\n      <h2 for=\"ice-cream-choice\" class=\"mr-3\">Choose Coin:</h2>\r\n      <input class=\"inputcoinsearch mb-3 \" type=\"text\" list=\"productList\" name=\"product\" [(ngModel)]='currentProduct'\r\n        (change)=\"getCoinPrediction(currentProduct)\" />\r\n\r\n      <datalist id=\"productList\">\r\n        <option *ngFor=\"let data_coin_name of coins_list_api;\" [value]=\"data_coin_name.id\">\r\n          {{data_coin_name.id}} ({{data_coin_name.symbol}})\r\n        </option>\r\n      </datalist>\r\n      <div class=\"custom-chart-styles\">\r\n        <canvas baseChart width=\"1400px\" height=\"600px\" [datasets]=\"lineChartData\" [labels]=\"lineChartLabels\"\r\n          [options]=\"lineChartOptions\" [colors]=\"lineChartColors\" [legend]=\"lineChartLegend\" chartType=\"line\"\r\n          [plugins]=\"lineChartPlugins\">\r\n        </canvas>\r\n      </div>\r\n      <!-- <highcharts-chart class=\"custom-chart-styles\"\r\n        [Highcharts]=\"highcharts\"\r\n        [constructorType]=\"'stockChart'\"\r\n        [options]=\"GraphData\">\r\n      </highcharts-chart> -->\r\n    </div>\r\n  </div>\r\n<div class=\"row tab-outer-div\">\r\n\r\n    <!-- trending coins -->\r\n    <div class=\"col-lg-12 \">\r\n      <h1 class=\"headingAi\">CoinGecko Trending Coins</h1>\r\n\r\n      <div class=\"table-tab\">\r\n        <hr>\r\n\r\n        <table\r\n          class=\"table table-bordered table-hover table-responsive-sm table-responsive-md table-responsive-lg table-responsive-xl\">\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th scope=\"col\">Name</th>\r\n\r\n              <th scope=\"col\">Market Cap Rank</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr class=\"table-data-hover\" *ngFor=\"let data of trend_coins; let i=index \">\r\n              <!-- <tr> -->\r\n              <td>{{i+1}}</td>\r\n              <td>\r\n                {{data.name}}\r\n\r\n                <img class=\"exchange_img\" src=\"{{data.small}}\" />\r\n\r\n              </td>\r\n              <td>{{data.market_cap_rank}}</td>\r\n\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n      </div>\r\n    </div>\r\n  \r\n</div>\r\n\r\n\r\n\r\n\r\n<!-- <div class=\"row tab-outer-div\">\r\n    <div class=\"col-lg-12 \">\r\n      <h1 class=\"headingAi\">All Coins </h1>\r\n      <div class=\"tab\">\r\n        <div>\r\n          <table class=\"table table-bordered table-hover table-responsive table-responsive-sm table-responsive-md table-responsive-lg table-responsive-xl\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\">Market Cap Rank</th>\r\n                <th scope=\"col\">Coin</th>\r\n                <th scope=\"col\">Price</th>\r\n                <th scope=\"col\">Price Change 1h</th>\r\n                <th scope=\"col\">Price Change 24h</th>\r\n                <th scope=\"col\">Price Change 7d</th>\r\n                <th scope=\"col\">Price Change 30d</th>\r\n                <th scope=\"col\">Market Cap</th>\r\n                <th scope=\"col\">high 24h</th>\r\n                <th scope=\"col\">low 24h</th>\r\n                <th scope=\"col\">7D Sparkline</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr *ngFor=\"let data of data_coins; let i=index \">\r\n                \r\n                <td>{{data.market_cap_rank}}</td>\r\n                <td>\r\n\r\n                  <img class=\"exchange_img\" src=\"{{data.image}}\" />\r\n                  <br>\r\n                  {{data.name}}\r\n                </td>\r\n                <td>{{data.current_price}}</td>\r\n                <td>{{data.price_change_percentage_1h_in_currency}}</td>\r\n                <td>{{data.price_change_percentage_24h_in_currency}}</td>\r\n                <td>{{data.price_change_percentage_7d_in_currency}}</td>\r\n                <td>{{data.price_change_percentage_30d_in_currency}}</td>\r\n                <td>{{data.market_cap}}</td>\r\n                <td>{{data.high_24h}}</td>\r\n                <td>{{data.low_24h}}</td>\r\n                <td><img src=\"{{data.spark_seven_day_price}}\" /></td>\r\n\r\n              </tr>\r\n\r\n              <ul class=\"pagination ml-3\">\r\n                <li class=\"page-item \">\r\n                  <a href=\"javascript:void(0);\" class=\"pagination_btn\" (click)=\"pre_page()\">Previous</a>\r\n                </li>\r\n\r\n                <li class=\"page-item active\">\r\n                  <a href=\"#\" class=\"pagination_btn\">{{page_number}} <span class=\"sr-\"></span></a>\r\n                </li>\r\n\r\n                <li class=\"page-item\">\r\n                  <a href=\"javascript:void(0);\" class=\"pagination_btn\" (click)=\"next_page()\">Next</a>\r\n                </li>\r\n              </ul>\r\n\r\n            </tbody>\r\n          </table>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n</div> -->\r\n\r\n  </div>\r\n<!-- keep that comment start -->\r\n  \r\n</div> \r\n<div *ngIf=\"allowed_user == false\">\r\n  <div style=\"font-size: 30px; margin-top: 21%; line-height: normal; padding:0px 10px;\" class=\"text-center mb-5\">\r\n    AI will only be available to NFT holders.\r\n    <div>\r\n      <img class=\"sidebar-icon\" src=\"https://bnb-grise-assests.s3.us-west-2.amazonaws.com/assets/dashboard.png\" alt=\"dashboard\">\r\n      <br>\r\n      <div class=\"d-flex justify-content-center access-btn-div\">\r\n        <!-- <span (click)=\"giveAccess()\" class=\"access-btn\">Access AI</span> -->\r\n      </div>\r\n    </div>\r\n  <!-- <div style=\"font-size: 30px; margin-top: 21%;\" class=\"text-center mb-5\">\r\n  Please hold grise NFT's to gain access\r\n  <div>\r\n    <a routerLinkActive=\"active\" routerLink=\"/dashboard\" queryParamsHandling=\"merge\" onclick=\"closeNav()\">\r\n      <img class=\"sidebar-icon\" src=\"https://bnb-grise-assests.s3.us-west-2.amazonaws.com/assets/dashboard.png\" alt=\"dashboard\">\r\n      <br>\r\n      <label class=\"mb-0 app-item-text\">Dashboard</label>\r\n    </a>\r\n  </div> -->\r\n</div>\r\n</div>\r\n<!-- keep that comment end -->\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient,HttpParams,HttpHeaders } from '@angular/common/http';\r\nimport { NgForm } from '@angular/forms';\r\nimport { from, Observable, throwError } from 'rxjs';\r\nimport { ChartDataSets, ChartOptions, ChartType } from 'chart.js';\r\nimport { MultiDataSet, Label, SingleDataSet, Color } from 'ng2-charts';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport { color, Dictionary } from 'highcharts';\r\nimport {formatDate} from '@angular/common';\r\nimport * as StakingToken from '../../../abis/token/GriseToken.json';\r\nimport { ContractService } from '../../services/contract.service';\r\nimport { promise } from 'selenium-webdriver';\r\nimport * as Highcharts from \"highcharts/highstock\";\r\nimport Indicators from \"highcharts/indicators/indicators-all.js\";\r\nimport DragPanes from \"highcharts/modules/drag-panes.js\";\r\nimport AnnotationsAdvanced from \"highcharts/modules/annotations-advanced.js\";\r\nimport PriceIndicator from \"highcharts/modules/price-indicator.js\";\r\nimport StockTools from \"highcharts/modules/stock-tools.js\";\r\n\r\nIndicators(Highcharts);\r\nDragPanes(Highcharts);\r\nAnnotationsAdvanced(Highcharts);\r\nPriceIndicator(Highcharts);\r\nStockTools(Highcharts);\r\n\r\n\r\ndeclare let Web3: any;\r\ndeclare let window: any;\r\nconst web3 = window.web3;\r\n\r\n\r\n@Component({\r\n  selector: 'app-token-metrix',\r\n  templateUrl: './token-metrix.component.html',\r\n  styleUrls: ['./token-metrix.component.scss']\r\n})\r\nexport class TokenMetrixComponent implements OnInit {\r\n// contract\r\n  address:string;\r\n  public bar: any = [];\r\n  highcharts = Highcharts;\r\n  Inv_Type:string = \"trader\"\r\n  inv_type: string;\r\n  time_win: string;\r\n  time_frame: string;\r\n  min_cap: number;\r\n  max_cap: number;\r\n  limit: number;\r\n  url = `https://api.ethama.finance/get-best-coin`;\r\n  items: any  = [];\r\n  public pieChartOptions: any = {\r\n  responsive: true,\r\n  tooltips: {\r\n    backgroundColor: 'rgba(255,255,255,0.9)',\r\n    bodyFontColor: '#999',\r\n    borderColor: '#999',\r\n    titleFontColor: '#999',\r\n    titleFontSize: 20,\r\n    bodyFontSize: 20,\r\n    titleMarginBottom: 10,\r\n    xPadding: 15,\r\n    yPadding: 15,\r\n  },\r\n  legend: {\r\n    display: true,\r\n    fontSize: 20,\r\n    labels: {\r\n      fontColor: 'white', fontSize:20\r\n    }\r\n   }\r\n  };\r\n  public PieChartColor: Color[] = [{\r\n    backgroundColor: ['#003f5c','#2f4b7c','#665191','#a05195','#d45087','#f95d6a','#ff7c43', '#ffa600', '#ca5300', '#aa2600']\r\n   }];\r\n  public pieChartLabels: Label[] = ['SciFi', 'Drama', 'Comedy'];\r\n  public pieChartData: SingleDataSet = [30, 50, 20];\r\n  public pieChartType: ChartType = 'pie';\r\n  public pieChartLegend = true;\r\n  public pieChartPlugins = [];\r\n  public loadData = true\r\n  public loadingstate: number;\r\n  public ld:number = 0;\r\n\r\n\r\n  public data_coins:any;\r\n  public trend_coins:any;\r\n\r\n\r\n\r\n  // Pagination\r\n  page_number:number;\r\n\r\n  GraphData:any = {\r\n    chart: {\r\n      backgroundColor: \"#3b4148\",\r\n    },\r\n    rangeSelector: {\r\n      chart: {\r\n        backgroundColor: \"#3b4148\",\r\n      },\r\n      buttonTheme: { // styles for the buttons\r\n        fill: 'none',\r\n        stroke: 'none',\r\n        'stroke-width': 0,\r\n        r: 8,\r\n        style: {\r\n            color: 'white',\r\n            fontWeight: 'bold'\r\n        },\r\n        states: {\r\n            hover: {\r\n                fill: 'white',\r\n                style: {\r\n                    color: 'black'\r\n                }\r\n            },\r\n            select: {\r\n                fill: 'white',\r\n                style: {\r\n                    color: 'black'\r\n                }\r\n            }\r\n        }\r\n    },\r\n    inputStyle: {\r\n        color: 'white',\r\n        fontWeight: 'bold',\r\n        states:{\r\n            select:{\r\n                color: 'black',\r\n            }\r\n        }\r\n    },\r\n    labelStyle: {\r\n        color: 'white',\r\n        fontWeight: 'bold',\r\n    },\r\n      selected: 1\r\n    },\r\n    title: {\r\n      text: \"Coin Past and Predicted Price\",\r\n      style: {\r\n        color: '#fff',\r\n      }\r\n    },\r\n    yAxis: {\r\n        title: {\r\n            text: ''\r\n        },\r\n        gridLineColor: 'gray',\r\n        labels: {\r\n          style: {\r\n              color: 'white'\r\n          }\r\n      }\r\n    },\r\n\r\n    series: [\r\n      {\r\n        type: \"line\",\r\n        name: \"Past Price\",\r\n        data: [],\r\n        color: '#DDDF00',\r\n      },\r\n\r\n      {\r\n        type: \"line\",\r\n        name: \"Predicted Price\",\r\n        data: [],\r\n        color: '#ff0000'\r\n      }\r\n    ]\r\n  }\r\n\r\n  // pieChart:any = {\r\n  //   chart: {\r\n  //       type: 'pie',\r\n  //       backgroundColor: \"#3b4148\",\r\n  //   },\r\n  //   title: {\r\n  //       text: \"Trending Coins\",\r\n  //       style: {\r\n  //         color: '#fff',\r\n  //       }\r\n  //   },\r\n  //   tooltip: {\r\n  //       pointFormat: '{series.name}: {point.percentage:.1f}%'\r\n  //   },\r\n  //   accessibility: {\r\n  //       point: {\r\n  //           valueSuffix: '%'\r\n  //       }\r\n  //   },\r\n  //   plotOptions: {\r\n  //       pie: {\r\n  //           allowPointSelect: true,\r\n  //           cursor: 'pointer',\r\n  //           dataLabels: {\r\n  //               enabled: true,\r\n  //               format: '{point.name}: {point.percentage:.1f} %'\r\n  //           }\r\n  //       }\r\n  //   },\r\n  //   series: [{\r\n  //       name: 'Market Cap',\r\n  //       colorByPoint: true,\r\n  //       data: []\r\n  //   }]\r\n  // }\r\n\r\n\r\n  // coin prediction line chart\r\n // Array of different segments in chart\r\n public lineChartData: ChartDataSets[] = [];\r\n\r\n//Labels shown on the x-axis\r\npublic lineChartLabels: any[] = [];\r\n\r\n// Define chart options\r\nlineChartOptions: ChartOptions = {\r\n  responsive: false,\r\n  tooltips: {\r\n    backgroundColor: 'rgba(255,255,255,0.9)',\r\n    bodyFontColor: '#999',\r\n    borderColor: '#999',\r\n    borderWidth: 1,\r\n    caretPadding: 15,\r\n    displayColors: false,\r\n    enabled: true,\r\n    intersect: true,\r\n    mode: 'x',\r\n    titleFontColor: '#999',\r\n    titleFontSize: 20,\r\n    bodyFontSize: 20,\r\n    titleMarginBottom: 10,\r\n    xPadding: 15,\r\n    yPadding: 15,\r\n  },\r\n  legend: {\r\n    labels: { fontColor: 'white' ,  fontSize: 20}\r\n  },\r\n  scales: {\r\n    xAxes: [{\r\n      ticks: { fontColor: 'white', fontSize: 20 },\r\n      gridLines: { color: 'rgba(255,255,255,0.1)' }\r\n    }],\r\n    yAxes: [{\r\n      ticks: { fontColor: 'white' , fontSize: 20 },\r\n      gridLines: { color: 'rgba(255,255,255,0.1)' }\r\n    }]\r\n  }\r\n\r\n};\r\n\r\n// Define colors of chart segments\r\nlineChartColors: Color[] = [\r\n];\r\n\r\n// Set true to show legends\r\nlineChartLegend = true;\r\n\r\n// Define type of chart\r\nlineChartType = 'line';\r\n\r\nlineChartPlugins = [];\r\n\r\n\r\n// coins_list_api\r\npublic coins_list_api:any = [];\r\n// coin search dropdown\r\ncurrentProduct: string = \"\";\r\n\r\n\r\n// Last Change Date\r\npublic last_change_date:string;\r\n\r\n\r\n// Trading Signal\r\ndoughnutChartLabels: Label[] = ['Money IN-OUT','Largest Transaction','User Growth','Concentration On-Chain'];\r\n  doughnutChartData: MultiDataSet = [\r\n  ];\r\n  doughnutChartType: ChartType = 'doughnut';\r\n  public doughnutChartColors: Color[] = [{\r\n    backgroundColor: ['#f1c40f', '#2ecc71', '#e74c3c', '#195EFF']\r\n   }];\r\n\r\n   DonOptions: ChartOptions = {\r\n    responsive: true,\r\n    tooltips: {\r\n      backgroundColor: 'rgba(255,255,255,0.9)',\r\n      bodyFontColor: '#999',\r\n      borderColor: '#999',\r\n      displayColors: false,\r\n      enabled: true,\r\n      intersect: true,\r\n      titleFontSize: 20,\r\n      bodyFontSize: 20,\r\n      titleMarginBottom: 10,\r\n      xPadding: 15,\r\n      yPadding: 15,\r\n    },\r\n    legend: {\r\n      labels: { fontColor: 'white' ,  fontSize: 20}\r\n    }\r\n  }\r\n\r\n  ai_decision_1: string;\r\n  ai_decision_2: string;\r\n  ai_decision_3: string;\r\n  ai_decision_4: string;\r\n\r\n  success_response:string;\r\n\r\n\r\n  trade_coin_t:string;\r\n\r\n  handleInvester(){\r\n    if(this.Inv_Type == \"trader\"){\r\n      this.Inv_Type = \"invester\"\r\n    }else{\r\n      this.Inv_Type = \"trader\"\r\n    }\r\n  }\r\n\r\n  getCoinPrediction(coinName:any){\r\n    let headers = new HttpHeaders();\r\n    let params = new HttpParams().set(\"coin\", coinName);\r\n    this.http.get(`https://api.ethama.finance/get-coin-predict`, {\r\n      headers: headers,\r\n      params: params,\r\n      responseType: 'text'\r\n    }).toPromise().then(Response => {\r\n      let details = JSON.parse(Response);\r\n      if(details.code == 200){\r\n\r\n        let price:number[]=[];\r\n        let time_stamp:string[] = [];\r\n\r\n        // console.log(coin_json)\r\n        for (let data_coin of details.data.predicted){\r\n\r\n          let date = new Date(data_coin.ds)\r\n          let date_final:string = formatDate(date, 'yyyy/MM/dd', 'en');\r\n          price.push(data_coin.y)\r\n          time_stamp.push(date_final)\r\n        }\r\n        this.lineChartData = [\r\n          {data:price, label:`${coinName} Predicted Price`}\r\n        ];\r\n        this.lineChartLabels = time_stamp;\r\n\r\n        // let PastPrice:any = []\r\n        // let PredictedPrice:any = []\r\n        // if(details.data.data[0]){\r\n        //   // const Past = details.data.data[0].data.timeseries\r\n        //   const Future = details.data.data[0].data.predicted\r\n        //   // for (let i = 0; i < Past.length; i++) {\r\n        //   //   PastPrice.push([Past[i].ds,Past[i].y])\r\n        //   // }\r\n        //   for (let i = 0; i < Future.length; i++) {\r\n        //     PredictedPrice.push([Future[i].ds,Future[i].y])\r\n        //   }\r\n        // }\r\n\r\n        // this.GraphData = {\r\n        //   chart: {\r\n        //     backgroundColor: \"#3b4148\",\r\n        //   },\r\n        //   rangeSelector: {\r\n        //     buttonTheme: { // styles for the buttons\r\n        //       fill: 'none',\r\n        //       stroke: 'none',\r\n        //       'stroke-width': 0,\r\n        //       r: 8,\r\n        //       style: {\r\n        //           color: 'white',\r\n        //           fontWeight: 'bold'\r\n        //       },\r\n        //       states: {\r\n        //           hover: {\r\n        //               fill: 'white',\r\n        //               style: {\r\n        //                   color: 'black'\r\n        //               }\r\n        //           },\r\n        //           select: {\r\n        //               fill: 'white',\r\n        //               style: {\r\n        //                   color: 'black'\r\n        //               }\r\n        //           }\r\n        //       }\r\n        //   },\r\n        //   inputStyle: {\r\n        //       color: 'white',\r\n        //       fontWeight: 'bold',\r\n        //       states:{\r\n        //           select:{\r\n        //               color: 'black',\r\n        //           }\r\n        //       }\r\n        //   },\r\n        //   labelStyle: {\r\n        //       color: 'white',\r\n        //       fontWeight: 'bold',\r\n        //   }\r\n        //   },\r\n        //   title: {\r\n        //     text: \"Coin Past and Predicted Price\",\r\n        //     style: {\r\n        //       color: '#fff',\r\n        //     }\r\n        //   },\r\n        //   yAxis: {\r\n        //       title: {\r\n        //           text: ''\r\n        //       },\r\n        //       gridLineColor: 'gray',\r\n        //       labels: {\r\n        //         style: {\r\n        //             color: 'white'\r\n        //         }\r\n        //     }\r\n        //   },\r\n\r\n        //   series: [\r\n        //     {\r\n        //       type: \"line\",\r\n        //       name: \"Past Price\",\r\n        //       data: PastPrice,\r\n        //       color: '#DDDF00',\r\n        //     },\r\n\r\n        //     {\r\n        //       type: \"line\",\r\n        //       name: \"Predicted Price\",\r\n        //       data: PredictedPrice,\r\n        //       color: '#ff0000'\r\n        //     }\r\n        //   ]\r\n        // }\r\n\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  constructor(private contractService: ContractService,\r\n    private http : HttpClient\r\n\r\n  ) {\r\n    this.page_number = 1;\r\n\r\n  }\r\n\r\n  // signal Trading function\r\n  coinListTrading(trade_coin:any){\r\n    let final_coin_symbol = trade_coin.toUpperCase()\r\n    // console.log(final_coin_symbol)\r\n    let headers_trading = new HttpHeaders();\r\n    let params_trading = new HttpParams()\r\n    .set(\"fsym\", final_coin_symbol)\r\n    .set(\"api_key\", \"d00aa50b839f504c38e611fe15f168cb3f0361e4b192efb98e90dfc303acea7b\")\r\n    this.http.get(\"https://min-api.cryptocompare.com/data/tradingsignals/intotheblock/latest\", {headers:headers_trading, params:params_trading, responseType: 'text'}).toPromise().then(res_trading => {\r\n      let data_json_trading = JSON.parse( res_trading )\r\n\r\n      if (data_json_trading.Response!=\"Error\")\r\n      {\r\n        this.doughnutChartData = [data_json_trading.Data.inOutVar.score, data_json_trading.Data.largetxsVar.score, data_json_trading.Data.addressesNetGrowth.score,data_json_trading.Data.concentrationVar.score]\r\n        this.ai_decision_1 = data_json_trading.Data.inOutVar.sentiment\r\n        this.ai_decision_2 = data_json_trading.Data.largetxsVar.sentiment\r\n        this.ai_decision_3 = data_json_trading.Data.addressesNetGrowth.sentiment\r\n        this.ai_decision_4 = data_json_trading.Data.concentrationVar.sentiment\r\n\r\n        this.success_response = data_json_trading.Response + \" \" + data_json_trading.Message\r\n\r\n      }\r\n      else{\r\n        this.doughnutChartData = []\r\n        this.ai_decision_1 = \"\"\r\n        this.ai_decision_2 = \"\"\r\n        this.ai_decision_3 = \"\"\r\n        this.ai_decision_4 = \"\"\r\n\r\n        this.success_response = data_json_trading.Response + \" \" + data_json_trading.Message\r\n\r\n\r\n      }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    })\r\n\r\n  }\r\n\r\n// f_address:string;\r\nallowed_user:boolean = false;\r\nstaker_fuction(){\r\n  let lcladdress:string='';\r\n    if (window.ethereum) {\r\n      let web3 = new Web3(window.ethereum);\r\n\r\n      try {\r\n         window.ethereum.enable().then( () => {\r\n              // User has allowed account access to DApp...\r\n              let promise = web3.eth.getAccounts(function (error: any, accounts: any[]) {\r\n\r\n                  console.log(accounts[0], 'current account on init');\r\n                  lcladdress = accounts[0]\r\n                  // console.log(lcladdress)\r\n                  return accounts[0]\r\n              });\r\n\r\n\r\n              promise.then( async (account: any) => {\r\n                  account = account;\r\n                  this.address = account[0];\r\n\r\n                  // console.log(this.address)\r\n\r\n                   const stakingTokenContract = await  this.contractService.getContractObject(StakingToken);\r\n                    if (stakingTokenContract) {\r\n                    const stakeCounts = await stakingTokenContract.methods.isStaker(this.address).call();\r\n                    // console.log(stakeCounts)\r\n                    this.allowed_user= stakeCounts;\r\n                    this.CustomOnInit();\r\n                    }\r\n              });\r\n          });\r\n      } catch (e) {\r\n          console.log('Please Connect MetaMsk !');\r\n          // User has denied account access to DApp...\r\n      }\r\n\r\n\r\n  } else {\r\n      console.log('You have to install MetaMask !');\r\n\r\n  }\r\n  }\r\n\r\n  giveAccess(){\r\n    if(this.allowed_user){\r\n      this.allowed_user = false\r\n    }else{\r\n      this.allowed_user = true\r\n      this.CustomOnInit();\r\n    }\r\n  }\r\n\r\n  CustomOnInit(){\r\n    this.getCoinPrediction('bitcoin')\r\n    // get coin names for dropdown options\r\n    this.http.get('https://api.ethama.finance/get-coin-name').subscribe(Response =>{\r\n      // console.log(Response);\r\n      let resSTR = JSON.stringify(Response);\r\n      let resJSON = JSON.parse(resSTR);\r\n      this.coins_list_api=resJSON.data.data;\r\n\r\n      // console.log(this.coins_list_api);\r\n  })\r\n\r\n\r\n    // all coins api call\r\n  //   this.http.get('https://api.ethama.finance/get-all-coin?page='+this.page_number+'&per_page=10').subscribe(Response =>{\r\n  //     // console.log(Response);\r\n  //     let resSTR = JSON.stringify(Response);\r\n  //     let resJSON = JSON.parse(resSTR);\r\n  //     this.data_coins=resJSON.data.data;\r\n  //     // console.log(data_coins);\r\n  // })\r\n\r\n// Trending coins api call\r\n  this.http.get('https://api.ethama.finance/get-trending-coin').subscribe(Response =>{\r\n      // console.log(Response);\r\n      let trendResSTR = JSON.stringify(Response);\r\n      let trendResJSON = JSON.parse(trendResSTR);\r\n      this.trend_coins=trendResJSON.data;\r\n      // console.log(this.trend_coins);\r\n  })\r\n\r\n// intial coin prediction graph\r\nlet headers = new HttpHeaders();\r\nlet params = new HttpParams()\r\n.set(\"coin\", \"bitcoin\")\r\nthis.http.get('https://api.ethama.finance/get-coin-predict',{headers: headers, params: params, responseType: 'text' }).toPromise().then(Response =>{\r\n      // console.log(Response);\r\n\r\n\r\n      let coin_json = JSON.parse(Response);\r\n      let price:number[]=[];\r\n      let time_stamp:string[] = [];\r\n\r\n      // last change date display\r\n      this.last_change_date = coin_json.data.last_updated_date\r\n      // console.log(this.last_change_date)\r\n\r\n      // console.log(coin_json)\r\n      for (let data_coin of coin_json.data.predicted){\r\n\r\n        let date = new Date(data_coin.ds)\r\n        let date_final:string = formatDate(date, 'yyyy/MM/dd', 'en');\r\n        price.push(data_coin.y)\r\n        time_stamp.push(date_final)\r\n\r\n\r\n      }\r\n      // let price_past:number[]=[];\r\n      // let coin_timestamp_past:Date[]=[];\r\n\r\n      // for (let data_coin_past of coin_json.data.timeseries){\r\n\r\n      //   let date_past = new Date(data_coin_past.ds)\r\n      //   price_past.push(data_coin_past.y)\r\n      //   coin_timestamp_past.push(date_past)\r\n\r\n      // }\r\n\r\n      // console.log(coin_timestamp_past)\r\n\r\n      this.lineChartData = [\r\n        {data:price, label:\"Predicted Price\"}\r\n    ];\r\n      this.lineChartLabels = time_stamp;\r\n\r\n\r\n      // console.log(this.trend_coins);\r\n  })\r\n\r\n// Trading Signal\r\nlet headers_trading = new HttpHeaders();\r\nlet params_trading = new HttpParams()\r\n.set(\"fsym\", \"BTC\")\r\n.set(\"api_key\", \"d00aa50b839f504c38e611fe15f168cb3f0361e4b192efb98e90dfc303acea7b\")\r\nthis.http.get(\"https://min-api.cryptocompare.com/data/tradingsignals/intotheblock/latest\", {headers:headers_trading, params:params_trading, responseType: 'text'}).toPromise().then(res_trading => {\r\n  let data_json_trading = JSON.parse( res_trading )\r\n\r\n\r\n  if (data_json_trading.Response!=\"Error\")\r\n  {\r\n    this.doughnutChartData = [data_json_trading.Data.inOutVar.score, data_json_trading.Data.largetxsVar.score, data_json_trading.Data.addressesNetGrowth.score,data_json_trading.Data.concentrationVar.score]\r\n    this.ai_decision_1 = data_json_trading.Data.inOutVar.sentiment\r\n    this.ai_decision_2 = data_json_trading.Data.largetxsVar.sentiment\r\n    this.ai_decision_3 = data_json_trading.Data.addressesNetGrowth.sentiment\r\n    this.ai_decision_4 = data_json_trading.Data.concentrationVar.sentiment\r\n\r\n    this.success_response = data_json_trading.Response + \" \" + data_json_trading.Message\r\n\r\n  }\r\n  else{\r\n    this.doughnutChartData = []\r\n    this.ai_decision_1 = \"\"\r\n    this.ai_decision_2 = \"\"\r\n    this.ai_decision_3 = \"\"\r\n    this.ai_decision_4 = \"\"\r\n\r\n    this.success_response = data_json_trading.Response + \" \" + data_json_trading.Message\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n})\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // this.staker_fuction();\r\n    // this.CustomOnInit();\r\n    }\r\n\r\n  // function for pre_page pagination\r\n  pre_page(){\r\n    // all coins api call\r\n    if (this.page_number >1)\r\n    {\r\n      this.page_number -= 1\r\n      this.http.get('https://api.ethama.finance/get-all-coin?page='+this.page_number+'&per_page=10').subscribe(Response =>{\r\n      // console.log(Response);\r\n      let resSTR = JSON.stringify(Response);\r\n      let resJSON = JSON.parse(resSTR);\r\n      this.data_coins=resJSON.data.data;\r\n      // console.log(data_coins);\r\n  })\r\n    }\r\n    else{\r\n      this.http.get('https://api.ethama.finance/get-all-coin?page='+this.page_number+'&per_page=10').subscribe(Response =>{\r\n      // console.log(Response);\r\n      let resSTR = JSON.stringify(Response);\r\n      let resJSON = JSON.parse(resSTR);\r\n      this.data_coins=resJSON.data.data;\r\n      // console.log(data_coins);\r\n  })\r\n\r\n    }\r\n\r\n  }\r\n // function for next_page pagination\r\n next_page(){\r\n  // all coins api call\r\n  if (this.page_number <=900)\r\n  {\r\n    this.page_number += 1\r\n    this.http.get('https://api.ethama.finance/get-all-coin?page='+this.page_number+'&per_page=10').subscribe(Response =>{\r\n    // console.log(Response);\r\n    let resSTR = JSON.stringify(Response);\r\n    let resJSON = JSON.parse(resSTR);\r\n    this.data_coins=resJSON.data.data;\r\n    // console.log(data_coins);\r\n})\r\n  }\r\n  else{\r\n    this.http.get('https://api.ethama.finance/get-all-coin?page='+this.page_number+'&per_page=10').subscribe(Response =>{\r\n    // console.log(Response);\r\n    let resSTR = JSON.stringify(Response);\r\n    let resJSON = JSON.parse(resSTR);\r\n    this.data_coins=resJSON.data.data;\r\n    // console.log(data_coins);\r\n})\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\n  // on submit index api\r\n  onSubmit(form: NgForm) {\r\n    // loading stop\r\n    this.ld = 1;\r\n    // console.warn('your request has been submitted');\r\n    // console.log(form.value);\r\n    // {inv_type: true, time_wind: true, : 'w'}\r\n    let form_json = form.value;\r\n    if (form_json.inv_type == true)\r\n    {\r\n      this.inv_type = \"1\"\r\n    }\r\n    else{\r\n      this.inv_type = \"0\"\r\n    }\r\n    if (form_json.time_wind == true)\r\n    {\r\n      this.time_win = \"1\"\r\n    }\r\n    else{\r\n      this.time_win = \"0\"\r\n    }\r\n    this.time_frame = form_json.exampleRadios\r\n    let headers = new HttpHeaders();\r\n    let params = new HttpParams()\r\n    .set(\"min_cap\", \"500000\")\r\n    .set(\"max_cap\", \"947945765974\")\r\n    .set(\"inv_type\", this.inv_type)\r\n    .set(\"limit\", \"10\")\r\n    .set(\"time_frame\", this.time_frame)\r\n    .set(\"time_win\", this.time_win); //Create new HttpParams\r\n    this.http.get(this.url, {headers: headers, params: params, responseType: 'text' }).toPromise().then(data => {\r\n      let data_json = JSON.parse( data )\r\n      // let CoinsData:any = [];\r\n      // console.log(data_json)\r\n      let coin_cap:any = [];\r\n      let coin_name:any = [];\r\n      for (let coin_data of data_json.data.data) {\r\n        coin_cap.push(coin_data.market_cap)\r\n        coin_name.push(coin_data.id)\r\n        // CoinsData.push({name: coin_data.id,y: coin_data.market_cap_rank});\r\n      }\r\n      // console.log(CoinsData)\r\n      this.pieChartData = coin_cap;\r\n      this.pieChartLabels = coin_name;\r\n      // console.log(this.pieChartLabels);\r\n      // console.log(this.pieChartData);\r\n      this.loadData = false\r\n      // this.pieChart = {\r\n      //   chart: {\r\n      //       type: 'pie',\r\n      //       backgroundColor: \"#3b4148\",\r\n      //   },\r\n      //   title: {\r\n      //       text: \"Coin MarketCaps\",\r\n      //       style: {\r\n      //         color: '#fff',\r\n      //       }\r\n      //   },\r\n      //   tooltip: {\r\n      //       pointFormat: '{series.name}: {point.percentage:.1f}%'\r\n      //   },\r\n      //   accessibility: {\r\n      //       point: {\r\n      //           valueSuffix: '%'\r\n      //       }\r\n      //   },\r\n      //   plotOptions: {\r\n      //       pie: {\r\n      //           allowPointSelect: true,\r\n      //           cursor: 'pointer',\r\n      //           dataLabels: {\r\n      //               enabled: true,\r\n      //               format: '{point.name}: {point.percentage:.1f} %'\r\n      //           }\r\n      //       }\r\n      //   },\r\n      //   series: [{\r\n      //       name: 'Market Cap',\r\n      //       colorByPoint: true,\r\n      //       data: CoinsData\r\n      //   }]\r\n      // }\r\n    });\r\n    setTimeout(()=>{                           // <<<---using ()=> syntax\r\n      this.ld = 0;\r\n    }, 3000);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ChainId, Fetcher, Route, WETH } from '@uniswap/sdk';\r\nimport { SpinnerService } from '../helper/spinner/spinner.service';\r\nimport { ExchangeRateData } from '../models/exchage-rate-data';\r\nimport { OtherTokenBalanceData } from '../models/other-token-balance-data';\r\nimport { environment as env } from './../../environments/environment';\r\nimport { ContractService } from './contract.service';\r\nimport { LocalDataUpdateService } from './local-data-update.service';\r\n\r\ndeclare let Web3: any;\r\ndeclare let window: any;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class MinAbiDataContractService {\r\n\r\n    minABI = [\r\n        // balanceOf\r\n        {\r\n            constant: true,\r\n            inputs: [{ name: '_owner', type: 'address' }],\r\n            name: 'balanceOf',\r\n            outputs: [{ name: 'balance', type: 'uint256' }],\r\n            type: 'function'\r\n        },\r\n        // decimals\r\n        {\r\n            constant: true,\r\n            inputs: [],\r\n            name: 'decimals',\r\n            outputs: [{ name: '', type: 'uint8' }],\r\n            type: 'function'\r\n        },\r\n        // approve\r\n        {\r\n            constant: true,\r\n            inputs: [{ name: '', type: 'address' }, { name: '', type: 'uint256' }],\r\n            name: 'approve',\r\n            outputs: [{ name: '', type: 'bool' }],\r\n            type: 'function'\r\n        }\r\n    ];\r\n\r\n    chainId = ChainId.ROPSTEN;\r\n\r\n    constructor(private contractService: ContractService,\r\n                private localDataUpdateService: LocalDataUpdateService,\r\n                private spinnerService: SpinnerService) { }\r\n\r\n    setChainId() {\r\n        this.chainId = env.production ? ChainId.MAINNET : ChainId.ROPSTEN;\r\n    }\r\n\r\n    async getTokenExchangeRate(tokenAddress: string) {\r\n        try {\r\n            this.spinnerService.show();\r\n            const otherCoin = await Fetcher.fetchTokenData(this.chainId, tokenAddress);\r\n            const weth = WETH[this.chainId];\r\n            const pair = await Fetcher.fetchPairData(otherCoin, weth);\r\n            const route = new Route([pair], weth);\r\n            const regularRate = +route.midPrice.toSignificant(6);\r\n            const reverseRate = +route.midPrice.invert().toSignificant(6);\r\n            const reverseRateWithoutDecimal = this.contractService.convertAmountInSmallUnit(reverseRate);\r\n\r\n            const exchangeRateData: ExchangeRateData = {\r\n                regularRate,\r\n                reverseRate,\r\n                reverseRateWithoutDecimal\r\n            };\r\n            this.spinnerService.hide();\r\n            return exchangeRateData;\r\n        } catch (ex) { }\r\n        this.spinnerService.hide();\r\n        return null;\r\n    }\r\n\r\n    async getOtherTokenBalance(tokenAddress: string) {\r\n        try {\r\n            window.web3 = new Web3(window.ethereum);\r\n            const web3 = window.web3;\r\n            if (typeof (web3) != 'undefined' && web3 != null) {\r\n                const minABIContract = new web3.eth.Contract(this.minABI, tokenAddress);\r\n                const tokenLargeBalance = await minABIContract.methods.balanceOf(this.contractService.accountNo).call();\r\n                const decimalPlaces = await minABIContract.methods.decimals().call();\r\n                const tokenShortBalance = tokenLargeBalance / (10 ** decimalPlaces);\r\n                const exchangeRateData = await this.getTokenExchangeRate(tokenAddress);\r\n\r\n                const otherTokenBalanceData: OtherTokenBalanceData = {\r\n                    tokenLargeBalance: +tokenLargeBalance,\r\n                    decimalPlaces: +decimalPlaces,\r\n                    tokenShortBalance,\r\n                    regularRate: exchangeRateData ? exchangeRateData.regularRate : 1,\r\n                    reverseRate: exchangeRateData ? exchangeRateData.reverseRate : 1\r\n                };\r\n                return otherTokenBalanceData;\r\n            }\r\n        } catch (ex) { }\r\n        return null;\r\n    }\r\n\r\n    async getTransactionApproval(tokenAddress: string, transactionAmount: string) {\r\n        try {\r\n            window.web3 = new Web3(window.ethereum);\r\n            const web3 = window.web3;\r\n            // Get ERC20 Token contract instance\r\n            if (typeof (web3) != 'undefined' && web3 != null) {\r\n                const minABIContract = new web3.eth.Contract(this.minABI, tokenAddress);\r\n                this.spinnerService.show();\r\n                minABIContract.methods.approve(this.contractService.liquidityAccountNo, transactionAmount)\r\n                    .send({ from: this.contractService.accountNo })\r\n                    .then((response: any) => {\r\n                        // console.log(\"transaction successful.\", response);\r\n                        this.localDataUpdateService.updateTransactionApproved(true);\r\n                        this.spinnerService.hide();\r\n                    })\r\n                    .catch((error: any) => {\r\n                        // console.log(\"error\", error);\r\n                        this.spinnerService.hide();\r\n                    });\r\n            }\r\n        } catch (ex) { }\r\n        return null;\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\r\nimport * as Highcharts from \"highcharts/highstock\";\r\n\r\ndeclare var require: any;\r\nconst wordCloud = require('highcharts/modules/wordcloud.js');\r\nwordCloud(Highcharts);\r\n\r\n@Component({\r\n  selector: 'app-coin-tweets',\r\n  templateUrl: './coin-tweets.component.html',\r\n  styleUrls: ['./coin-tweets.component.scss']\r\n})\r\nexport class CoinTweetsComponent implements OnInit {\r\n\r\n  highcharts = Highcharts;\r\n  UsersTweets:any = []\r\n  Indexes:any = []\r\n  coins_list_api:any = []\r\n  currentProduct:string = 'bitcoin'\r\n  UsersHashtags: any = {\r\n    chart: {\r\n      backgroundColor: \"#3b4148\",\r\n    },\r\n    title: {\r\n    text: '',\r\n    style: {\r\n        color: '#ffffff',\r\n    }\r\n    },\r\n    series: [{\r\n        type: 'wordcloud',\r\n        data: [],\r\n        name: 'Occurrences'\r\n    }],\r\n  }\r\n  TrendingWords: any = {\r\n    chart: {\r\n      backgroundColor: \"#3b4148\",\r\n      },\r\n      title: {\r\n      text: '',\r\n      style: {\r\n          color: '#ffffff',\r\n      }\r\n      },\r\n      series: [{\r\n          type: 'wordcloud',\r\n          data: [],\r\n          name: 'Occurrences'\r\n      }],\r\n  }\r\n\r\n\r\n  getCoinTweets(coinName:any){\r\n    let headers = new HttpHeaders();\r\n    let params = new HttpParams().set(\"coin\", coinName)\r\n    this.http.get(`https://api.ethama.finance/get-sentiment-coin?coin=${coinName}`, {\r\n      headers: headers,\r\n      params: params,\r\n      responseType: 'text'\r\n    }).toPromise().then(Response => {\r\n      let details = JSON.parse(Response);\r\n      if(details.code == 200){\r\n        var tweets:any = details.data.data.tweets;\r\n        const hashtags:any = details.data.data.hashtags;\r\n        const words:any = details.data.data.wordfrequency;\r\n        tweets = tweets.sort((a:any, b:any) => (a.followers < b.followers) ? 1 : -1)\r\n        var index:any = [];\r\n        var i = 0;\r\n        tweets.map((tweet:any) => { \r\n            index.push(i)\r\n            i=i+1\r\n            return null;\r\n        })\r\n        var list:any = [];\r\n        var bigcoin:any = false;\r\n\r\n        words.map((word:any) => {\r\n            if(word[1]>50){\r\n                bigcoin = true;\r\n            }\r\n            return null;\r\n        })\r\n\r\n        words.map((word:any) => {\r\n            if(bigcoin){\r\n                if(word[1]< 20){\r\n                    list.push({name: word[0], weight: word[1]+20})\r\n                }else{\r\n                    list.push({name: word[0], weight: word[1]})\r\n                }\r\n            }else{\r\n                if(word[1]< 20){\r\n                    list.push({name: word[0], weight: word[1]+10})\r\n                }else{\r\n                    list.push({name: word[0], weight: word[1]})\r\n                }\r\n            }\r\n            return null;\r\n        })\r\n        var hashtagsList:any = [];\r\n        hashtags.map((tag:any) => {\r\n            const val = Math.random() * (5 - 1) + 1\r\n            hashtagsList.push({name: tag, weight: val});\r\n            return null;\r\n        })\r\n\r\n        this.UsersTweets = tweets\r\n        this.UsersHashtags = {\r\n          chart: {\r\n            backgroundColor: \"#3b4148\",\r\n          },\r\n          title: {\r\n          text: '',\r\n          style: {\r\n              color: '#ffffff',\r\n          }\r\n          },\r\n          series: [{\r\n              type: 'wordcloud',\r\n              data: hashtagsList,\r\n              name: 'Occurrences'\r\n          }],\r\n        }\r\n\r\n        this.TrendingWords = {\r\n          chart: {\r\n            backgroundColor: \"#3b4148\",\r\n            },\r\n            title: {\r\n            text: '',\r\n            style: {\r\n                color: '#ffffff',\r\n            }\r\n            },\r\n            series: [{\r\n                type: 'wordcloud',\r\n                data: list,\r\n                name: 'Occurrences'\r\n            }],\r\n        }\r\n        this.Indexes = index\r\n      }\r\n    })\r\n  }\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getCoinTweets(\"bitcoin\")\r\n    this.http.get('https://api.ethama.finance/get-coin-name').subscribe(Response => {\r\n      // console.log(Response);\r\n      let resSTR = JSON.stringify(Response);\r\n      let resJSON = JSON.parse(resSTR);\r\n      this.coins_list_api = resJSON.data.data;\r\n\r\n      // console.log(this.coins_list_api);\r\n    })\r\n  }\r\n\r\n}\r\n","<div class=\"coin-tweets-div\">\r\n    <h2 for=\"ice-cream-choice\" class=\"mr-3\">Choose Coin:</h2>\r\n    <input class=\"inputcoinsearch mb-3 \" type=\"text\" list=\"productList\" name=\"product\" [(ngModel)]='currentProduct'\r\n      (change)=\"getCoinTweets(currentProduct)\" />\r\n\r\n    <datalist id=\"productList\">\r\n      <option *ngFor=\"let data_coin_name of coins_list_api;\" [value]=\"data_coin_name.id\">\r\n        {{data_coin_name.id}} ({{data_coin_name.symbol}})\r\n      </option>\r\n    </datalist>\r\n    <div class=\"row \">\r\n        <!-- introduction part -->\r\n        <div class=\"col-lg-12 card-outer-div\" style=\"margin-top: 59px;\">\r\n        \r\n            <h1 class=\"headingAi\">Introduction AI Platform</h1>\r\n            <div class=\"main-div card-div\" style=\"text-align: justify;\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-lg-12\">\r\n                    <h1> How to use Grise Token AI-Indices</h1>\r\n                    </div>\r\n                    <div class=\"col-lg-12 my-3\">\r\n                    <h4 class=\"text-danger\">NOTE: Indices Rebalancing Times Are an Approximation.</h4>\r\n                    </div>\r\n                    <div class=\"col-lg-12 my-3\">\r\n                        <div class=\"info-text\">\r\n                        Sometimes we may update the indices when we make important updates or changes to technical details and\r\n                        calculations for an index. For example, we recently added a requirement for all indices to only hold\r\n                        cryptocurrencies with a daily trading volume greater than $500k. Each of these technical updates requires us\r\n                        to re-do the index. This will apply with future technical updates to indices.\r\n                            Furthermore, we have recently add features related to trading signal. This features is based on Deep Learning by which our stacker can take smart decision to avoid loss in trading. In AI-Price prediction algorithms we can see the future expected price up-to two months and take fast decision to in-out the market.\r\n                        As a result, the days and times are an approximation and indices may take 1-4 hours to fully update or on\r\n                        occasion be rebalanced more than their time-horizon to make important technical updates.\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-lg-12 my-3\">\r\n                    <h4 class=\"text-danger\">DISCLAIMER\r\n                    Indices of crypto investments, like all types of investment-related information, are subject to risk; they can\r\n                    go down as well as up; and relying on such information can lead to losses as well as gains. Information about\r\n                    past performance is not necessarily indicative of future performance.\r\n                    </h4>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class='row'>\r\n        <div class=\"col-12 col-lg-7 card-outer-div\">\r\n            <h1 class=\"headingAi\">Coin Tweets</h1>\r\n            <div class='card-div tweets_div'>\r\n                <div *ngFor=\"let i of Indexes\">\r\n                    <div class=\"tweet_head\">\r\n                        <img class=\"tweet_img\" src={{UsersTweets[i].profile_image}} alt=\"profile_img\"/>\r\n                        <div class=\"tweet_head_info\">\r\n                            <span class=\"tweet_user_name\">{{UsersTweets[i].user}}</span>\r\n                            <span class=\"tweet_user_followers text-muted\">{{UsersTweets[i].followers}} followers</span>\r\n                        </div>\r\n                    </div>\r\n                    <p class=\"user_tweet\">{{UsersTweets[i].tweet}}</p>\r\n                    <hr/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-12 col-lg-5 card-outer-div\">\r\n            <h1 class=\"headingAi\">Coin Trending Hashtags</h1>\r\n            <div class='card-div'>\r\n                <highcharts-chart class=\"custom-chart-styles\"\r\n                [Highcharts]=\"highcharts\"\r\n                [options]=\"UsersHashtags\">\r\n                </highcharts-chart>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"card-outer-div\">\r\n        <h1 class=\"headingAi\">Coin Trending Words</h1>\r\n        <div class=\"card-div\">\r\n            <highcharts-chart class=\"custom-chart-styles\"\r\n                [Highcharts]=\"highcharts\"\r\n                [options]=\"TrendingWords\">\r\n            </highcharts-chart>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.scss']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n  marketCapValue: number;\r\n  totalGriseSupply: any;\r\n  priceData: any;\r\n  griseTokenContractService: any;\r\n  graphDataService: any;\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n  getTokenData() {\r\n    this.griseTokenContractService.getTotalSupply().then((totalSupply: any) => {\r\n      this.totalGriseSupply = totalSupply;\r\n      this.calcMarketCap();\r\n    });\r\n    this.graphDataService.getTableData().subscribe((priceData: any) => {\r\n      this.priceData = priceData;\r\n      this.calcMarketCap();\r\n    });\r\n  }\r\n\r\n  calcMarketCap() {\r\n    this.marketCapValue = this.totalGriseSupply * this.priceData?.priceUSD;\r\n  }\r\n}\r\n","<div class=\"container-fluid bg-color\">\r\n\r\n  <div class=\"row content\">\r\n\r\n    <div class=\"col-lg-3 dashboard-first\">\r\n\r\n      <div style=\"display: grid\">\r\n        <div class=\"dashboard_button\">\r\n          <button type=\"button\" routerLink=\"personal\" queryParamsHandling=\"merge\" routerLinkActive=\"active-tab\"\r\n            class=\"btn btn-primary tab-button pr_button\">Personal</button>\r\n        </div>\r\n        <!-- <div class=\"\">\r\n          <button type=\"button\" routerLink=\"liquidity\" queryParamsHandling=\"merge\"\r\n            class=\"btn btn-primary tab-button\">Liquidity</button>\r\n        </div>\r\n        <div class=\"\">\r\n          <button type=\"button\" routerLink=\"refundhistory\" queryParamsHandling=\"merge\"\r\n            class=\"btn btn-primary tab-button \">Refund History</button>\r\n        </div>\r\n        <div class=\"\">\r\n          <button type=\"button\" routerLink=\"referrals\" queryParamsHandling=\"merge\"\r\n            class=\"btn btn-primary tab-button\">Referrals</button>\r\n        </div> -->\r\n        <div class=\"\">\r\n          <!-- <button type=\"button\" routerLink=\"reward\" queryParamsHandling=\"merge\" routerLinkActive=\"active-tab\"\r\n            class=\"btn btn-primary tab-button\">Reward</button> -->\r\n        </div>\r\n        <div class=\"white-color\">\r\n          <!-- <p>\r\n            Grise Market Cap\r\n            <span>\r\n              {{ marketCapValue | currency: \"USD\":\"symbol\":\"1.5-5\" }}\r\n            </span>\r\n          </p>\r\n          <p>\r\n            Grise Price\r\n            <span>\r\n              {{ priceData?.priceUSD | currency: \"USD\":\"symbol\":\"1.5-5\" }}\r\n            </span>\r\n          </p>\r\n          <p>\r\n            Grise Total Supply\r\n            <span>\r\n              {{ totalGriseSupply | number: \"1.0-0\" }}\r\n            </span>\r\n          </p> -->\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n    <div class=\"col-lg-12 dashboard-second\">\r\n\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-coin-market',\r\n  templateUrl: './coin-market.component.html',\r\n  styleUrls: ['./coin-market.component.scss']\r\n})\r\nexport class CoinMarketComponent implements OnInit {\r\n\r\n  green:any = {  \r\n    \"background-color\": \"green\",\r\n    \"border-radius\": \"50%\",\r\n    \"width\": \"50px\",\r\n    \"height\": \"50px\" \r\n  }  \r\n  red:any = {  \r\n    \"background-color\": \"red\",\r\n    \"border-radius\": \"50%\",\r\n    \"width\": \"50px\",\r\n    \"height\": \"50px\"   \r\n  }  \r\n\r\n  Markets:any = []\r\n  Exchanges:any = []\r\n  exchangeName:string = \"binance\"\r\n\r\n  getCoinMarket(coinName:any){\r\n    let headers = new HttpHeaders();\r\n    let params = new HttpParams().set(\"exchange\", coinName)\r\n    this.http.get(`https://api.ethama.finance/get-detail-exchange?exchange=${coinName}`, {\r\n      headers: headers,\r\n      params: params,\r\n      responseType: 'text'\r\n    }).toPromise().then(Response => {\r\n      let details = JSON.parse(Response);\r\n      if(details.code == 200){\r\n        this.Markets = details.data.data\r\n      }\r\n    })\r\n  }\r\n\r\n  getExchanges(){\r\n    let headers = new HttpHeaders();\r\n    let params = new HttpParams()\r\n    this.http.get(`https://api.ethama.finance/get-top-exchange`, {\r\n      headers: headers,\r\n      params: params,\r\n      responseType: 'text'\r\n    }).toPromise().then(Response => {\r\n      let details = JSON.parse(Response);\r\n      if(details.code == 200){\r\n        this.Exchanges = details.data.data\r\n      }\r\n    })\r\n  }\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getCoinMarket(\"binance\")\r\n    this.getExchanges()\r\n  }\r\n\r\n}\r\n","<div class=\"coin-market-div\">\r\n    <div class=\"row \">\r\n        <!-- introduction part -->\r\n        <div class=\"col-lg-12 card-outer-div\" style=\"margin-top: 59px;\">\r\n        \r\n            <h1 class=\"headingAi\">Introduction AI Platform</h1>\r\n            <div class=\"main-div card-div\" style=\"text-align: justify;\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-lg-12\">\r\n                    <h1> How to use Grise Token AI-Indices</h1>\r\n                    </div>\r\n                    <div class=\"col-lg-12 my-3\">\r\n                    <h4 class=\"text-danger\">NOTE: Indices Rebalancing Times Are an Approximation.</h4>\r\n                    </div>\r\n                    <div class=\"col-lg-12 my-3\">\r\n                        <div class=\"info-text\">\r\n                        Sometimes we may update the indices when we make important updates or changes to technical details and\r\n                        calculations for an index. For example, we recently added a requirement for all indices to only hold\r\n                        cryptocurrencies with a daily trading volume greater than $500k. Each of these technical updates requires us\r\n                        to re-do the index. This will apply with future technical updates to indices.\r\n                            Furthermore, we have recently add features related to trading signal. This features is based on Deep Learning by which our stacker can take smart decision to avoid loss in trading. In AI-Price prediction algorithms we can see the future expected price up-to two months and take fast decision to in-out the market.\r\n                        As a result, the days and times are an approximation and indices may take 1-4 hours to fully update or on\r\n                        occasion be rebalanced more than their time-horizon to make important technical updates.\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-lg-12 my-3\">\r\n                    <h4 class=\"text-danger\">DISCLAIMER\r\n                    Indices of crypto investments, like all types of investment-related information, are subject to risk; they can\r\n                    go down as well as up; and relying on such information can lead to losses as well as gains. Information about\r\n                    past performance is not necessarily indicative of future performance.\r\n                    </h4>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"card-outer-div\">\r\n        <h1 class=\"headingAi\">Coin Markets</h1>\r\n        <div class=\"card-div\">\r\n            <span for=\"ice-cream-choice\" class=\"mr-3 select-text\">Choose Exchnage: </span>\r\n            <input class=\"inputcoinsearch mb-3 \" type=\"text\" list=\"productList\" name=\"product\" [(ngModel)]='exchangeName'\r\n            (change)=\"getCoinMarket(exchangeName)\" />\r\n\r\n            <datalist id=\"productList\">\r\n                <option *ngFor=\"let exchange of Exchanges;\" [value]=\"exchange.id\">\r\n                    {{exchange.id}} ({{exchange.name}})\r\n                </option>\r\n            </datalist>\r\n            <table class=\"table table-bordered table-hover table-responsive-sm table-responsive-md table-responsive-lg table-responsive-xl\">\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">Exchange</th>\r\n                        <th scope=\"col\">Pair</th>\r\n                        <th scope=\"col\">Price</th>\r\n                        <th scope=\"col\">Spread</th>\r\n                        <th scope=\"col\">Volume</th>\r\n                        <th scope=\"col\">Trust</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr *ngFor=\"let row of Markets\">\r\n                        <td>{{exchangeName}}</td>\r\n                        <td>{{row.pair}}</td>\r\n                        <td>{{row.price}}</td>\r\n                        <td>{{row.bid_ask_spread_percentage}}</td>\r\n                        <td>{{row.volume}}</td>\r\n                        <td class=\"trust-score\"><p [ngStyle]=\"row.trust_score=='green'?green:red\"></p></td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient} from '@angular/common/http';\r\nimport * as Highcharts from \"highcharts/highstock\";\r\nimport Indicators from \"highcharts/indicators/indicators-all.js\";\r\nimport DragPanes from \"highcharts/modules/drag-panes.js\";\r\nimport AnnotationsAdvanced from \"highcharts/modules/annotations-advanced.js\";\r\nimport PriceIndicator from \"highcharts/modules/price-indicator.js\";\r\nimport StockTools from \"highcharts/modules/stock-tools.js\";\r\nimport map from \"highcharts/modules/map\";\r\nconst world = require('@highcharts/map-collection/custom/world.geo.json')\r\n\r\nmap(Highcharts);\r\n\r\nIndicators(Highcharts);\r\nDragPanes(Highcharts);\r\nAnnotationsAdvanced(Highcharts);\r\nPriceIndicator(Highcharts);\r\nStockTools(Highcharts);\r\n\r\n@Component({\r\n  selector: 'app-google-trends',\r\n  templateUrl: './google-trends.component.html',\r\n  styleUrls: ['./google-trends.component.scss']\r\n})\r\nexport class GoogleTrendsComponent implements OnInit {\r\n\r\n  highcharts = Highcharts;\r\n  coins_list_api:any = []\r\n  currentProduct:string = 'bitcoin'\r\n\r\n  GraphData:any = {\r\n    chart: {\r\n      backgroundColor: \"#3b4148\",\r\n    },\r\n    rangeSelector: {\r\n      chart: {\r\n        backgroundColor: \"#3b4148\",\r\n      },\r\n      buttonTheme: { // styles for the buttons\r\n        fill: 'none',\r\n        stroke: 'none',\r\n        'stroke-width': 0,\r\n        r: 8,\r\n        style: {\r\n            color: 'white',\r\n            fontWeight: 'bold'\r\n        },\r\n        states: {\r\n            hover: {\r\n                fill: 'white',\r\n                style: {\r\n                    color: 'black'\r\n                }\r\n            },\r\n            select: {\r\n                fill: 'white',\r\n                style: {\r\n                    color: 'black'\r\n                }\r\n            }\r\n        }\r\n    },\r\n    inputStyle: {\r\n        color: 'white',\r\n        fontWeight: 'bold',\r\n        states:{\r\n            select:{\r\n                color: 'black',\r\n            }\r\n        }\r\n    },\r\n    labelStyle: {\r\n        color: 'white',\r\n        fontWeight: 'bold',\r\n    }\r\n    },\r\n    title: {\r\n      text: \"Interest Over Time\",\r\n      style: {\r\n        color: '#fff',\r\n      }\r\n    },\r\n    yAxis: {\r\n        title: {\r\n            text: ''\r\n        },\r\n        gridLineColor: 'gray',\r\n        labels: {\r\n          style: {\r\n              color: 'white'\r\n          }\r\n      }\r\n    },\r\n    \r\n    series: [\r\n      {\r\n        type: \"line\",\r\n        name: \"Interest Over Time\",\r\n        data: [],\r\n        color: '#DDDF00',\r\n      }\r\n    ]\r\n  }\r\n\r\n  WorldGraph:any = {\r\n    chart: {\r\n      map: world,\r\n      backgroundColor: \"#3b4148\",\r\n    },\r\n    title:{\r\n      text: '',\r\n    },\r\n    mapNavigation: {\r\n        enabled: true,\r\n        buttonOptions: {\r\n            verticalAlign: 'bottom'\r\n        }\r\n    },\r\n    colorAxis: {\r\n        min: 0\r\n    },\r\n    series: [\r\n      {\r\n        data: [],\r\n        color: \"#6226D9\",\r\n        name: ''\r\n      }\r\n    ]\r\n  }\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getGoogleTrend(){\r\n    const body = { 'coinName': this.currentProduct };\r\n    this.http.post('https://api.ethama.finance/get_google_trends', body).subscribe(Response => {\r\n      let resSTR = JSON.stringify(Response);\r\n      let resJSON = JSON.parse(resSTR);\r\n      if(resJSON.code == 200){\r\n        const IOT = resJSON.data.interest_over_time\r\n        const IBR = resJSON.data.interest_by_region\r\n        let InterestOverTime:any = []\r\n        let InterestByRegion:any = []\r\n        for (let i = 0; i < IOT.length; i++) {\r\n          InterestOverTime.push([IOT[i].date,IOT[i].dataValue])\r\n        }\r\n        for (let i = 0; i < IBR.length; i++) {\r\n          InterestByRegion.push([IBR[i].geoCode,IBR[i].dataValue])\r\n        }\r\n        this.GraphData = {\r\n          chart: {\r\n            backgroundColor: \"#3b4148\",\r\n          },\r\n          rangeSelector: {\r\n            chart: {\r\n              backgroundColor: \"#3b4148\",\r\n            },\r\n            buttonTheme: { // styles for the buttons\r\n              fill: 'none',\r\n              stroke: 'none',\r\n              'stroke-width': 0,\r\n              r: 8,\r\n              style: {\r\n                  color: 'white',\r\n                  fontWeight: 'bold'\r\n              },\r\n              states: {\r\n                  hover: {\r\n                      fill: 'white',\r\n                      style: {\r\n                          color: 'black'\r\n                      }\r\n                  },\r\n                  select: {\r\n                      fill: 'white',\r\n                      style: {\r\n                          color: 'black'\r\n                      }\r\n                  }\r\n              }\r\n          },\r\n          inputStyle: {\r\n              color: 'white',\r\n              fontWeight: 'bold',\r\n              states:{\r\n                  select:{\r\n                      color: 'black',\r\n                  }\r\n              }\r\n          },\r\n          labelStyle: {\r\n              color: 'white',\r\n              fontWeight: 'bold',\r\n          }\r\n          },\r\n          title: {\r\n            text: \"Interest Over Time\",\r\n            style: {\r\n              color: '#fff',\r\n            }\r\n          },\r\n          yAxis: {\r\n              title: {\r\n                  text: ''\r\n              },\r\n              gridLineColor: 'gray',\r\n              labels: {\r\n                style: {\r\n                    color: 'white'\r\n                }\r\n            }\r\n          },\r\n          \r\n          series: [\r\n            {\r\n              type: \"line\",\r\n              name: \"Interest Over Time\",\r\n              data: InterestOverTime,\r\n              color: '#DDDF00',\r\n            }\r\n          ]\r\n        }\r\n\r\n        this.WorldGraph={\r\n          chart: {\r\n            map: world,\r\n            backgroundColor: \"#3b4148\",\r\n          },\r\n          title:{\r\n            text: '',\r\n          },\r\n          mapNavigation: {\r\n              enabled: true,\r\n              buttonOptions: {\r\n                  verticalAlign: 'bottom'\r\n              }\r\n          },\r\n          colorAxis: {\r\n              min: 0\r\n          },\r\n          series: [\r\n            {\r\n              data: InterestByRegion,\r\n              color: \"#6226D9\",\r\n              name: resJSON.data.coinName\r\n            }\r\n          ]\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getGoogleTrend()\r\n    this.http.get('https://api.ethama.finance/get-coin-name').subscribe(Response => {\r\n      // console.log(Response);\r\n      let resSTR = JSON.stringify(Response);\r\n      let resJSON = JSON.parse(resSTR);\r\n      this.coins_list_api = resJSON.data.data;\r\n\r\n      // console.log(this.coins_list_api);\r\n    })\r\n  }\r\n\r\n}\r\n","<div class=\"google-trend-div\">\r\n    <h2 for=\"ice-cream-choice\" class=\"mr-3\">Choose Coin:</h2>\r\n    <input class=\"inputcoinsearch mb-3 \" type=\"text\" list=\"productList\" name=\"product\" [(ngModel)]='currentProduct'\r\n      (change)=\"getGoogleTrend()\" />\r\n\r\n    <datalist id=\"productList\">\r\n      <option *ngFor=\"let data_coin_name of coins_list_api;\" [value]=\"data_coin_name.id\">\r\n        {{data_coin_name.id}} ({{data_coin_name.symbol}})\r\n      </option>\r\n    </datalist>\r\n    <div class=\"row \">\r\n        \r\n        <div class=\"col-lg-12 card-outer-div\" style=\"margin-top: 59px;\">\r\n        \r\n            <h1 class=\"headingAi\">Introduction AI Platform</h1>\r\n            <div class=\"main-div card-div\" style=\"text-align: justify;\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-lg-12\">\r\n                    <h1> How to use Grise Token AI-Indices</h1>\r\n                    </div>\r\n                    <div class=\"col-lg-12 my-3\">\r\n                    <h4 class=\"text-danger\">NOTE: Indices Rebalancing Times Are an Approximation.</h4>\r\n                    </div>\r\n                    <div class=\"col-lg-12 my-3\">\r\n                        <div class=\"info-text\">\r\n                        Sometimes we may update the indices when we make important updates or changes to technical details and\r\n                        calculations for an index. For example, we recently added a requirement for all indices to only hold\r\n                        cryptocurrencies with a daily trading volume greater than $500k. Each of these technical updates requires us\r\n                        to re-do the index. This will apply with future technical updates to indices.\r\n                            Furthermore, we have recently add features related to trading signal. This features is based on Deep Learning by which our stacker can take smart decision to avoid loss in trading. In AI-Price prediction algorithms we can see the future expected price up-to two months and take fast decision to in-out the market.\r\n                        As a result, the days and times are an approximation and indices may take 1-4 hours to fully update or on\r\n                        occasion be rebalanced more than their time-horizon to make important technical updates.\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-lg-12 my-3\">\r\n                    <h4 class=\"text-danger\">DISCLAIMER\r\n                    Indices of crypto investments, like all types of investment-related information, are subject to risk; they can\r\n                    go down as well as up; and relying on such information can lead to losses as well as gains. Information about\r\n                    past performance is not necessarily indicative of future performance.\r\n                    </h4>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"card-outer-div\">\r\n        <h1 class=\"headingAi\">Coin Interest Over Time</h1>\r\n        <div class=\"card-div\">\r\n            <highcharts-chart class=\"custom-chart-styles\"\r\n                [Highcharts]=\"highcharts\"\r\n                [constructorType]=\"'stockChart'\"\r\n                [options]=\"GraphData\">\r\n            </highcharts-chart>\r\n        </div>\r\n    </div>\r\n    <div class=\"card-outer-div\">\r\n        <h1 class=\"headingAi\">Coin Interest By Region</h1>\r\n        <div class=\"card-div\">\r\n            <highcharts-chart class=\"custom-chart-styles\"\r\n                [Highcharts]=\"highcharts\"\r\n                [constructorType]=\"'mapChart'\"\r\n                [options]=\"WorldGraph\">\r\n            </highcharts-chart>\r\n        </div>\r\n    </div>\r\n</div>","import { LocalDataUpdateService } from './local-data-update.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport * as LiquidityTransformer from '../../abis/liquidity/LiquidityTransformer.json';\r\nimport { LiquidityEventData } from '../models/liquidity-event-data';\r\nimport { PersonalReferralData } from '../models/personal-referral-data';\r\nimport { GriseReservationData } from './../models/grise-resevation-data';\r\nimport { ContractService } from './contract.service';\r\nimport { SpinnerService } from '../helper/spinner/spinner.service';\r\nimport { ClaimableAmountData } from '../models/claimable-amount-data';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class LiquidityContractService {\r\n\r\n    constructor(private contractService: ContractService,\r\n        private toastr: ToastrService,\r\n        private localDataUpdateService: LocalDataUpdateService,\r\n        private spinnerService: SpinnerService) { }\r\n\r\n    async assignLiquidityAccountNo() {\r\n        try {\r\n            const liquidityTransformerContract = await this.contractService.getContractObject(LiquidityTransformer);\r\n            if (liquidityTransformerContract) {\r\n                this.contractService.liquidityAccountNo = liquidityTransformerContract._address;\r\n            }\r\n        } catch (ex) { }\r\n    }\r\n\r\n    async getCurrentLPDay() {\r\n        try {\r\n            const liquidityTransformerContract = await this.contractService.getContractObject(LiquidityTransformer);\r\n            if (liquidityTransformerContract) {\r\n                let currentLPDay = await liquidityTransformerContract.methods._currentLPDay().call();\r\n                currentLPDay = (currentLPDay <= this.localDataUpdateService.totalSlots) ? +currentLPDay : -1;\r\n                return currentLPDay;\r\n            }\r\n        } catch (ex) { }\r\n        return -1;\r\n    }\r\n\r\n    async getLiquidityEventData() {\r\n        try {\r\n            const liquidityTransformerContract = await this.contractService.getContractObject(LiquidityTransformer);\r\n            if (liquidityTransformerContract) {\r\n                let totalInvestment = await liquidityTransformerContract.methods.totalInvestment().call();\r\n                const uniqueInvestorCount = await liquidityTransformerContract.methods.uniqueInvestorCount().call();\r\n                const referralAccountCount = await liquidityTransformerContract.methods.referralAccountCount().call();\r\n                let currentLPDay = await liquidityTransformerContract.methods._currentLPDay().call();\r\n                totalInvestment = this.contractService.convertAmountInBigUnit(totalInvestment);\r\n                currentLPDay = (currentLPDay <= this.localDataUpdateService.totalSlots) ? currentLPDay : -1;\r\n\r\n                const liquidityEventData: LiquidityEventData = {\r\n                    totalInvestment,\r\n                    uniqueInvestorCount,\r\n                    referralAccountCount,\r\n                    currentLPDay\r\n                };\r\n                return liquidityEventData;\r\n            }\r\n        } catch (ex) { }\r\n        return null;\r\n    }\r\n\r\n    async getGriseReservationData(slotNo: number) {\r\n        try {\r\n            const liquidityTransformerContract = await this.contractService.getContractObject(LiquidityTransformer);\r\n            if (liquidityTransformerContract) {\r\n                const currentLPDay = await liquidityTransformerContract.methods._currentLPDay().call();\r\n                const slotsUsed = await liquidityTransformerContract.methods.dailySlots(slotNo).call();\r\n                let totalInvestment = await liquidityTransformerContract.methods.dailyTotalInvestment(slotNo).call();\r\n                let myContribution = await liquidityTransformerContract.methods.myInvestmentAmount(slotNo).call({ from: this.contractService.accountNo });\r\n                let myShare = await liquidityTransformerContract.methods.myClaimAmount(slotNo).call({ from: this.contractService.accountNo });\r\n\r\n                totalInvestment = this.contractService.convertAmountInBigUnit(totalInvestment);\r\n                myContribution = this.contractService.convertAmountInBigUnit(myContribution);\r\n                myShare = this.contractService.convertAmountInBigUnit(myShare);\r\n\r\n                const griseReservationData: GriseReservationData = {\r\n                    currentLPDay,\r\n                    slotsUsed,\r\n                    totalInvestment,\r\n                    myContribution,\r\n                    myShare\r\n                };\r\n                return griseReservationData;\r\n            }\r\n        } catch (ex) { }\r\n        return null;\r\n    }\r\n\r\n    async addReservation(slotNos: number[], amount: number) {\r\n        try {\r\n            const liquidityTransformerContract = await this.contractService.getContractObject(LiquidityTransformer);\r\n            if (liquidityTransformerContract) {\r\n                this.spinnerService.show();\r\n                const referralAccountNo = this.getReferralAccountNo();\r\n                const etherAmount = this.contractService.convertAmountInSmallUnit(amount);\r\n\r\n                liquidityTransformerContract.methods.reserveGrise(slotNos, referralAccountNo)\r\n                    .send({ value: etherAmount, from: this.contractService.accountNo })\r\n                    .then((response: any) => {\r\n                        // console.log(\"transaction successful.\", response);\r\n                        this.localDataUpdateService.forceUpdateSlotsReservationData(true);\r\n                        this.localDataUpdateService.forceUpdateWalletBalanceData(true);\r\n                        this.toastr.success('Transaction successful.');\r\n                        this.spinnerService.hide();\r\n                    })\r\n                    .catch((error: any) => {\r\n                        // console.log(\"error\", error);\r\n                        this.toastr.error('Transaction failed. Try again!');\r\n                        this.spinnerService.hide();\r\n                    });\r\n            }\r\n        } catch (ex) { }\r\n    }\r\n\r\n    async addReservationWithToken(tokenAddress: string, slotNos: number[], coinAmount: string) {\r\n        try {\r\n            const liquidityTransformerContract = await this.contractService.getContractObject(LiquidityTransformer);\r\n            if (liquidityTransformerContract) {\r\n                this.spinnerService.show();\r\n                const referralAccountNo = this.getReferralAccountNo();\r\n\r\n                liquidityTransformerContract.methods.reserveGriseWithToken(tokenAddress, coinAmount, slotNos, referralAccountNo)\r\n                    .send({ from: this.contractService.accountNo })\r\n                    .then((response: any) => {\r\n                        // console.log(\"transaction successful.\", response);\r\n                        this.localDataUpdateService.forceUpdateSlotsReservationData(true);\r\n                        this.localDataUpdateService.forceUpdateWalletBalanceData(true);\r\n                        this.toastr.success('Transaction successful.');\r\n                        this.spinnerService.hide();\r\n                    })\r\n                    .catch((error: any) => {\r\n                        // console.log(\"error\", error);\r\n                        this.toastr.error('Transaction failed. Try again!');\r\n                        this.spinnerService.hide();\r\n                    });\r\n            }\r\n        } catch (ex) { }\r\n    }\r\n\r\n    getReferralAccountNo(): string {\r\n        let referralAccountNo = this.contractService.referralAccountNo;\r\n        if (referralAccountNo == this.contractService.accountNo.toString()) {\r\n            referralAccountNo = this.contractService.blankReferralAccountNo;\r\n        }\r\n\r\n        return referralAccountNo;\r\n    }\r\n\r\n    async getPersonalReferralData() {\r\n        try {\r\n            const liquidityTransformerContract = await this.contractService.getContractObject(LiquidityTransformer);\r\n            if (liquidityTransformerContract) {\r\n                let personalReferralData: PersonalReferralData;\r\n                const accountNo = this.contractService.accountNo;\r\n                if (accountNo) {\r\n                    let referralAmount = await liquidityTransformerContract.methods.referralAmount(accountNo).call();\r\n                    const referralTokens = await liquidityTransformerContract.methods.referralTokens(accountNo).call();\r\n\r\n                    referralAmount = this.contractService.convertAmountInBigUnit(referralAmount);\r\n                    personalReferralData = {\r\n                        referralAmount,\r\n                        referralTokens\r\n                    };\r\n                } else {\r\n                    personalReferralData = {\r\n                        referralAmount: 0,\r\n                        referralTokens: 0\r\n                    };\r\n                }\r\n                return personalReferralData;\r\n            }\r\n        } catch (ex) { }\r\n        return null;\r\n    }\r\n\r\n    async getClaimableAmount() {\r\n        try {\r\n            const liquidityTransformerContract = await this.contractService.getContractObject(LiquidityTransformer);\r\n            if (liquidityTransformerContract) {\r\n                // let test1 = await liquidityTransformerContract.methods.investmentsOnAllDays().call();\r\n                // console.log(test1);\r\n                let claimableAmount = await liquidityTransformerContract.methods.myClaimAmountAllDays().call({ from: this.contractService.accountNo });\r\n                let claimableAmountOtherData = await liquidityTransformerContract.methods.g().call();\r\n\r\n                claimableAmount = this.contractService.convertAmountInBigUnit(claimableAmount);\r\n                claimableAmountOtherData.totalReferralTokens = this.contractService.convertAmountInBigUnit(claimableAmountOtherData.totalReferralTokens);\r\n                claimableAmountOtherData.totalTransferTokens = this.contractService.convertAmountInBigUnit(claimableAmountOtherData.totalTransferTokens);\r\n                claimableAmountOtherData.totalWeiContributed = this.contractService.convertAmountInBigUnit(claimableAmountOtherData.totalWeiContributed);\r\n\r\n                const claimableAmountData: ClaimableAmountData = {\r\n                    claimableAmount: claimableAmount,\r\n                    generatedDays: +claimableAmountOtherData.generatedDays,\r\n                    preparedReferrals: +claimableAmountOtherData.preparedReferrals,\r\n                    totalReferralTokens: claimableAmountOtherData.totalReferralTokens,\r\n                    totalTransferTokens: claimableAmountOtherData.totalTransferTokens,\r\n                    totalWeiContributed: claimableAmountOtherData.totalWeiContributed,\r\n                };\r\n                return claimableAmountData;\r\n            }\r\n        } catch (ex) { }\r\n        return null;\r\n    }\r\n\r\n    async claimGriseToken() {\r\n        try {\r\n            const liquidityTransformerContract = await this.contractService.getContractObject(LiquidityTransformer);\r\n            if (liquidityTransformerContract) {\r\n                this.spinnerService.show();\r\n                liquidityTransformerContract.methods.getMyTokens()\r\n                    .send({ from: this.contractService.accountNo })\r\n                    .then((response: any) => {\r\n                        // console.log(\"transaction successful.\", response);\r\n                        this.localDataUpdateService.forceUpdateClaimableAmountData(true);\r\n                        this.toastr.success('Transaction successful.');\r\n                        this.spinnerService.hide();\r\n                    })\r\n                    .catch((error: any) => {\r\n                        // console.log(\"error\", error);\r\n                        this.toastr.error('Transaction failed. Try again!');\r\n                        this.spinnerService.hide();\r\n                    });\r\n            }\r\n        } catch (ex) { }\r\n    }    \r\n\r\n    async getSupplyOnAllDays() {\r\n        try {\r\n            const liquidityTransformerContract = await this.contractService.getContractObject(LiquidityTransformer);\r\n            if (liquidityTransformerContract) {\r\n                let supplyOnAllDays = await liquidityTransformerContract.methods.supplyOnAllDays().call();\r\n                \r\n                const rtnSupplyOnAllDays: number[] = [];\r\n                supplyOnAllDays.forEach((invertOnDay: any) => {\r\n                    rtnSupplyOnAllDays.push(this.contractService.convertAmountInBigUnit(invertOnDay));                \r\n                });\r\n                return rtnSupplyOnAllDays;\r\n            }\r\n        } catch (ex) { }\r\n        return null;\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\r\nimport { ChartDataSets, ChartOptions, ChartType } from 'chart.js';\r\nimport { MultiDataSet, Label, SingleDataSet, Color } from 'ng2-charts';\r\nimport {formatDate} from '@angular/common';\r\nimport * as Highcharts from \"highcharts/highstock\";\r\nimport Indicators from \"highcharts/indicators/indicators-all.js\";\r\nimport DragPanes from \"highcharts/modules/drag-panes.js\";\r\nimport AnnotationsAdvanced from \"highcharts/modules/annotations-advanced.js\";\r\nimport PriceIndicator from \"highcharts/modules/price-indicator.js\";\r\nimport StockTools from \"highcharts/modules/stock-tools.js\";\r\n\r\nIndicators(Highcharts);\r\nDragPanes(Highcharts);\r\nAnnotationsAdvanced(Highcharts);\r\nPriceIndicator(Highcharts);\r\nStockTools(Highcharts);\r\n\r\n@Component({\r\n  selector: 'app-coin-prediction',\r\n  templateUrl: './coin-prediction.component.html',\r\n  styleUrls: ['./coin-prediction.component.scss']\r\n})\r\nexport class CoinPredictionComponent implements OnInit {\r\n\r\n  highcharts = Highcharts;\r\n  coins_list_api:any = []\r\n  currentProduct:string = 'bitcoin'\r\n  public lineChartData: ChartDataSets[] = [];\r\n  public lineChartLabels: any[] = [];\r\n  lineChartColors: Color[] = [];\r\n  lineChartLegend = true;\r\n  lineChartPlugins = [];\r\n  lineChartOptions: ChartOptions = {\r\n    responsive: false,\r\n    tooltips: {\r\n      backgroundColor: 'rgba(255,255,255,0.9)',\r\n      bodyFontColor: '#999',\r\n      borderColor: '#999',\r\n      borderWidth: 1,\r\n      caretPadding: 15,\r\n      displayColors: false,\r\n      enabled: true,\r\n      intersect: true,\r\n      mode: 'x',\r\n      titleFontColor: '#999',\r\n      titleFontSize: 20,\r\n      bodyFontSize: 20,\r\n      titleMarginBottom: 10,\r\n      xPadding: 15,\r\n      yPadding: 15,\r\n    },\r\n    legend: {\r\n      labels: { fontColor: 'white' ,  fontSize: 20}\r\n    },\r\n    scales: {\r\n      xAxes: [{\r\n        ticks: { fontColor: 'white', fontSize: 20 },\r\n        gridLines: { color: 'rgba(255,255,255,0.1)' }\r\n      }],\r\n      yAxes: [{\r\n        ticks: { fontColor: 'white' , fontSize: 20 },\r\n        gridLines: { color: 'rgba(255,255,255,0.1)' }\r\n      }]\r\n    }\r\n    \r\n  };\r\n\r\n  // GraphData:any = {\r\n  //   chart: {\r\n  //     backgroundColor: \"#3b4148\",\r\n  //   },\r\n  //   rangeSelector: {\r\n  //     chart: {\r\n  //       backgroundColor: \"#3b4148\",\r\n  //     },\r\n  //     buttonTheme: { // styles for the buttons\r\n  //       fill: 'none',\r\n  //       stroke: 'none',\r\n  //       'stroke-width': 0,\r\n  //       r: 8,\r\n  //       style: {\r\n  //           color: 'white',\r\n  //           fontWeight: 'bold'\r\n  //       },\r\n  //       states: {\r\n  //           hover: {\r\n  //               fill: 'white',\r\n  //               style: {\r\n  //                   color: 'black'\r\n  //               }\r\n  //           },\r\n  //           select: {\r\n  //               fill: 'white',\r\n  //               style: {\r\n  //                   color: 'black'\r\n  //               }\r\n  //           }\r\n  //       }\r\n  //   },\r\n  //   inputStyle: {\r\n  //       color: 'white',\r\n  //       fontWeight: 'bold',\r\n  //       states:{\r\n  //           select:{\r\n  //               color: 'black',\r\n  //           }\r\n  //       }\r\n  //   },\r\n  //   labelStyle: {\r\n  //       color: 'white',\r\n  //       fontWeight: 'bold',\r\n  //   },\r\n  //     selected: 1\r\n  //   },\r\n  //   title: {\r\n  //     text: \"Coin Past and Predicted Price\",\r\n  //     style: {\r\n  //       color: '#fff',\r\n  //     }\r\n  //   },\r\n  //   yAxis: {\r\n  //       title: {\r\n  //           text: ''\r\n  //       },\r\n  //       gridLineColor: 'gray',\r\n  //       labels: {\r\n  //         style: {\r\n  //             color: 'white'\r\n  //         }\r\n  //     }\r\n  //   },\r\n    \r\n  //   series: [\r\n  //     {\r\n  //       type: \"line\",\r\n  //       name: \"Past Price\",\r\n  //       data: [],\r\n  //       color: '#DDDF00',\r\n  //     },\r\n      \r\n  //     {\r\n  //       type: \"line\",\r\n  //       name: \"Predicted Price\",\r\n  //       data: [],\r\n  //       color: '#ff0000'\r\n  //     }\r\n  //   ]\r\n  // }\r\n\r\n  getCoinPrediction(coinName:any){\r\n    let headers = new HttpHeaders();\r\n    let params = new HttpParams().set(\"coin\", coinName)\r\n    this.http.get(`https://api.ethama.finance/get-coin-predict`, {\r\n      headers: headers,\r\n      params: params,\r\n      responseType: 'text'\r\n    }).toPromise().then(Response => {\r\n      let details = JSON.parse(Response);\r\n      if(details.code == 200){\r\n\r\n        let price:number[]=[];\r\n        let time_stamp:string[] = [];\r\n        \r\n        // console.log(coin_json)\r\n        for (let data_coin of details.data.predicted){\r\n          \r\n          let date = new Date(data_coin.ds)\r\n          let date_final:string = formatDate(date, 'yyyy/MM/dd', 'en');\r\n          price.push(data_coin.y)\r\n          time_stamp.push(date_final)\r\n        }\r\n        this.lineChartData = [{data:price, label:`${coinName} Predicted Price`}];\r\n        this.lineChartLabels = time_stamp;\r\n\r\n        // let PastPrice:any = []\r\n        // let PredictedPrice:any = []\r\n        // if(details.data.data[0]){\r\n        //   const Past = details.data.data[0].data.timeseries\r\n        //   const Future = details.data.data[0].data.predicted\r\n        //   for (let i = 0; i < Past.length; i++) {\r\n        //     PastPrice.push([Past[i].ds,Past[i].y])\r\n        //   }\r\n        //   for (let i = 0; i < Future.length; i++) {\r\n        //     PredictedPrice.push([Future[i].ds,Future[i].y])\r\n        //   }\r\n        // }\r\n\r\n        // this.GraphData = {\r\n        //   chart: {\r\n        //     backgroundColor: \"#3b4148\",\r\n        //   },\r\n        //   rangeSelector: {\r\n        //     buttonTheme: { // styles for the buttons\r\n        //       fill: 'none',\r\n        //       stroke: 'none',\r\n        //       'stroke-width': 0,\r\n        //       r: 8,\r\n        //       style: {\r\n        //           color: 'white',\r\n        //           fontWeight: 'bold'\r\n        //       },\r\n        //       states: {\r\n        //           hover: {\r\n        //               fill: 'white',\r\n        //               style: {\r\n        //                   color: 'black'\r\n        //               }\r\n        //           },\r\n        //           select: {\r\n        //               fill: 'white',\r\n        //               style: {\r\n        //                   color: 'black'\r\n        //               }\r\n        //           }\r\n        //       }\r\n        //   },\r\n        //   inputStyle: {\r\n        //       color: 'white',\r\n        //       fontWeight: 'bold',\r\n        //       states:{\r\n        //           select:{\r\n        //               color: 'black',\r\n        //           }\r\n        //       }\r\n        //   },\r\n        //   labelStyle: {\r\n        //       color: 'white',\r\n        //       fontWeight: 'bold',\r\n        //   }\r\n        //   },\r\n        //   title: {\r\n        //     text: \"Coin Past and Predicted Price\",\r\n        //     style: {\r\n        //       color: '#fff',\r\n        //     }\r\n        //   },\r\n        //   yAxis: {\r\n        //       title: {\r\n        //           text: ''\r\n        //       },\r\n        //       gridLineColor: 'gray',\r\n        //       labels: {\r\n        //         style: {\r\n        //             color: 'white'\r\n        //         }\r\n        //     }\r\n        //   },\r\n          \r\n        //   series: [\r\n        //     {\r\n        //       type: \"line\",\r\n        //       name: \"Past Price\",\r\n        //       data: PastPrice,\r\n        //       color: '#DDDF00',\r\n        //     },\r\n            \r\n        //     {\r\n        //       type: \"line\",\r\n        //       name: \"Predicted Price\",\r\n        //       data: PredictedPrice,\r\n        //       color: '#ff0000'\r\n        //     }\r\n        //   ]\r\n        // }\r\n\r\n      }\r\n    })\r\n  }\r\n  constructor(private http: HttpClient) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getCoinPrediction(\"bitcoin\")\r\n    this.http.get('https://api.ethama.finance/get-coin-name').subscribe(Response => {\r\n      // console.log(Response);\r\n      let resSTR = JSON.stringify(Response);\r\n      let resJSON = JSON.parse(resSTR);\r\n      this.coins_list_api = resJSON.data.data;\r\n\r\n      // console.log(this.coins_list_api);\r\n    })\r\n  }\r\n\r\n}\r\n","<div class=\"coin-prediction-div\">\r\n    <h2 for=\"ice-cream-choice\" class=\"mr-3\">Choose Coin:</h2>\r\n    <input class=\"inputcoinsearch mb-3 \" type=\"text\" list=\"productList\" name=\"product\" [(ngModel)]='currentProduct'\r\n      (change)=\"getCoinPrediction(currentProduct)\" />\r\n\r\n    <datalist id=\"productList\">\r\n      <option *ngFor=\"let data_coin_name of coins_list_api;\" [value]=\"data_coin_name.id\">\r\n        {{data_coin_name.id}} ({{data_coin_name.symbol}})\r\n      </option>\r\n    </datalist>\r\n    <div class=\"row \">\r\n      <!-- introduction part -->\r\n      <div class=\"col-lg-12 card-outer-div\" style=\"margin-top: 59px;\">\r\n      \r\n          <h1 class=\"headingAi\">Introduction AI Platform</h1>\r\n          <div class=\"main-div card-div\" style=\"text-align: justify;\">\r\n              <div class=\"row\">\r\n                  <div class=\"col-lg-12\">\r\n                  <h1> How to use Grise Token AI-Indices</h1>\r\n                  </div>\r\n                  <div class=\"col-lg-12 my-3\">\r\n                  <h4 class=\"text-danger\">NOTE: Indices Rebalancing Times Are an Approximation.</h4>\r\n                  </div>\r\n                  <div class=\"col-lg-12 my-3\">\r\n                      <div class=\"info-text\">\r\n                      Sometimes we may update the indices when we make important updates or changes to technical details and\r\n                      calculations for an index. For example, we recently added a requirement for all indices to only hold\r\n                      cryptocurrencies with a daily trading volume greater than $500k. Each of these technical updates requires us\r\n                      to re-do the index. This will apply with future technical updates to indices.\r\n                          Furthermore, we have recently add features related to trading signal. This features is based on Deep Learning by which our stacker can take smart decision to avoid loss in trading. In AI-Price prediction algorithms we can see the future expected price up-to two months and take fast decision to in-out the market.\r\n                      As a result, the days and times are an approximation and indices may take 1-4 hours to fully update or on\r\n                      occasion be rebalanced more than their time-horizon to make important technical updates.\r\n                      </div>\r\n                  </div>\r\n                  <div class=\"col-lg-12 my-3\">\r\n                  <h4 class=\"text-danger\">DISCLAIMER\r\n                  Indices of crypto investments, like all types of investment-related information, are subject to risk; they can\r\n                  go down as well as up; and relying on such information can lead to losses as well as gains. Information about\r\n                  past performance is not necessarily indicative of future performance.\r\n                  </h4>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"card-outer-div\">\r\n        <h1 class=\"headingAi\">Coin Price Prediction</h1>\r\n        <div class=\"card-div\">\r\n            <div class=\"custom-chart-styles\">\r\n                <canvas baseChart width=\"1400px\" height=\"600px\" [datasets]=\"lineChartData\" [labels]=\"lineChartLabels\"\r\n                  [options]=\"lineChartOptions\" [colors]=\"lineChartColors\" [legend]=\"lineChartLegend\" chartType=\"line\"\r\n                  [plugins]=\"lineChartPlugins\">\r\n                </canvas>\r\n            </div>\r\n            <!-- <highcharts-chart class=\"custom-chart-styles\"\r\n                [Highcharts]=\"highcharts\"\r\n                [constructorType]=\"'stockChart'\"\r\n                [options]=\"GraphData\">\r\n            </highcharts-chart> -->\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { RefundHistoryData } from 'src/app/models/refund-history-data';\r\nimport { RefundContractService } from 'src/app/services/refund-contract.service';\r\n\r\n@Component({\r\n  selector: 'app-refund-history',\r\n  templateUrl: './refund-history.component.html',\r\n  styleUrls: ['./refund-history.component.scss']\r\n})\r\nexport class RefundHistoryComponent implements OnInit {\r\n\r\n  refundHistoryData: RefundHistoryData;\r\n\r\n  constructor(private refundContractService: RefundContractService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.refundContractService.isClaimGasFeeRefundUpdated.subscribe(() =>\r\n      this.refundContractService.getRefundHistoryData().then(value => this.refundHistoryData = value!)\r\n    );\r\n  }\r\n\r\n  claimGasFeeRefund() {\r\n    if (this.refundHistoryData?.myRefundAmount > 0) {\r\n      this.refundContractService.claimGasFeeRefund();\r\n    }\r\n  }\r\n\r\n}\r\n","<div style=\"background-color: rgb(59, 65, 72);\">\r\n\r\n  <div class=\"personal header_div\">\r\n    <!-- <img style=\"width: 250px\" src=\"../../../assets/logo.png\"> -->\r\n    <i class=\"fas fa-gas-pump personal_icon header_icon\"></i>\r\n    <label class=\"personal_title header_title\">Gas Refund</label>\r\n  </div>\r\n\r\n  <div class=\"sub-end-part\">\r\n    <!-- <div style=\" border-bottom: 2px solid grey;margin-bottom: 40px;\"></div> -->\r\n    <div class=\"row maintab\">\r\n      <div class=\"col-xl-6 col-md-12 col-xs-12 tab\">\r\n\r\n        <h4 style=\"margin: 30px;text-transform: uppercase;\">\r\n\r\n          TOTAL BNB AVAILABLE IN GAS REFUND CONTRACT\r\n\r\n        </h4>\r\n        <div class=\"timebox\">\r\n          <span class=\"value\">\r\n            <button class=\"ether\">\r\n              <img src=\"../assets/bnb-black.png\" alt=\"logo\" style=\"height: 30px; width: 30px;\">\r\n            </button>\r\n            <span class=\"digit\">{{ refundHistoryData?.sponsoredAmount | number:'1.0-5' }} BNB</span>\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <div class=\"extra_spc\" style=\"display: none;\"></div>\r\n      <div class=\"col-xl-6 col-md-12 col-xs-12 tab\">\r\n        <h4 style=\" margin: 30PX; text-transform: uppercase;\">\r\n\r\n          CURRENT BNB AMOUNT YOU CAN CLAIM\r\n\r\n        </h4>\r\n        <div class=\"timebox\">\r\n          <span class=\"value\">\r\n            <button class=\"ether\">\r\n              <img src=\"../assets/bnb-black.png\" alt=\"logo\" style=\"height: 30px; width: 30px;\">\r\n            </button>\r\n            <span class=\"digit\">{{ refundHistoryData?.myRefundAmount | number:'1.0-5' }} BNB</span>\r\n          </span>\r\n        </div>\r\n        <h4 style=\" margin: 30PX; text-transform:initial\">\r\n          Based on first 200 transactions\r\n        </h4>\r\n\r\n      </div>\r\n\r\n\r\n    </div>\r\n    <!-- <div>hi</div>\r\n          <div style=\"display: flex; margin-left: 2%; color: floralwhite;\">\r\n              <h3 >YOUR TRANSACTIONS</h3>\r\n          </div> -->\r\n    <!-- <h5 \"> -->\r\n    <br>\r\n    <br>\r\n    <button type=\"button\" [disabled]=\"refundHistoryData && refundHistoryData.myRefundAmount > 0 ? null : 'disabled'\" class=\"btn btn-primary tab-button\" (click)=\"claimGasFeeRefund()\">Claim\r\n      your Gas Fee Refund</button>\r\n    <!-- </h5> -->\r\n\r\n  </div>\r\n\r\n</div>","import {Component, EventEmitter, Inject, OnChanges, OnInit, Output} from '@angular/core';\r\nimport {MAT_DIALOG_DATA} from '@angular/material/dialog';\r\nimport {connect, WalletType} from \"@horizonx/aptos-wallet-connector\";\r\n\r\n@Component({\r\n    selector: 'app-connect-wallet-dialog',\r\n    templateUrl: './connect-wallet-dialog.component.html',\r\n    styleUrls: ['./connect-wallet-dialog.component.scss'],\r\n})\r\n\r\nexport class ConnectWalletDialogComponent implements OnInit, OnChanges {\r\n    @Output() emitData = new EventEmitter();\r\n\r\n    constructor(\r\n        @Inject(MAT_DIALOG_DATA) public data: any\r\n    ) {}\r\n\r\n    ngOnInit(): void {\r\n        console.log(this.data);\r\n    }\r\n\r\n    ngOnChanges(): void {\r\n        console.log('MODAL_ON CHANGES CALLED');\r\n    }\r\n\r\n    async connectWallet(type: string) {\r\n        try {\r\n            console.log(type);\r\n            const result = await connect(type as WalletType);\r\n            // @ts-ignore\r\n            const {account, disconnect} = result;\r\n            const address = await account();\r\n            console.log('ADDRESS', address);\r\n            this.emitData.next(address);\r\n            // this.data.disconnect = disconnect;\r\n            console.log({address, result});\r\n        } catch (e) {\r\n            switch (e) {\r\n                case 'Petra wallet not installed':\r\n                    window.open('https://petra.app', '_blank');\r\n                    break;\r\n                case 'Martian wallet not installed.':\r\n                    window.open('https://martianwallet.xyz', '_blank');\r\n                    break;\r\n                case 'Pontem wallet not installed.':\r\n                    window.open('https://pontem.network', '_blank');\r\n                    break;\r\n                default:\r\n                    // @ts-ignore\r\n                    console.log('ERROR:', e.message);\r\n            }\r\n            console.log(e);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n","\r\n<div style=\"background-color: #26253d\">\r\n    <div mat-dialog-title class=\"d-flex justify-content-center\">\r\n        <button mat-button mat-dialog-close>X</button>\r\n        <div class=\"ml-auto\">Connect Wallet</div>\r\n        <div class=\"mr-auto\"></div>\r\n    </div>\r\n    <div mat-dialog-content style=\"height: 33vh\">\r\n        <mat-selection-list class=\"d-flex flex-column\" #wallets [multiple]=\"false\" style=\"gap: 1em\" id=\"wallet-options\">\r\n            <mat-list-option>\r\n                <div class=\"d-flex justify-content-between align-items-center py-2 gap-1\"\r\n                     (click)=\"connectWallet('aptos')\">\r\n                    <div class=\"d-flex align-items-center\">\r\n                        <div class=\"icon-container\" style=\"padding-left: 0.89em\">\r\n\r\n                                <svg width=\"40\" height=\"40\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 60 60\" fill=\"white\">\r\n                                    <path d=\"M46.47,20.07H41.16a2.15,2.15,0,0,1-1.61-.72l-2.16-2.42a1.69,1.69,0,0,0-2.53,0L33,19a3.21,3.21,0,0,1-2.39,1.07h-29A30.26,30.26,0,0,0,0,27.48H27.42a1.78,1.78,0,0,0,1.28-.54l2.56-2.66a1.67,1.67,0,0,1,1.22-.52h.1a1.7,1.7,0,0,1,1.27.57L36,26.75a2.17,2.17,0,0,0,1.61.73H60a30.26,30.26,0,0,0-1.58-7.41h-12Z\"></path>\r\n                                    <path d=\"M16.6,43.05a1.78,1.78,0,0,0,1.27-.54l2.56-2.66a1.7,1.7,0,0,1,1.22-.52h.1A1.7,1.7,0,0,1,23,39.9l2.15,2.42a2.14,2.14,0,0,0,1.62.73H57.12a29.73,29.73,0,0,0,2.47-7.48H30.47a2.17,2.17,0,0,1-1.62-.72L26.7,32.42a1.69,1.69,0,0,0-2.53,0L22.32,34.5a3.18,3.18,0,0,1-2.38,1.07H.41a29.73,29.73,0,0,0,2.47,7.48Z\"></path>\r\n                                    <path d=\"M38.12,12a1.74,1.74,0,0,0,1.27-.54L42,8.78a1.69,1.69,0,0,1,1.22-.51h.1a1.69,1.69,0,0,1,1.27.56l2.15,2.43a2.17,2.17,0,0,0,1.62.72h5.77A30.19,30.19,0,0,0,5.92,12Z\"></path>\r\n                                    <path d=\"M26.53,50.46H18.64A2.17,2.17,0,0,1,17,49.74l-2.15-2.43a1.71,1.71,0,0,0-2.53,0l-1.85,2.08a3.18,3.18,0,0,1-2.38,1.07H8a30.16,30.16,0,0,0,44,0Z\"></path>\r\n                                </svg>\r\n                        </div>\r\n                        <h3 class=\"text-white text-capitalize\">Petra Wallet</h3>\r\n                    </div>\r\n                    <div class=\"opacity-20\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"currentColor\"\r\n                             viewBox=\"0 0 16 16\">\r\n                            <path d=\"M8 0a8 8 0 1 1 0 16A8 8 0 0 1 8 0zM4.5 7.5a.5.5 0 0 0 0 1h5.793l-2.147 2.146a.5.5 0 0 0 .708.708l3-3a.5.5 0 0 0 0-.708l-3-3a.5.5 0 1 0-.708.708L10.293 7.5H4.5z\"></path>\r\n                        </svg>\r\n                    </div>\r\n                </div>\r\n            </mat-list-option>\r\n            <mat-list-option>\r\n                <div class=\"d-flex justify-content-between align-items-center py-2 gap-1\"\r\n                     (click)=\"connectWallet('martian')\">\r\n                    <div class=\"d-flex align-items-center\">\r\n                        <div class=\"icon-container\">\r\n                            <div class=\"rounded-xl py-2\" style=\"padding: 0 0.78em\"><div><img src=\"https://avatars.githubusercontent.com/u/103241191?s=200&amp;v=4\" width=\"45\" height=\"45\" alt=\"Martian\" style=\"display: block;\"></div></div>\r\n                        </div>\r\n                        <h3 class=\"text-white text-capitalize\">Martian Wallet</h3>\r\n                    </div>\r\n                    <div class=\"opacity-20\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"currentColor\"\r\n                             viewBox=\"0 0 16 16\">\r\n                            <path d=\"M8 0a8 8 0 1 1 0 16A8 8 0 0 1 8 0zM4.5 7.5a.5.5 0 0 0 0 1h5.793l-2.147 2.146a.5.5 0 0 0 .708.708l3-3a.5.5 0 0 0 0-.708l-3-3a.5.5 0 1 0-.708.708L10.293 7.5H4.5z\"></path>\r\n                        </svg>\r\n                    </div>\r\n                </div>\r\n            </mat-list-option>\r\n            <mat-list-option>\r\n                <div class=\"d-flex justify-content-between align-items-center py-2 gap-1\"\r\n                     (click)=\"connectWallet('pontem')\">\r\n                    <div class=\"d-flex align-items-center\">\r\n                        <div class=\"icon-container\">\r\n                            <div style=\"width: 7rem; height: 6rem\">\r\n                                <svg version=\"1.0\" id=\"katman_1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\"\r\n                                     viewBox=\"0 0 38.5 28.3\" style=\"enable-background:new 0 0 38.5 28.3;\" xml:space=\"preserve\">\r\n<style type=\"text/css\">\r\n\t.st0{fill:url(#SVGID_1_);}\r\n</style>\r\n                                    <linearGradient id=\"SVGID_1_\" gradientUnits=\"userSpaceOnUse\" x1=\"9.0686\" y1=\"15.116\" x2=\"30.0686\" y2=\"15.1445\"\r\n                                                    gradientTransform=\"matrix(1 0 0 -1 0 29.2593)\">\r\n\t<stop offset=\"8.580000e-02\" style=\"stop-color:#8D29C1\"/>\r\n                                        <stop offset=\"0.2383\" style=\"stop-color:#942BBB\"/>\r\n                                        <stop offset=\"0.4667\" style=\"stop-color:#A92FAC\"/>\r\n                                        <stop offset=\"0.7413\" style=\"stop-color:#CA3793\"/>\r\n                                        <stop offset=\"1\" style=\"stop-color:#F03F77\"/>\r\n                                        <stop offset=\"1\" style=\"stop-color:#F03F77\"/>\r\n</linearGradient>\r\n                                    <path class=\"st0\" d=\"M19.2,3.6c-5.8,0-10.5,4.7-10.5,10.5c0,4.2,2.4,7.8,6,9.5v0h0c1.4,0.7,2.9,1,4.5,1c5.8,0,10.5-4.7,10.5-10.5\r\n\tC29.7,8.3,25,3.6,19.2,3.6z M19.2,4.5c5.3,0,9.6,4.3,9.6,9.6c0,1.5-0.4,3-1,4.3c-1.4-0.7-2.8-1.2-4.2-1.5v-8c0-0.3-0.2-0.5-0.5-0.5\r\n\th-1.8H17h-1.8c-0.3,0-0.5,0.2-0.5,0.5v8.1c-1.4,0.3-2.7,0.8-4.1,1.5c-0.6-1.3-1-2.7-1-4.3C9.6,8.8,13.9,4.5,19.2,4.5z M11.2,19.3\r\n\tc1.1-0.6,2.3-1,3.5-1.3v4.6C13.3,21.8,12,20.7,11.2,19.3z M17,23.5V12.7c0-1.2,1-2.3,2.2-2.3c1.2,0,2.2,1,2.2,2.2c0,0,0,0,0,0h0v3.7\r\n\tc-1-0.1-2.1-0.2-3.1-0.1l-0.9,1.2c1.3-0.1,2.6-0.1,3.9,0c0,0,0,0,0,0c0,0,0,0,0,0c0.2,0,1,0.1,1.8,0.3l-1.8,0.6v4.9\r\n\tc-0.7,0.2-1.4,0.2-2.2,0.2C18.5,23.7,17.7,23.7,17,23.5z M23.7,22.7v-4.6c1.2,0.3,2.4,0.8,3.6,1.3C26.4,20.8,25.1,21.9,23.7,22.7z\"\r\n                                    />\r\n</svg>\r\n\r\n                            </div>\r\n                        </div>\r\n                        <h3 class=\"text-white text-capitalize\">Pontem Wallet</h3>\r\n                    </div>\r\n                    <div class=\"opacity-20\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"currentColor\"\r\n                             viewBox=\"0 0 16 16\">\r\n                            <path d=\"M8 0a8 8 0 1 1 0 16A8 8 0 0 1 8 0zM4.5 7.5a.5.5 0 0 0 0 1h5.793l-2.147 2.146a.5.5 0 0 0 .708.708l3-3a.5.5 0 0 0 0-.708l-3-3a.5.5 0 1 0-.708.708L10.293 7.5H4.5z\"></path>\r\n                        </svg>\r\n                    </div>\r\n                </div>\r\n            </mat-list-option>\r\n        </mat-selection-list>\r\n    </div>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-coming-soon',\r\n  templateUrl: './coming-soon.component.html',\r\n  styleUrls: ['./coming-soon.component.scss']\r\n})\r\nexport class ComingSoonComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid bg-color\">\r\n\r\n    <div class=\"row content\">\r\n\r\n        <div class=\"col-lg-3 tokeninfo-first\">\r\n            <div style=\"display: grid;\">\r\n\r\n            </div>\r\n\r\n\r\n        </div>\r\n        <div class=\"col-lg-12 tokeninfo-second\" id=\"Overview\">\r\n            <div class=\"personal\">\r\n                <!-- <img style=\"width: 250px\" src=\"../../../assets/logo.png\"> -->\r\n                <!-- <i class=\"fas fa-coins\"></i> -->\r\n                <!-- <h1 class=\"personal_title\" style=\"padding-left: 25%;\">NFT</h1> -->\r\n\r\n            </div>\r\n            <br>\r\n            <br>\r\n            <br>\r\n            <br>\r\n            <br>\r\n\r\n            <div style=\"text-align: center\">\r\n                <div class=\"grise\">\r\n                    <br>\r\n                    <br>\r\n                </div>\r\n            </div>\r\n            <div style=\"text-align: center\">\r\n                <div>\r\n                    <h1 style=\"margin-top: 10%;\r\n                    color: #a9c4a9;\r\n                    font-size: 50px;\r\n                    \">\r\n                        Coming Soon ...\r\n                    </h1>\r\n                </div>\r\n                \r\n\r\n\r\n        </div>\r\n\r\n    </div>\r\n</div>","var map = {\n\t\"./af\": \"K/tc\",\n\t\"./af.js\": \"K/tc\",\n\t\"./ar\": \"jnO4\",\n\t\"./ar-dz\": \"o1bE\",\n\t\"./ar-dz.js\": \"o1bE\",\n\t\"./ar-kw\": \"Qj4J\",\n\t\"./ar-kw.js\": \"Qj4J\",\n\t\"./ar-ly\": \"HP3h\",\n\t\"./ar-ly.js\": \"HP3h\",\n\t\"./ar-ma\": \"CoRJ\",\n\t\"./ar-ma.js\": \"CoRJ\",\n\t\"./ar-sa\": \"gjCT\",\n\t\"./ar-sa.js\": \"gjCT\",\n\t\"./ar-tn\": \"bYM6\",\n\t\"./ar-tn.js\": \"bYM6\",\n\t\"./ar.js\": \"jnO4\",\n\t\"./az\": \"SFxW\",\n\t\"./az.js\": \"SFxW\",\n\t\"./be\": \"H8ED\",\n\t\"./be.js\": \"H8ED\",\n\t\"./bg\": \"hKrs\",\n\t\"./bg.js\": \"hKrs\",\n\t\"./bm\": \"p/rL\",\n\t\"./bm.js\": \"p/rL\",\n\t\"./bn\": \"kEOa\",\n\t\"./bn-bd\": \"loYQ\",\n\t\"./bn-bd.js\": \"loYQ\",\n\t\"./bn.js\": \"kEOa\",\n\t\"./bo\": \"0mo+\",\n\t\"./bo.js\": \"0mo+\",\n\t\"./br\": \"aIdf\",\n\t\"./br.js\": \"aIdf\",\n\t\"./bs\": \"JVSJ\",\n\t\"./bs.js\": \"JVSJ\",\n\t\"./ca\": \"1xZ4\",\n\t\"./ca.js\": \"1xZ4\",\n\t\"./cs\": \"PA2r\",\n\t\"./cs.js\": \"PA2r\",\n\t\"./cv\": \"A+xa\",\n\t\"./cv.js\": \"A+xa\",\n\t\"./cy\": \"l5ep\",\n\t\"./cy.js\": \"l5ep\",\n\t\"./da\": \"DxQv\",\n\t\"./da.js\": \"DxQv\",\n\t\"./de\": \"tGlX\",\n\t\"./de-at\": \"s+uk\",\n\t\"./de-at.js\": \"s+uk\",\n\t\"./de-ch\": \"u3GI\",\n\t\"./de-ch.js\": \"u3GI\",\n\t\"./de.js\": \"tGlX\",\n\t\"./dv\": \"WYrj\",\n\t\"./dv.js\": \"WYrj\",\n\t\"./el\": \"jUeY\",\n\t\"./el.js\": \"jUeY\",\n\t\"./en-au\": \"Dmvi\",\n\t\"./en-au.js\": \"Dmvi\",\n\t\"./en-ca\": \"OIYi\",\n\t\"./en-ca.js\": \"OIYi\",\n\t\"./en-gb\": \"Oaa7\",\n\t\"./en-gb.js\": \"Oaa7\",\n\t\"./en-ie\": \"4dOw\",\n\t\"./en-ie.js\": \"4dOw\",\n\t\"./en-il\": \"czMo\",\n\t\"./en-il.js\": \"czMo\",\n\t\"./en-in\": \"7C5Q\",\n\t\"./en-in.js\": \"7C5Q\",\n\t\"./en-nz\": \"b1Dy\",\n\t\"./en-nz.js\": \"b1Dy\",\n\t\"./en-sg\": \"t+mt\",\n\t\"./en-sg.js\": \"t+mt\",\n\t\"./eo\": \"Zduo\",\n\t\"./eo.js\": \"Zduo\",\n\t\"./es\": \"iYuL\",\n\t\"./es-do\": \"CjzT\",\n\t\"./es-do.js\": \"CjzT\",\n\t\"./es-mx\": \"tbfe\",\n\t\"./es-mx.js\": \"tbfe\",\n\t\"./es-us\": \"Vclq\",\n\t\"./es-us.js\": \"Vclq\",\n\t\"./es.js\": \"iYuL\",\n\t\"./et\": \"7BjC\",\n\t\"./et.js\": \"7BjC\",\n\t\"./eu\": \"D/JM\",\n\t\"./eu.js\": \"D/JM\",\n\t\"./fa\": \"jfSC\",\n\t\"./fa.js\": \"jfSC\",\n\t\"./fi\": \"gekB\",\n\t\"./fi.js\": \"gekB\",\n\t\"./fil\": \"1ppg\",\n\t\"./fil.js\": \"1ppg\",\n\t\"./fo\": \"ByF4\",\n\t\"./fo.js\": \"ByF4\",\n\t\"./fr\": \"nyYc\",\n\t\"./fr-ca\": \"2fjn\",\n\t\"./fr-ca.js\": \"2fjn\",\n\t\"./fr-ch\": \"Dkky\",\n\t\"./fr-ch.js\": \"Dkky\",\n\t\"./fr.js\": \"nyYc\",\n\t\"./fy\": \"cRix\",\n\t\"./fy.js\": \"cRix\",\n\t\"./ga\": \"USCx\",\n\t\"./ga.js\": \"USCx\",\n\t\"./gd\": \"9rRi\",\n\t\"./gd.js\": \"9rRi\",\n\t\"./gl\": \"iEDd\",\n\t\"./gl.js\": \"iEDd\",\n\t\"./gom-deva\": \"qvJo\",\n\t\"./gom-deva.js\": \"qvJo\",\n\t\"./gom-latn\": \"DKr+\",\n\t\"./gom-latn.js\": \"DKr+\",\n\t\"./gu\": \"4MV3\",\n\t\"./gu.js\": \"4MV3\",\n\t\"./he\": \"x6pH\",\n\t\"./he.js\": \"x6pH\",\n\t\"./hi\": \"3E1r\",\n\t\"./hi.js\": \"3E1r\",\n\t\"./hr\": \"S6ln\",\n\t\"./hr.js\": \"S6ln\",\n\t\"./hu\": \"WxRl\",\n\t\"./hu.js\": \"WxRl\",\n\t\"./hy-am\": \"1rYy\",\n\t\"./hy-am.js\": \"1rYy\",\n\t\"./id\": \"UDhR\",\n\t\"./id.js\": \"UDhR\",\n\t\"./is\": \"BVg3\",\n\t\"./is.js\": \"BVg3\",\n\t\"./it\": \"bpih\",\n\t\"./it-ch\": \"bxKX\",\n\t\"./it-ch.js\": \"bxKX\",\n\t\"./it.js\": \"bpih\",\n\t\"./ja\": \"B55N\",\n\t\"./ja.js\": \"B55N\",\n\t\"./jv\": \"tUCv\",\n\t\"./jv.js\": \"tUCv\",\n\t\"./ka\": \"IBtZ\",\n\t\"./ka.js\": \"IBtZ\",\n\t\"./kk\": \"bXm7\",\n\t\"./kk.js\": \"bXm7\",\n\t\"./km\": \"6B0Y\",\n\t\"./km.js\": \"6B0Y\",\n\t\"./kn\": \"PpIw\",\n\t\"./kn.js\": \"PpIw\",\n\t\"./ko\": \"Ivi+\",\n\t\"./ko.js\": \"Ivi+\",\n\t\"./ku\": \"JCF/\",\n\t\"./ku.js\": \"JCF/\",\n\t\"./ky\": \"lgnt\",\n\t\"./ky.js\": \"lgnt\",\n\t\"./lb\": \"RAwQ\",\n\t\"./lb.js\": \"RAwQ\",\n\t\"./lo\": \"sp3z\",\n\t\"./lo.js\": \"sp3z\",\n\t\"./lt\": \"JvlW\",\n\t\"./lt.js\": \"JvlW\",\n\t\"./lv\": \"uXwI\",\n\t\"./lv.js\": \"uXwI\",\n\t\"./me\": \"KTz0\",\n\t\"./me.js\": \"KTz0\",\n\t\"./mi\": \"aIsn\",\n\t\"./mi.js\": \"aIsn\",\n\t\"./mk\": \"aQkU\",\n\t\"./mk.js\": \"aQkU\",\n\t\"./ml\": \"AvvY\",\n\t\"./ml.js\": \"AvvY\",\n\t\"./mn\": \"lYtQ\",\n\t\"./mn.js\": \"lYtQ\",\n\t\"./mr\": \"Ob0Z\",\n\t\"./mr.js\": \"Ob0Z\",\n\t\"./ms\": \"6+QB\",\n\t\"./ms-my\": \"ZAMP\",\n\t\"./ms-my.js\": \"ZAMP\",\n\t\"./ms.js\": \"6+QB\",\n\t\"./mt\": \"G0Uy\",\n\t\"./mt.js\": \"G0Uy\",\n\t\"./my\": \"honF\",\n\t\"./my.js\": \"honF\",\n\t\"./nb\": \"bOMt\",\n\t\"./nb.js\": \"bOMt\",\n\t\"./ne\": \"OjkT\",\n\t\"./ne.js\": \"OjkT\",\n\t\"./nl\": \"+s0g\",\n\t\"./nl-be\": \"2ykv\",\n\t\"./nl-be.js\": \"2ykv\",\n\t\"./nl.js\": \"+s0g\",\n\t\"./nn\": \"uEye\",\n\t\"./nn.js\": \"uEye\",\n\t\"./oc-lnc\": \"Fnuy\",\n\t\"./oc-lnc.js\": \"Fnuy\",\n\t\"./pa-in\": \"8/+R\",\n\t\"./pa-in.js\": \"8/+R\",\n\t\"./pl\": \"jVdC\",\n\t\"./pl.js\": \"jVdC\",\n\t\"./pt\": \"8mBD\",\n\t\"./pt-br\": \"0tRk\",\n\t\"./pt-br.js\": \"0tRk\",\n\t\"./pt.js\": \"8mBD\",\n\t\"./ro\": \"lyxo\",\n\t\"./ro.js\": \"lyxo\",\n\t\"./ru\": \"lXzo\",\n\t\"./ru.js\": \"lXzo\",\n\t\"./sd\": \"Z4QM\",\n\t\"./sd.js\": \"Z4QM\",\n\t\"./se\": \"//9w\",\n\t\"./se.js\": \"//9w\",\n\t\"./si\": \"7aV9\",\n\t\"./si.js\": \"7aV9\",\n\t\"./sk\": \"e+ae\",\n\t\"./sk.js\": \"e+ae\",\n\t\"./sl\": \"gVVK\",\n\t\"./sl.js\": \"gVVK\",\n\t\"./sq\": \"yPMs\",\n\t\"./sq.js\": \"yPMs\",\n\t\"./sr\": \"zx6S\",\n\t\"./sr-cyrl\": \"E+lV\",\n\t\"./sr-cyrl.js\": \"E+lV\",\n\t\"./sr.js\": \"zx6S\",\n\t\"./ss\": \"Ur1D\",\n\t\"./ss.js\": \"Ur1D\",\n\t\"./sv\": \"X709\",\n\t\"./sv.js\": \"X709\",\n\t\"./sw\": \"dNwA\",\n\t\"./sw.js\": \"dNwA\",\n\t\"./ta\": \"PeUW\",\n\t\"./ta.js\": \"PeUW\",\n\t\"./te\": \"XLvN\",\n\t\"./te.js\": \"XLvN\",\n\t\"./tet\": \"V2x9\",\n\t\"./tet.js\": \"V2x9\",\n\t\"./tg\": \"Oxv6\",\n\t\"./tg.js\": \"Oxv6\",\n\t\"./th\": \"EOgW\",\n\t\"./th.js\": \"EOgW\",\n\t\"./tk\": \"Wv91\",\n\t\"./tk.js\": \"Wv91\",\n\t\"./tl-ph\": \"Dzi0\",\n\t\"./tl-ph.js\": \"Dzi0\",\n\t\"./tlh\": \"z3Vd\",\n\t\"./tlh.js\": \"z3Vd\",\n\t\"./tr\": \"DoHr\",\n\t\"./tr.js\": \"DoHr\",\n\t\"./tzl\": \"z1FC\",\n\t\"./tzl.js\": \"z1FC\",\n\t\"./tzm\": \"wQk9\",\n\t\"./tzm-latn\": \"tT3J\",\n\t\"./tzm-latn.js\": \"tT3J\",\n\t\"./tzm.js\": \"wQk9\",\n\t\"./ug-cn\": \"YRex\",\n\t\"./ug-cn.js\": \"YRex\",\n\t\"./uk\": \"raLr\",\n\t\"./uk.js\": \"raLr\",\n\t\"./ur\": \"UpQW\",\n\t\"./ur.js\": \"UpQW\",\n\t\"./uz\": \"Loxo\",\n\t\"./uz-latn\": \"AQ68\",\n\t\"./uz-latn.js\": \"AQ68\",\n\t\"./uz.js\": \"Loxo\",\n\t\"./vi\": \"KSF8\",\n\t\"./vi.js\": \"KSF8\",\n\t\"./x-pseudo\": \"/X5v\",\n\t\"./x-pseudo.js\": \"/X5v\",\n\t\"./yo\": \"fzPg\",\n\t\"./yo.js\": \"fzPg\",\n\t\"./zh-cn\": \"XDpg\",\n\t\"./zh-cn.js\": \"XDpg\",\n\t\"./zh-hk\": \"SatO\",\n\t\"./zh-hk.js\": \"SatO\",\n\t\"./zh-mo\": \"OmwH\",\n\t\"./zh-mo.js\": \"OmwH\",\n\t\"./zh-tw\": \"kOpN\",\n\t\"./zh-tw.js\": \"kOpN\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"RnhZ\";","<div class=\"container-fluid bg-color\">\r\n  <div class=\"row content\">\r\n    <div class=\"col-md-7\">\r\n      <div class=\"item-container\">\r\n        <h2>List item for sale</h2>\r\n        <div class=\"d-flex justify-content-between mrg-btm-12\">\r\n          <div>Type</div>\r\n          <div><i class=\"fas fa-exclamation-circle\"></i></div>\r\n        </div>\r\n        <ul class=\"nav nav-tabs border-0 mrg-btm-15\">\r\n          <li class=\"tabs-list\">\r\n            <a\r\n              data-target=\"#tab1\"\r\n              data-toggle=\"tab\"\r\n              class=\"m-0 firstboxtab active\"\r\n            >\r\n              <div class=\"d-flex tab-box-content\">\r\n                <div><i class=\"fas fa-dollar-sign\"></i></div>\r\n                <div>Fixed Price</div>\r\n              </div>\r\n            </a>\r\n          </li>\r\n          <li class=\"tabs-list disabled\">\r\n            <a\r\n              data-target=\"#tab2\"\r\n              data-toggle=\"tab\"\r\n              class=\"secondboxtab disabled\"\r\n            >\r\n              <div class=\"d-flex tab-box-content\">\r\n                <div><i class=\"fas fa-clock\"></i></div>\r\n                <div>Timed Auction</div>\r\n              </div>\r\n            </a>\r\n          </li>\r\n        </ul>\r\n        <div class=\"tab-content\">\r\n          <div id=\"tab1\" class=\"tab-pane active\">\r\n            <div class=\"d-flex justify-content-between mrg-btm-12\">\r\n              <div>Price</div>\r\n              <div><i class=\"fas fa-exclamation-circle\"></i></div>\r\n            </div>\r\n            <div class=\"d-flex mrg-btm-15\">\r\n              <div class=\"ethbtn\">\r\n                <div class=\"mat-dropdown-container\">\r\n                  <!-- <mat-form-field style=\"width:88%;\">\r\n                    <mat-select placeholder=\"Contact *\" formControlName=\"contact\">\r\n                      <mat-select-trigger>\r\n                        <mat-icon>home</mat-icon>&nbsp;{{contact.institution}}\r\n                      </mat-select-trigger>\r\n                      <mat-option *ngFor=\"let contact of contacts\" [value]=\"contact\">\r\n                        <mat-icon [ngStyle]=\"{'color': contact.color}\">home</mat-icon>{{contact.institution}} \r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field> -->\r\n                  <!-- <mat-select\r\n                    placeholder=\"Select Currancy\"\r\n                    class=\"mat-dropdown\"\r\n                  >\r\n                    <mat-select-trigger >\r\n                      <span class=\"cardino-icon mr-3\"></span> ADA\r\n                    </mat-select-trigger>\r\n                    <mat-option [value]=\"1\"\r\n                      ><span class=\"cardino-icon mr-3\"></span>ADA\r\n                    </mat-option>\r\n                  </mat-select> -->\r\n\r\n                  <span class=\"select-span\">\r\n                    <span class=\"cardino-icon mr-3\"></span> ADA\r\n                  </span>\r\n                </div>\r\n                <!-- <button class=\"etherium-btn tab-button\">\r\n                  <i class=\"fab fa-ethereum mr-3\"></i>ETH\r\n                </button> -->\r\n              </div>\r\n              <div class=\"inotamount\">\r\n                <div class=\"validate-input\">\r\n                  <input type=\"number\" value=\"amounshow\" min=\"{{amountresit}}\" class=\"amount-field\" id=\"amounshow\" name=\"amounshow\" [(ngModel)]=\"amounshow\" onkeyup=\"if(this.value<0){this.value= this.value * -1}\"/>\r\n                  \r\n                  <div class=\"alert alert-danger mt-2\" role=\"alert\" *ngIf=\"amounshow < amountresit\">\r\n                    Price should be >= to minting price.\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"schedule-wrapper\">\r\n              <p class=\"mrg-btm-12\">Schedule Listing</p>\r\n              <div>\r\n                <input\r\n                  type=\"datetime-local\"\r\n                  placeholder=\"6 Months\"\r\n                  class=\"calender-field\"\r\n                  disabled=\"true\"\r\n                  \r\n                />\r\n              </div>\r\n            </div>\r\n            <div class=\"d-flex bundle-wrapper mb-4\">\r\n              <div>Sell as a Bundle</div>\r\n              <div>\r\n                <label class=\"switch\">\r\n                  <input type=\"checkbox\" disabled=\"true\" />\r\n                  <span class=\"slider round\"></span>\r\n                </label>\r\n              </div>\r\n            </div>\r\n            <div class=\"d-flex bundle-wrapper mb-2\">\r\n              <div>Reserve for specific buyer</div>\r\n              <div>\r\n                <label class=\"switch\">\r\n                  <input type=\"checkbox\" disabled=\"true\" />\r\n                  <span class=\"slider round\"></span>\r\n                </label>\r\n              </div>\r\n            </div>\r\n            <div class=\"d-flex align-items-center my-4 border-bottom-wrapper\">\r\n              <p class=\"text-color-wrapper\">\r\n                Fewer Option<i class=\"fas fa-chevron-up ml-3\"></i>\r\n              </p>\r\n            </div>\r\n            <div class=\"mb-5\">\r\n              <div class=\"d-flex justify-content-between\">\r\n                <div>\r\n                  <h3>Fees</h3>\r\n                </div>\r\n                <div>\r\n                  <a href=\"javascript:void(0)\" (click)=\"feeshow()\" class=\"text-white\">\r\n                  <i class=\"fas fa-exclamation-circle\"></i>\r\n                </a>\r\n                </div>\r\n              </div>\r\n              <div class=\"d-flex justify-content-between\">\r\n                <div>Service Fee</div>\r\n                <div *ngIf=\"feeamount\">1.77%</div>\r\n              </div>\r\n              <!-- <div class=\"d-flex justify-content-between\">\r\n                <div>Creator Royality</div>\r\n                <div>10.0%</div>\r\n              </div> -->\r\n            </div>\r\n            <button class=\"btn-wrapper tab-button position-relative\" (click)=\"getAmount()\" [disabled]=\"amounshow < amountresit\" [ngClass]=\"{'custumspinner' : disablebtn}\">Complete listing</button>\r\n          </div>\r\n          <div id=\"tab2\" class=\"tab-pane\">this is Tab 2.</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-5\">\r\n      <div class=\"preview-container\">\r\n        <p>Preview</p>\r\n        <div class=\"img-container\">\r\n          <div class=\"img-wrapper\">\r\n            <!-- <img src=\"assets/rare/r1.png\" class=\"img-fluid\" /> -->\r\n            <img [src]=\"nftImg\" class=\"img-fluid\" />\r\n            <!-- <img src={`assets/{selectedNft.nftType}/${selectedNft.src}`} class=\"img-fluid\" /> -->\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from \"@angular/router\";\r\nimport { NFTsAPIServices } from \"../../services/nft.service\";\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { SpinnerService } from '../../helper/spinner/spinner.service';\r\nimport { environment as env } from '../../../environments/environment';\r\nimport Loader from '../../services/nami-loader.service';\r\n@Component({\r\n  selector: 'app-sell-form',\r\n  templateUrl: './sell-form.component.html',\r\n  styleUrls: ['./sell-form.component.scss']\r\n})\r\nexport class SellFormComponent implements OnInit {\r\n  adminNamiWalletAddress = env.adminNamiWalletAddress;\r\n  ASSET_TRANSFER_PRICE = env.ASSET_TRANSFER_PRICE;\r\n\r\n  selectedNft: any;\r\n  nftImg: any;\r\n  feeamount: boolean = false;\r\n  inputvalue: any;\r\n  authUser: any = null;\r\n  disablebtn:any = false;\r\n  constructor(\r\n    private readonly APIServices: NFTsAPIServices,\r\n    private readonly router: Router,\r\n    private toastr: ToastrService,\r\n    private spinnerService: SpinnerService\r\n  ) { }\r\n\r\n  amounshow: string = '';\r\n  amountresit: string = '';\r\n\r\n  async ngOnInit() {\r\n    // const userApiResp: any = await new Promise(async (resolve, reject) => {\r\n    //   const regUser = await this.APIServices.userRegister({\r\n    //     walletAddr: await Loader.CardanoWalletAddress()\r\n    //   });\r\n    //   resolve(regUser)\r\n    // });\r\n    // if (userApiResp.status) {\r\n    //   // localStorage.setItem(\"token\", userApiResp.token);\r\n    //   this.authUser = userApiResp.data;\r\n    // }\r\n    this.APIServices.userLoginData$.subscribe((data) => {\r\n      console.log(data, 'SELL FORM component');\r\n      this.authUser = data;\r\n    })\r\n\r\n    // const checkWallet = await Loader.verifyWallet(0, this.authUser.type);\r\n    // if (checkWallet !== true) {\r\n    //   this.toastr.warning(checkWallet);\r\n    //   this.router.navigateByUrl(\"/nft\");\r\n    // }\r\n\r\n    const data: any = localStorage.getItem(\"selectedNft\");\r\n    this.selectedNft = JSON.parse(data);\r\n    this.nftImg = `assets/${this.selectedNft.nftType}/${this.selectedNft.src}`;\r\n    this.inputvalue = this.selectedNft.amount;\r\n    this.amounshow = this.selectedNft.amount;\r\n    this.amountresit = this.selectedNft.amount;\r\n    // this.APIServices.userLoginData$.subscribe((data) => {\r\n    //   console.log(data, '@dadadadad');\r\n    //   this.selectedNft = data;\r\n    // })\r\n    if (this.amounshow < this.amountresit) {\r\n      this.toastr.error(\"Unable to list asset\");\r\n    }\r\n\r\n  }\r\n\r\n  redirectlandingPage() {\r\n    this.router.navigateByUrl(\"/nft\");\r\n  }\r\n\r\n  getAmount = async () => {\r\n    console.log(this.selectedNft, 'amount', this.amounshow);\r\n    this.disablebtn = true;\r\n    // this.selectedNft = localStorage.getItem(\"selectedNft\");\r\n    if (this.selectedNft) {\r\n      // this.selectedNft = JSON.parse(this.selectedNft);\r\n\r\n      const sellAsset = {\r\n        userNftId: this.selectedNft.userNftId,\r\n        amount: Number(this.amounshow),\r\n        mintToken: this.selectedNft.mintToken,\r\n      }\r\n      console.log(\"sellAsset : \", sellAsset);\r\n      const transectionFee =  this.ASSET_TRANSFER_PRICE;\r\n\r\n      // Transfer amount (royalty fee + Asset amount) from connected wallet's address to admin\r\n      try {\r\n        const Nami = await Loader.Cardano();\r\n\r\n        const checkWallet = await Loader.verifyWallet(transectionFee, this.authUser.type);\r\n        console.log(\"transectionFee: \",transectionFee, sellAsset.amount, \"putOnSale verifyWallet => \", checkWallet);\r\n\r\n        // const walletBalance = localStorage.getItem(\"lovelaces\") ? localStorage.getItem(\"lovelaces\") : 0;\r\n        // console.log(\"balance cond: \", walletBalance, Number(walletBalance) / 1000000, transectionFee + 1, Number(walletBalance) / 1000000 > transectionFee + 1);\r\n        // if (walletBalance && Number(walletBalance) / 1000000 > transectionFee + 1) {\r\n\r\n        if (checkWallet !== true) {\r\n          this.toastr.warning(checkWallet);\r\n          return;\r\n        }\r\n\r\n        const nftResp: any = await new Promise(async (resolve, reject) => {\r\n          const resp = await this.APIServices.verifyUserNft({\r\n            userNftId: this.selectedNft.userNftId,\r\n            action: 'list'\r\n          });\r\n          resolve(resp)\r\n        });\r\n        if (!nftResp.status) {\r\n          this.toastr.error(nftResp.msg);\r\n          return;\r\n        }\r\n\r\n        const txHash = await Nami.send({\r\n          address: this.adminNamiWalletAddress, // ADMIN ADDRESS\r\n          amount: transectionFee,\r\n          assets: [\r\n            {\r\n              \"unit\": this.selectedNft.mintToken,\r\n              \"quantity\": \"1\"\r\n            }\r\n          ],\r\n        })\r\n\r\n        if (!txHash) {\r\n          this.toastr.error(\"Unable to list NFT\");\r\n        } else {\r\n          // this.spinnerService.show();\r\n\r\n          // update token price\r\n          this.APIServices.setTokenPrice(sellAsset)\r\n            .then((res) => {\r\n              // this.spinnerService.hide();\r\n              if (res.status) {\r\n                this.redirectlandingPage()\r\n                this.toastr.success(res.msg);\r\n              } else {\r\n                this.toastr.error(res.msg);\r\n              }\r\n            })\r\n            .catch((err) => {\r\n              // this.spinnerService.hide();\r\n              console.log(\"Error is: \", err);\r\n            });\r\n        }\r\n\r\n      } catch (error) {\r\n        console.log(\"Error :: \", error);\r\n        if (error && error.code) {\r\n          this.toastr.error(error.info);\r\n          this.disablebtn = false;\r\n        } else {\r\n          this.toastr.error(\"Something went wrong\");\r\n          this.disablebtn = false;\r\n        }\r\n      }\r\n\r\n    } else {\r\n      this.toastr.error(\"Something went wrong\");\r\n      this.disablebtn = false;\r\n    }\r\n  }\r\n\r\n  feeshow() {\r\n    this.feeamount = !this.feeamount\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class LocalDataUpdateService {\r\n\r\n    totalSlots = 50;\r\n    slotMaxHours = 4;\r\n    maxSlotsPerSlot = 207;\r\n\r\n    private initSlotsReservationData = new BehaviorSubject<boolean>(false);\r\n    private slotsReservationData = new BehaviorSubject<boolean>(false);\r\n    private personalPeriodStakeSlotLeftData = new BehaviorSubject<boolean>(false);\r\n    private stakePaginationData = new BehaviorSubject<string>('');\r\n    private stakeTransactionsData = new BehaviorSubject<boolean>(false);\r\n    private claimTokenHolderTransactionRewardData = new BehaviorSubject<boolean>(false);\r\n    private transactionApproval = new BehaviorSubject<boolean>(false);\r\n    private walletBalanceData = new BehaviorSubject<boolean>(false);\r\n    private exchangeRateData = new BehaviorSubject<boolean>(false);\r\n    private claimableAmountData = new BehaviorSubject<boolean>(false);\r\n    private dialogInitData = new BehaviorSubject<boolean>(false);\r\n    isInitSlotsReservationDataUpdated = this.initSlotsReservationData.asObservable();\r\n    isSlotsReservationDataUpdated = this.slotsReservationData.asObservable();\r\n    isPersonalPeriodStakeSlotLeftDataUpdated = this.personalPeriodStakeSlotLeftData.asObservable();\r\n    isStakePaginationDataUpdated = this.stakePaginationData.asObservable();\r\n    isStakeTransactionsDataUpdated = this.stakeTransactionsData.asObservable();\r\n    isClaimTokenHolderTransactionRewardDataUpdated = this.claimTokenHolderTransactionRewardData.asObservable();\r\n    isTransactionApproved = this.transactionApproval.asObservable();\r\n    isWalletBalanceDataUpdated = this.walletBalanceData.asObservable();\r\n    isExchangeRateDataUpdated = this.exchangeRateData.asObservable();\r\n    isClaimableAmountDataUpdated = this.claimableAmountData.asObservable();\r\n    isDialogDataUpdated = this.dialogInitData.asObservable();\r\n\r\n    constructor() { }\r\n\r\n    forceInitSlotsReservationData(data: boolean) {\r\n        this.initSlotsReservationData.next(data);\r\n    }\r\n    forceUpdateSlotsReservationData(data: boolean) {\r\n        this.slotsReservationData.next(data);\r\n    }\r\n    forceUpdatePersonalPeriodStakeSlotLeftData(data: boolean) {\r\n        this.personalPeriodStakeSlotLeftData.next(data);\r\n    }\r\n    forceUpdateStakePaginationData(data: string) {\r\n        this.stakePaginationData.next(data);\r\n    }\r\n    forceUpdateStakeTransactionsData(data: boolean) {\r\n        this.stakeTransactionsData.next(data);\r\n    }\r\n    forceUpdateClaimTokenHolderTransactionRewardData(data: boolean) {\r\n        this.claimTokenHolderTransactionRewardData.next(data);\r\n    }\r\n    updateTransactionApproved(data: boolean) {\r\n        this.transactionApproval.next(data);\r\n    }\r\n    forceUpdateWalletBalanceData(data: boolean) {\r\n        this.walletBalanceData.next(data);\r\n    }\r\n    forceUpdateExchangeRateData(data: boolean) {\r\n        this.exchangeRateData.next(data);\r\n    }\r\n    forceUpdateClaimableAmountData(data: boolean) {\r\n        this.claimableAmountData.next(data);\r\n    }\r\n    forceUpdateDialogData(data: boolean) {\r\n        this.dialogInitData.next(data);\r\n    }\r\n}\r\n","<div\r\n  class=\"header container-fluid\"\r\n  id=\"myHeader\"\r\n  style=\"\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    background-color: #26253d;\r\n    position: fixed;\r\n    z-index: 999;\r\n    padding-top: 12px;\r\n  \"\r\n>\r\n  <div class=\"col-lg-5 d-flex align-items-center\">\r\n    <div class=\"mobile-nav\">\r\n      <div id=\"mobilemenu\">\r\n      <div id=\"mySidenav\" class=\"sidenav\">\r\n        <span\r\n          href=\"javascript:void(0)\"\r\n          class=\"closebtn\"\r\n          onclick=\"closeNav()\"\r\n          style=\"color: #fff\"\r\n          >&times;</span\r\n        >\r\n        <div>\r\n          <div\r\n            class=\"moile_social_links d-lg-none d-flex my-auto mx-0\"\r\n            style=\"padding-left: 0px; padding-right: 0px\"\r\n          >\r\n            <!-- Facebook -->\r\n            <!-- <a  href=\"javascript:void(0)\" role=\"button\"\r\n              ><span class=\"telegram-icon social-icons\"></span>\r\n            </a>\r\n\r\n            <a href=\"javascript:void(0)\" role=\"button\"\r\n              ><span class=\"twiter-logo social-icons\"></span>\r\n            </a>\r\n            <a href=\"javascript:void(0)\" role=\"button\"\r\n              ><span class=\"medium-logo social-icons\"></span>\r\n            </a>\r\n            <a\r\n              href=\"javascript:void(0)\"\r\n              role=\"button\"\r\n              ><span class=\"reddit-logo social-icons\"></span>\r\n            </a>\r\n            <a href=\"javascript:void(0)\" role=\"button\"\r\n              ><span class=\"discord-logo social-icons\"></span>\r\n            </a> -->\r\n          </div>\r\n\r\n          <!-- <button\r\n            class=\"\r\n              w3-button w3-black w3-round-xlarge\r\n              Connect-wallet-mobile\r\n              d-flex\r\n              align-items-center\r\n              justify-content-center\r\n              connectBtn\r\n              w3-black\r\n            \"\r\n            style=\"font-size: 25px; height: 65px\"\r\n            mat-button\r\n          >\r\n            Subscribe\r\n          </button> -->\r\n          <div class=\"d-flex align-items-center justify-content-center flex-column flex-sm-row\">\r\n            <!-- <a href=\"https://forms.sendpulse.com/6d3584fad8/\" target=\"_blank\" class=\"w-auto text-white mr-4\" style=\"padding: 0px !important;\">\r\n              Subscribe\r\n            </a> -->\r\n            <div class=\"d-flex align-items-center\" style=\"gap: 1em\">\r\n                <div style=\"width: 5rem; height: 5rem\">\r\n                  <svg fill=\"#FFF\" data-name=\"Icon Logo\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 60 60\"><path d=\"M46.47,20.07H41.16a2.15,2.15,0,0,1-1.61-.72l-2.16-2.42a1.69,1.69,0,0,0-2.53,0L33,19a3.21,3.21,0,0,1-2.39,1.07h-29A30.26,30.26,0,0,0,0,27.48H27.42a1.78,1.78,0,0,0,1.28-.54l2.56-2.66a1.67,1.67,0,0,1,1.22-.52h.1a1.7,1.7,0,0,1,1.27.57L36,26.75a2.17,2.17,0,0,0,1.61.73H60a30.26,30.26,0,0,0-1.58-7.41h-12Z\"></path> <path d=\"M16.6,43.05a1.78,1.78,0,0,0,1.27-.54l2.56-2.66a1.7,1.7,0,0,1,1.22-.52h.1A1.7,1.7,0,0,1,23,39.9l2.15,2.42a2.14,2.14,0,0,0,1.62.73H57.12a29.73,29.73,0,0,0,2.47-7.48H30.47a2.17,2.17,0,0,1-1.62-.72L26.7,32.42a1.69,1.69,0,0,0-2.53,0L22.32,34.5a3.18,3.18,0,0,1-2.38,1.07H.41a29.73,29.73,0,0,0,2.47,7.48Z\"></path> <path d=\"M38.12,12a1.74,1.74,0,0,0,1.27-.54L42,8.78a1.69,1.69,0,0,1,1.22-.51h.1a1.69,1.69,0,0,1,1.27.56l2.15,2.43a2.17,2.17,0,0,0,1.62.72h5.77A30.19,30.19,0,0,0,5.92,12Z\"></path> <path d=\"M26.53,50.46H18.64A2.17,2.17,0,0,1,17,49.74l-2.15-2.43a1.71,1.71,0,0,0-2.53,0l-1.85,2.08a3.18,3.18,0,0,1-2.38,1.07H8a30.16,30.16,0,0,0,44,0Z\"></path></svg>\r\n                </div>\r\n<!--                <h5 class=\"text-white text-nowrap\">First blue chip nft on APTos</h5>-->\r\n              <h3 class=\"mb-0 app-item-text\">First blue chip nft on APTos</h3>\r\n            </div>\r\n<!--            <div class=\"soical_icon\">-->\r\n<!--              <ul>-->\r\n<!--                <li><a href=\"https://twitter.com/Beyondowl\" target=\"_blank\"><img src=\"assets/twitter_vector.png\" class=\"img-responsive\"/></a></li>-->\r\n<!--                <li><a href=\"https://discord.com/invite/hhcDCEAvKx\" target=\"_blank\"><img src=\"assets/discord-logo.png\" class=\"img-responsive\"/></a></li>-->\r\n<!--&lt;!&ndash;                <li><a href=\"https://t.me/beyondowl\" target=\"_blank\"><img src=\"assets/telegram.png\" class=\"img-responsive\"/></a></li>&ndash;&gt;-->\r\n<!--&lt;!&ndash;                <li><a href=\"https://www.instagram.com/beyondowls/\" target=\"_blank\"><img src=\"assets/instagram.png\" class=\"img-responsive\"/></a></li>&ndash;&gt;-->\r\n<!--              </ul>-->\r\n<!--            </div>-->\r\n            <div _ngcontent-xlj-c232=\"\" class=\"soical_icon\"><ul _ngcontent-xlj-c232=\"\"><li _ngcontent-xlj-c232=\"\"><a _ngcontent-xlj-c232=\"\" href=\"https://twitter.com/Beyondowl\" target=\"_blank\"><img _ngcontent-xlj-c232=\"\" src=\"assets/twitter_vector.png\" class=\"img-responsive\"></a></li><li _ngcontent-xlj-c232=\"\"><a _ngcontent-xlj-c232=\"\" href=\"https://discord.com/invite/beyondowls\" target=\"_blank\"><img _ngcontent-xlj-c232=\"\" src=\"assets/discord-logo.png\" class=\"img-responsive\"></a></li></ul></div>\r\n            <!-- <button\r\n            class=\"\r\n            w3-button w3-black w3-round-xlarge\r\n            Connect-wallet-mobile\r\n            tealcolor\r\n            d-flex\r\n            align-items-center\r\n            justify-content-center\r\n            connectBtn\r\n            w-auto\r\n            \"\r\n            style=\"font-size: 20px; height: 65px\"\r\n\r\n\r\n                  mat-button [matMenuTriggerFor]=\"menumobile\"\r\n          >\r\n          <span  class=\"d-flex align-items-center\" *ngIf=\"!walletAddr\">Connect Wallet</span>\r\n    <span  class=\"d-flex align-items-center\" *ngIf=\"walletAddr\"> {{ walletAddr }} <span class=\"cardino-icon\" *ngIf=\"walletAddr\"><img\r\n      src=\"../assets/cardano-white.png\"\r\n\r\n    /></span> </span>\r\n\r\n\r\n\r\n          </button> -->\r\n          </div>\r\n\r\n\r\n\r\n\r\n\r\n    <!-- <mat-menu #menumobile=\"matMenu\" [overlapTrigger]=\"false\" [backdropClass]=\"'margin-remove'\">\r\n      <button\r\n      class=\"top_button\"\r\n      routerLink=\"my-nfts\"\r\n      queryParamsHandling=\"merge\"\r\n      onclick=\"closeNav()\"\r\n          *ngIf=\"walletAddr\"\r\n        >\r\n\r\n          <span><img src=\"../assets/NFT_Icon.png\"></span>\r\n        <span>My Nfts</span>\r\n        </button>\r\n\r\n      <button class=\"top_button\" (click)=\"connectWithCardanoWallet()\" [ngClass]=\"{ 'notallowed' : walletAddr }\">\r\n         <span><img src=\"../assets/nami-icon2.svg\"></span>\r\n        <span>Nami Wallet</span>\r\n      </button>\r\n\r\n        <button class=\"top_button d-inline-flex\" (click)=\"connectCCVault()\">\r\n        <span><img src=\"../assets/ccvault.png\"></span>\r\n        <span>Eternl Wallet <br> Coming Soon</span>\r\n\r\n\r\n\r\n     </button>\r\n    </mat-menu> -->\r\n          <!-- <a href=\"/login\" class=\"login-icon\">\r\n            <i class=\"fa fa-sign-in-alt\"></i>\r\n          </a> -->\r\n          <!-- <button\r\n            *ngIf=\"!isLogin\"\r\n            class=\"w3-button w3-black w3-round-xlarge Connect-wallet-mobile\"\r\n            (click)=\"connectToWallet()\"\r\n            style=\"font-size: 25px\"\r\n          >\r\n            Connect to Wallet\r\n          </button> -->\r\n\r\n          <!-- <button\r\n            *ngIf=\"isLogin\"\r\n            class=\"w3-button w3-black w3-round-xlarge Connect-wallet-mobile\"\r\n            (click)=\"logout()\"\r\n          >\r\n\r\n            <span class=\"truncate\" style=\"font-size: 25px\">\r\n              {{ accountNo | formattedAccountNo }}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n              <i class=\"fas fa-sign-out-alt logout\" aria-hidden=\"true\"></i>\r\n            </span>\r\n          </button> -->\r\n        </div>\r\n        <div>\r\n          <a\r\n            routerLinkActive=\"active\"\r\n            routerLink=\"/home\"\r\n            queryParamsHandling=\"merge\"\r\n            onclick=\"closeNav()\"\r\n          >\r\n            <img\r\n              class=\"sidebar-icon\"\r\n              src=\"https://bnb-grise-assests.s3.us-west-2.amazonaws.com/assets/home.png\"\r\n              alt=\"home\"\r\n            />\r\n            <br />\r\n            <label class=\"mb-0 app-item-text\">Home</label>\r\n          </a>\r\n        </div>\r\n\r\n\r\n        <!-- <div>\r\n          <a\r\n            routerLinkActive=\"active\"\r\n            routerLink=\"/nft\"\r\n            queryParamsHandling=\"merge\"\r\n            onclick=\"closeNav()\"\r\n          >\r\n            <img\r\n              class=\"sidebar-icon\"\r\n              src=\"https://bnb-grise-assests.s3.us-west-2.amazonaws.com/assets/NFT.png\"\r\n              alt=\"NFT\"\r\n            />\r\n            <br />\r\n            <label class=\"mb-0 app-item-text\">NFT</label>\r\n          </a>\r\n        </div> -->\r\n        <div>\r\n          <a\r\n            routerLinkActive=\"active\"\r\n            routerLink=\"/nft-collection\"\r\n            queryParamsHandling=\"merge\"\r\n            onclick=\"closeNav()\"\r\n          >\r\n            <img\r\n              class=\"sidebar-icon\"\r\n              src=\"../assets/NFT.png\"\r\n              alt=\"reservation\"\r\n            />\r\n            <br />\r\n            <label class=\"mb-0 app-item-text\">NFT Collection</label>\r\n          </a>\r\n        </div>\r\n        <!-- <div>\r\n          <a\r\n            routerLinkActive=\"active\"\r\n            routerLink=\"tokeninfo\"\r\n            queryParamsHandling=\"merge\"\r\n            onclick=\"closeNav()\"\r\n          >\r\n            <img\r\n              class=\"sidebar-icon\"\r\n              src=\"../assets/tokeninfo.png\"\r\n              alt=\"tokeninfo\"\r\n            />\r\n            <br />\r\n            <label class=\"mb-0 app-item-text\">Token info</label>\r\n          </a>\r\n        </div> -->\r\n\r\n        <!-- <div>\r\n          <a\r\n            routerLinkActive=\"active\"\r\n            routerLink=\"/AI\"\r\n            queryParamsHandling=\"merge\"\r\n            onclick=\"closeNav()\"\r\n          >\r\n            <img\r\n              class=\"sidebar-icon\"\r\n              src=\"https://bnb-grise-assests.s3.us-west-2.amazonaws.com/assets/AI-Cryptokenomics.png\"\r\n              alt=\"cryptometrix\"\r\n            />\r\n            <br />\r\n            <label class=\"mb-0 app-item-text\">AI</label>\r\n          </a>\r\n        </div> -->\r\n        <!-- <div>\r\n          <a\r\n            routerLinkActive=\"active\"\r\n            routerLink=\"/roadmap\"\r\n            queryParamsHandling=\"merge\"\r\n            onclick=\"closeNav()\"\r\n          >\r\n            <img\r\n              class=\"sidebar-icon\"\r\n              src=\"../assets/vaultz.png\"\r\n              alt=\"cryptometrix\"\r\n            />\r\n            <br />\r\n            <label class=\"mb-0 app-item-text\">Roadmap</label>\r\n          </a>\r\n        </div> -->\r\n        <!--<div>\r\n          <a\r\n            routerLinkActive=\"active\"\r\n            routerLink=\"/dashboard\"\r\n            queryParamsHandling=\"merge\"\r\n            onclick=\"closeNav()\"\r\n          >\r\n            <img\r\n              class=\"sidebar-icon\"\r\n              src=\"https://bnb-grise-assests.s3.us-west-2.amazonaws.com/assets/dashboard.png\"\r\n              alt=\"dashboard\"\r\n            />\r\n            <br />\r\n            <label class=\"mb-0 app-item-text\">Dashboard</label>\r\n          </a>\r\n        </div>-->\r\n        <div  class=\"sidebar-dropdown\">\r\n          <a routerLinkActive=\"active\" routerLink=\"/AI\" queryParamsHandling=\"merge\">\r\n            <img class=\"sidebar-icon\" src=\"https://bnb-grise-assests.s3.us-west-2.amazonaws.com/assets/AI-Cryptokenomics.png\" alt=\"cryptometrix\">\r\n            <br>\r\n            <label class=\"mb-0 app-item-text\">AI</label>\r\n          </a>\r\n\r\n          <div class=\"sidebar-dropdown-menu\">\r\n            <a class=\"ai-drop-item\"  routerLink=\"/AI\" queryParamsHandling=\"merge\" onclick=\"closeNav()\">\r\n              <label class=\"mb-0 app-item-text\">Indices</label>\r\n            </a>\r\n            <a class=\"ai-drop-item\"  routerLinkActive=\"active\" routerLink=\"/sentiment-analysis\" queryParamsHandling=\"merge\" onclick=\"closeNav()\">\r\n              <label class=\"mb-0 app-item-text\">Sentiment</label>\r\n              <br/>\r\n              <label class=\"mb-0 app-item-text\">Analysis</label>\r\n            </a>\r\n            <a class=\"ai-drop-item\"  routerLinkActive=\"active\" routerLink=\"/coin-details\" queryParamsHandling=\"merge\" onclick=\"closeNav()\">\r\n              <label class=\"mb-0 app-item-text\">Coin Details</label>\r\n            </a>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <a\r\n            routerLinkActive=\"active\"\r\n            routerLink=\"/moonverse\"\r\n            queryParamsHandling=\"merge\"\r\n            onclick=\"closeNav()\"\r\n          >\r\n            <img\r\n              class=\"sidebar-icon\"\r\n              src=\"https://bnb-grise-assests.s3.us-west-2.amazonaws.com/assets/tokenstat.png\"\r\n              alt=\"tokenstats\"\r\n            />\r\n            <br />\r\n            <label class=\"mb-0 app-item-text\">Moon Map</label>\r\n          </a>\r\n        </div>\r\n\r\n        <div>\r\n          <a\r\n            routerLinkActive=\"active\"\r\n            routerLink=\"/owly-bird\"\r\n            queryParamsHandling=\"merge\"\r\n            onclick=\"closeNav()\"\r\n          >\r\n            <img\r\n              class=\"sidebar-icon\"\r\n              src=\"../assets/owly_bird.png\"\r\n              alt=\"owly_bird\"\r\n            />\r\n            <br />\r\n            <label class=\"mb-0 app-item-text\">Owly Bird</label>\r\n          </a>\r\n\r\n        </div>\r\n\r\n        <!-- <div>\r\n          <a\r\n            routerLinkActive=\"active\"\r\n            routerLink=\"/merge\"\r\n            queryParamsHandling=\"merge\"\r\n            onclick=\"closeNav()\"\r\n          >\r\n            <img\r\n              class=\"sidebar-icon\"\r\n              src=\"../assets/vaultz.png\"\r\n              alt=\"cryptometrix\"\r\n            />\r\n            <br />\r\n            <label class=\"mb-0 app-item-text\">Merge</label>\r\n          </a>\r\n        </div> -->\r\n\r\n        <!-- <div>\r\n          <a\r\n            routerLinkActive=\"active\"\r\n            routerLink=\"/info\"\r\n            queryParamsHandling=\"merge\"\r\n            onclick=\"closeNav()\"\r\n          >\r\n            <img\r\n              class=\"sidebar-icon\"\r\n              src=\"https://bnb-grise-assests.s3.us-west-2.amazonaws.com/assets/vaultz.png\"\r\n              alt=\"vaultz\"\r\n            />\r\n            <br />\r\n            <label class=\"mb-0 app-item-text\">Information</label>\r\n          </a>\r\n        </div> -->\r\n      </div>\r\n    </div>\r\n      <span class=\"opennav\" onclick=\"openNav()\">&#9776; </span>\r\n    </div>\r\n   <!--  <span class=\"grise\">\r\n      <a routerLink=\"\">\r\n         <video class=\"logo_video\"  autoplay loop>\r\n          <source src=\"https://bnb-grise-assests.s3.us-west-2.amazonaws.com/assets/logo_render_20_percent_v2.mp4\" type=\"video/mp4\">\r\n\r\n          </video>         <img class=\"logo_video\" src=\"../assets/owl_logo_new_02.png\" />\r\n      </a>\r\n    </span> -->\r\n    <span  class=\"grise\"><a  routerlink=\"\" href=\"#/\"><img  src=\"https://www.linkpicture.com/q/owl_logo_new_02-1.png\" class=\"logo_video\"></a></span>\r\n    <span class=\"grise\"><a routerlink=\"\" href=\"#/\"><img src=\"https://www.linkpicture.com/q/owl_logo_new_02-2.png\" class=\"logo2\"></a></span>\r\n    <!-- <span class=\"moon-text\">A METAVERSE ON MOON</span> -->\r\n  </div>\r\n  <!--<div class=\"col-sm-1 d-lg-flex d-none justify-content-center\">\r\n    &lt;!&ndash; <div class=\"top_coins\">\r\n      <div class=\"icon_setting\">\r\n        <img\r\n          src=\"https://img.icons8.com/ios/50/000000/cardano.png\"\r\n          width=\"50px\"\r\n          height=\"50px\"\r\n        />\r\n      </div>\r\n      <span class=\"coins_price mt-2\">\r\n        {{ ada | currency: \"USD\":\"symbol\":\"1.4-5\" }}\r\n\r\n      </span>\r\n    </div> &ndash;&gt;\r\n    &lt;!&ndash; <div class=\"row\">\r\n      <div class=\"col-sm-6\">\r\n        <div class=\"top_coins\">\r\n          <div class=\"icon_setting\">\r\n            <i class=\"fab fa-bitcoin fa-2x\"></i>\r\n          </div>\r\n          <span class=\"coins_price\">\r\n            {{ btc | currency: \"USD\":\"symbol\":\"1.2-5\" }}\r\n\r\n          </span>\r\n        </div>\r\n        <div class=\"top_coins\">\r\n          <div class=\"icon_setting\" style=\"padding: 5px 10px !important\">\r\n            <i class=\"fab fa-ethereum fa-2x\"></i>\r\n          </div>\r\n          <span class=\"coins_price\">\r\n\r\n            {{ eth | currency: \"USD\":\"symbol\":\"1.2-5\" }}\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-sm-12\">\r\n\r\n        <div class=\"top_coins\">\r\n          <div class=\"icon_setting\">\r\n            <img\r\n              style=\"padding: 3px\"\r\n              src=\"../assets/dot_logo.png\"\r\n              width=\"27px\"\r\n              height=\"27px\"\r\n            />\r\n          </div>\r\n          <span class=\"coins_price\">\r\n            {{ dot | currency: \"USD\":\"symbol\":\"1.4-5\" }}\r\n\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div> &ndash;&gt;\r\n  </div>-->\r\n  <div class=\"flex-column align-items-center justify-content-start flex-1 d-lg-flex d-none aptos-caption\">\r\n    <div style=\"width: 3.5rem; height: 3.5rem\">\r\n      <svg fill=\"#FFF\" data-name=\"Icon Logo\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 60 60\"><path d=\"M46.47,20.07H41.16a2.15,2.15,0,0,1-1.61-.72l-2.16-2.42a1.69,1.69,0,0,0-2.53,0L33,19a3.21,3.21,0,0,1-2.39,1.07h-29A30.26,30.26,0,0,0,0,27.48H27.42a1.78,1.78,0,0,0,1.28-.54l2.56-2.66a1.67,1.67,0,0,1,1.22-.52h.1a1.7,1.7,0,0,1,1.27.57L36,26.75a2.17,2.17,0,0,0,1.61.73H60a30.26,30.26,0,0,0-1.58-7.41h-12Z\"></path> <path d=\"M16.6,43.05a1.78,1.78,0,0,0,1.27-.54l2.56-2.66a1.7,1.7,0,0,1,1.22-.52h.1A1.7,1.7,0,0,1,23,39.9l2.15,2.42a2.14,2.14,0,0,0,1.62.73H57.12a29.73,29.73,0,0,0,2.47-7.48H30.47a2.17,2.17,0,0,1-1.62-.72L26.7,32.42a1.69,1.69,0,0,0-2.53,0L22.32,34.5a3.18,3.18,0,0,1-2.38,1.07H.41a29.73,29.73,0,0,0,2.47,7.48Z\"></path> <path d=\"M38.12,12a1.74,1.74,0,0,0,1.27-.54L42,8.78a1.69,1.69,0,0,1,1.22-.51h.1a1.69,1.69,0,0,1,1.27.56l2.15,2.43a2.17,2.17,0,0,0,1.62.72h5.77A30.19,30.19,0,0,0,5.92,12Z\"></path> <path d=\"M26.53,50.46H18.64A2.17,2.17,0,0,1,17,49.74l-2.15-2.43a1.71,1.71,0,0,0-2.53,0l-1.85,2.08a3.18,3.18,0,0,1-2.38,1.07H8a30.16,30.16,0,0,0,44,0Z\"></path></svg>\r\n    </div>\r\n    <p class=\"text-white text-nowrap pt-2\">First blue chip nft on APTos</p>\r\n  </div>\r\n  <!-- <div class=\"col-lg-2 d-lg-block d-none mr-0\">\r\n    <div class=\"header-center-container\">\r\n      <div class=\"col-12 px-0\">\r\n        <div>\r\n          <p>\r\n            Grise Market Cap\r\n            <span>\r\n              {{ marketCapValue | currency: \"USD\":\"symbol\":\"1.5-5\" }}\r\n            </span>\r\n          </p>\r\n        </div>\r\n        <div>\r\n          <p>\r\n            Grise Price\r\n            <span>\r\n              {{ priceData?.priceUSD | currency: \"USD\":\"symbol\":\"1.5-5\" }}\r\n            </span>\r\n          </p>\r\n        </div>\r\n        <div>\r\n          <p>\r\n            Grise Total Supply\r\n            <span>\r\n              {{ totalGriseSupply | number: \"1.0-0\" }}\r\n            </span>\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"col-4\">\r\n        <p>Current Price</p>\r\n      <div class=\"line-splitter\"></div>\r\n      <p class=\"mb-0\">{{ priceData?.priceUSD | currency:'USD':'symbol':'1.5-5' }}</p>\r\n      </div>\r\n      <div class=\"col-4\">\r\n        <p>Total Supply</p>\r\n      <div class=\"line-splitter\"></div>\r\n      <p class=\"mb-0\">{{ totalGriseSupply | number:'1.0-0' }}</p>\r\n      </div>\r\n    </div>\r\n  </div> -->\r\n  <!--<div\r\n    class=\"col-lg-1 mx-0 d-lg-block d-none icons-equal\"\r\n  >\r\n\r\n    &lt;!&ndash; <a class=\"mr-2\" href=\"javascript:void(0)\" role=\"button\"\r\n      ><span class=\"telegram-icon social-icons\"></span>\r\n    </a>\r\n\r\n    <a class=\"mr-2\" href=\"javascript:void(0)\" role=\"button\"\r\n      ><span class=\"twiter-logo social-icons\"></span>\r\n    </a>\r\n    <a class=\"mr-2\" href=\"javascript:void(0)\" role=\"button\"\r\n      ><span class=\"medium-logo social-icons\"></span>\r\n    </a>\r\n    <a\r\n      class=\"mr-2\"\r\n      href=\"javascript:void(0)\"\r\n      role=\"button\"\r\n      ><span class=\"reddit-logo social-icons\"></span>\r\n    </a>\r\n    <a class=\"\" href=\"javascript:void(0)\" role=\"button\"\r\n      ><span class=\"discord-logo social-icons\"></span>\r\n    </a> &ndash;&gt;\r\n  </div>-->\r\n\r\n  <div class=\"col-lg-4 d-lg-flex d-none align-items-center justify-content-end forlogin-nami pl-0\">\r\n\r\n\r\n\r\n\r\n   <!-- <div style=\"\" *ngIf=\"isLogin\">\r\n    <div\r\n      mat-button\r\n      [matMenuTriggerFor]=\"beforeMenu\"\r\n      class=\"w3-button w3-round-xlarge Connect-wallet accNO\"\r\n    >\r\n      <a\r\n        class=\"hello\"\r\n        mat-button\r\n        style=\"padding-left: 0\"\r\n        (click)=\"refetchBalance()\"\r\n      >\r\n        <span style=\"width: 100%\">{{ accountNo | formattedAccountNo }}</span>\r\n      </a>\r\n      <span class=\"truncate\" style=\"width: 30px\" (click)=\"logout()\">\r\n        <i class=\"fas fa-sign-out-alt logout\" aria-hidden=\"true\"></i>\r\n      </span>\r\n    </div>\r\n\r\n    <mat-menu #beforeMenu=\"matMenu\" xPosition=\"before\" style=\"width: 100%\">\r\n      <div style=\"display: flex; margin-right: 20px\">\r\n        <div style=\"width: 49%; display: flex; margin-right: 20px\">\r\n          <img\r\n            src=\"https://bnb-grise-assests.s3.us-west-2.amazonaws.com/assets/bnb-white.png\"\r\n            alt=\"logo\"\r\n            style=\"\r\n              height: 30px;\r\n              width: 30px;\r\n              margin-left: 10%;\r\n              margin-top: 10%;\r\n            \"\r\n          />\r\n          <span class=\"truncate\" style=\"margin-top: 16%; margin-left: 10%\">\r\n            {{ totalBalance | number: \"0.0-2\" }}\r\n          </span>\r\n        </div>\r\n        <div style=\"width: 2%; font-size: 30px; margin-top: 6%\">|</div>\r\n        <div style=\"width: 49%; display: flex; margin-right: 20px\">\r\n          <img\r\n            src=\"../assets/logo-white.png\"\r\n            alt=\"logo\"\r\n            style=\"\r\n              height: 30px;\r\n              width: 30px;\r\n              margin-left: 10%;\r\n              margin-top: 10%;\r\n            \"\r\n          />\r\n          <span class=\"truncate\" style=\"margin-top: 16%; margin-left: 10%\">\r\n            {{ griseBalance | number: \"0.0-2\" }}\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <div style=\"display: flex\" *ngIf=\"currentLPDay >= 0\">\r\n        <button\r\n          class=\"top_button\"\r\n          data-toggle=\"modal\"\r\n          data-target=\"#reserveModal\"\r\n          (click)=\"openDialog()\"\r\n        >\r\n          Reserve Grise Token\r\n        </button>\r\n      </div>\r\n      <div style=\"display: flex\">\r\n        <button\r\n          class=\"top_button\"\r\n          routerLink=\"dashboard/personal\"\r\n          queryParamsHandling=\"merge\"\r\n        >\r\n          Stake Grise Token\r\n        </button>\r\n      </div>\r\n      <div style=\"display: flex\">\r\n        <button\r\n          class=\"top_button\"\r\n          data-toggle=\"modal\"\r\n          data-target=\"#referralModal\"\r\n          (click)=\"openReferralLinkDialog()\"\r\n        >\r\n          Create Referral Link\r\n        </button>\r\n      </div>\r\n      <div style=\"display: flex\">\r\n        <button\r\n          class=\"top_button\"\r\n          routerLink=\"dashboard/refundhistory\"\r\n          queryParamsHandling=\"merge\"\r\n        >\r\n          Personal Gas Refund\r\n        </button>\r\n      </div>\r\n    </mat-menu>\r\n  </div> -->\r\n\r\n\r\n  <!-- <button\r\n      class=\"\r\n        w3-button w3-round-xlarge\r\n        Connect-wallet\r\n        without-accno\r\n        connectBtn\r\n        general-btn-resp\r\n        w3-black\r\n      \"\r\n      style=\"font-size: 25px\"\r\n\r\n    >\r\n    <span  class=\"d-flex align-items-center\">Subscribe\r\n    </span>\r\n\r\n    </button>\r\n -->\r\n    <!-- <a href=\"https://forms.sendpulse.com/6d3584fad8/\" target=\"_blank\" class=\"mr-4\">\r\n      Subscribe\r\n    </a> -->\r\n    <div *ngIf=\"state$ | async; else elseBlock\">\r\n      <button class=\"btn btn-primary wallet\">{{truncAddress(state$ | async)}}</button>\r\n    </div>\r\n    <ng-template #elseBlock>\r\n      <button class=\"btn btn-primary wallet d-flex align-items-center\" (click)=\"openWalletDialog()\">\r\n        <div class=\"px-2\">\r\n          <svg height=\"25\" width=\"25\" fill=\"#FFF\" data-name=\"Icon Logo\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 60 60\"><path d=\"M46.47,20.07H41.16a2.15,2.15,0,0,1-1.61-.72l-2.16-2.42a1.69,1.69,0,0,0-2.53,0L33,19a3.21,3.21,0,0,1-2.39,1.07h-29A30.26,30.26,0,0,0,0,27.48H27.42a1.78,1.78,0,0,0,1.28-.54l2.56-2.66a1.67,1.67,0,0,1,1.22-.52h.1a1.7,1.7,0,0,1,1.27.57L36,26.75a2.17,2.17,0,0,0,1.61.73H60a30.26,30.26,0,0,0-1.58-7.41h-12Z\"></path> <path d=\"M16.6,43.05a1.78,1.78,0,0,0,1.27-.54l2.56-2.66a1.7,1.7,0,0,1,1.22-.52h.1A1.7,1.7,0,0,1,23,39.9l2.15,2.42a2.14,2.14,0,0,0,1.62.73H57.12a29.73,29.73,0,0,0,2.47-7.48H30.47a2.17,2.17,0,0,1-1.62-.72L26.7,32.42a1.69,1.69,0,0,0-2.53,0L22.32,34.5a3.18,3.18,0,0,1-2.38,1.07H.41a29.73,29.73,0,0,0,2.47,7.48Z\"></path> <path d=\"M38.12,12a1.74,1.74,0,0,0,1.27-.54L42,8.78a1.69,1.69,0,0,1,1.22-.51h.1a1.69,1.69,0,0,1,1.27.56l2.15,2.43a2.17,2.17,0,0,0,1.62.72h5.77A30.19,30.19,0,0,0,5.92,12Z\"></path> <path d=\"M26.53,50.46H18.64A2.17,2.17,0,0,1,17,49.74l-2.15-2.43a1.71,1.71,0,0,0-2.53,0l-1.85,2.08a3.18,3.18,0,0,1-2.38,1.07H8a30.16,30.16,0,0,0,44,0Z\"></path></svg>\r\n        </div>\r\n        Connect Wallets</button>\r\n    </ng-template>\r\n\r\n    <div class=\"soical_icon\">\r\n      <ul>\r\n        <li><a href=\"https://twitter.com/Beyondowl\" target=\"_blank\"><img src=\"assets/twitter_vector.png\" class=\"img-responsive\"/></a></li>\r\n        <li><a href=\"https://discord.com/invite/beyondowls\" target=\"_blank\"><img src=\"assets/discord-logo.png\" class=\"img-responsive\"/></a></li>\r\n<!--        <li><a href=\"https://t.me/beyondowl\" target=\"_blank\"><img src=\"assets/telegram.png\" class=\"img-responsive\"/></a></li>-->\r\n<!--        <li><a href=\"https://www.instagram.com/beyondowls/\" target=\"_blank\"><img src=\"assets/instagram.png\" class=\"img-responsive\"/></a></li>-->\r\n      </ul>\r\n    </div>\r\n    <!-- <button\r\n      class=\"\r\n        w3-button w3-round-xlarge\r\n        Connect-wallet\r\n        without-accno\r\n        tealcolor\r\n        connectBtn\r\n        general-btn-resp\r\n      \"\r\n\r\n      style=\"font-size: 25px\"\r\n      [matMenuTriggerFor]=\"walllet\"\r\n\r\n    >\r\n    <span  class=\"d-flex align-items-center\" *ngIf=\"!walletAddr\">Connect Wallet</span>\r\n    <span  class=\"d-flex align-items-center\" *ngIf=\"walletAddr\"> {{ walletAddr }} <span class=\"cardino-icon\" *ngIf=\"walletAddr\"><img\r\n      src=\"../assets/cardano-white.png\"\r\n\r\n    /></span> </span>\r\n\r\n    </button> -->\r\n\r\n    <!-- <mat-menu #walllet=\"matMenu\" [overlapTrigger]=\"false\" [backdropClass]=\"'margin-remove'\">\r\n      <button\r\n          class=\"top_button\"\r\n          routerLink=\"my-nfts\"\r\n          queryParamsHandling=\"merge\"\r\n          *ngIf=\"walletAddr\"\r\n        >\r\n\r\n          <span><img src=\"../assets/NFT_Icon.png\"></span>\r\n        <span>My Nfts</span>\r\n        </button>\r\n\r\n      <button class=\"top_button\" (click)=\"connectWithCardanoWallet()\" [ngClass]=\"{ 'notallowed' : walletAddr }\">\r\n         <span><img src=\"../assets/nami-icon2.svg\"></span>\r\n        <span>Nami Wallet</span>\r\n      </button>\r\n\r\n      <button class=\"top_button d-inline-flex disable\" disabled>\r\n        <span><img src=\"../assets/ccvault.png\"></span>\r\n        <span>Eternl Wallet <br> (Coming Soon)</span>\r\n\r\n\r\n\r\n     </button>\r\n    </mat-menu> -->\r\n    <!-- <button\r\n      class=\"\r\n        w3-button w3-round-xlarge\r\n        Connect-wallet\r\n        without-accno\r\n        tealcolor\r\n        connectBtn\r\n        general-btn-resp\r\n      \"\r\n\r\n      style=\"font-size: 25px\"\r\n      [matMenuTriggerFor]=\"menu\"\r\n    >\r\n\r\n\r\n    </button>\r\n    <div>\r\n\r\n    <mat-menu #menu=\"matMenu\" [overlapTrigger]=\"false\">\r\n\r\n\r\n      <div class=\"d-flex\">\r\n        <button\r\n          class=\"top_button\"\r\n          routerLink=\"my-nfts\"\r\n          queryParamsHandling=\"merge\"\r\n        >\r\n          My Nfts\r\n        </button>\r\n      </div>\r\n\r\n    </mat-menu>\r\n  </div>-->\r\n    <!-- <button type=\"button\" (click)=\"handleDelegate()\" class=\"w3-button w3-round-xlarge\r\n    Connect-wallet\r\n    without-accno\r\n    tealcolor\r\n    connectBtn\" style=\"max-width:180px\">\r\n      Nami Wallet\r\n  </button> -->\r\n    <!-- <div *ngIf=\"!isLogin\">\r\n        <button\r\n          mat-button\r\n          (click)=\"connectToWallet()\"\r\n          class=\"w3-button w3-round-xlarge Connect-wallet without-accno\"\r\n        >\r\n          Connect to Wallet\r\n        </button>\r\n      </div> -->\r\n      <!-- <a href=\"/login\" class=\"login-icon\">\r\n        <i class=\"fa fa-sign-in-alt\"></i>\r\n      </a> -->\r\n\r\n\r\n  </div>\r\n  <div class=\"align-items-center justify-content-start md-aptos-wallet d-none\" style=\"flex:1; margin-left: 5%; gap: 1em\">\r\n    <div style=\"width: 3.5rem; height: 3.5rem\">\r\n      <svg fill=\"#FFF\" data-name=\"Icon Logo\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 60 60\"><path d=\"M46.47,20.07H41.16a2.15,2.15,0,0,1-1.61-.72l-2.16-2.42a1.69,1.69,0,0,0-2.53,0L33,19a3.21,3.21,0,0,1-2.39,1.07h-29A30.26,30.26,0,0,0,0,27.48H27.42a1.78,1.78,0,0,0,1.28-.54l2.56-2.66a1.67,1.67,0,0,1,1.22-.52h.1a1.7,1.7,0,0,1,1.27.57L36,26.75a2.17,2.17,0,0,0,1.61.73H60a30.26,30.26,0,0,0-1.58-7.41h-12Z\"></path> <path d=\"M16.6,43.05a1.78,1.78,0,0,0,1.27-.54l2.56-2.66a1.7,1.7,0,0,1,1.22-.52h.1A1.7,1.7,0,0,1,23,39.9l2.15,2.42a2.14,2.14,0,0,0,1.62.73H57.12a29.73,29.73,0,0,0,2.47-7.48H30.47a2.17,2.17,0,0,1-1.62-.72L26.7,32.42a1.69,1.69,0,0,0-2.53,0L22.32,34.5a3.18,3.18,0,0,1-2.38,1.07H.41a29.73,29.73,0,0,0,2.47,7.48Z\"></path> <path d=\"M38.12,12a1.74,1.74,0,0,0,1.27-.54L42,8.78a1.69,1.69,0,0,1,1.22-.51h.1a1.69,1.69,0,0,1,1.27.56l2.15,2.43a2.17,2.17,0,0,0,1.62.72h5.77A30.19,30.19,0,0,0,5.92,12Z\"></path> <path d=\"M26.53,50.46H18.64A2.17,2.17,0,0,1,17,49.74l-2.15-2.43a1.71,1.71,0,0,0-2.53,0l-1.85,2.08a3.18,3.18,0,0,1-2.38,1.07H8a30.16,30.16,0,0,0,44,0Z\"></path></svg>\r\n    </div>\r\n    <p class=\"text-white text-nowrap pt-2\">First blue chip nft on APTos</p>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"container-fluid text-center\" style=\"height: auto\">\r\n  <div class=\"row content desktop\">\r\n    <div class=\"stroke-width sidenav home-side\">\r\n      <div class=\"sidebar\">\r\n        <a\r\n          class=\"sidebar-menu-item\"\r\n          routerLinkActive=\"active\"\r\n          routerLink=\"/home\"\r\n          queryParamsHandling=\"merge\"\r\n        >\r\n          <img class=\"sidebar-icon\" src=\"../assets/home.png\" alt=\"home\" />\r\n          <br />\r\n          <label class=\"mb-0 app-item-text\">Home</label>\r\n        </a>\r\n        <!-- <a\r\n            routerLinkActive=\"active\"\r\n            routerLink=\"/home\"\r\n            queryParamsHandling=\"merge\"\r\n            onclick=\"closeNav()\"\r\n          >\r\n            <img\r\n              class=\"sidebar-icon\"\r\n              src=\"https://bnb-grise-assests.s3.us-west-2.amazonaws.com/assets/home.png\"\r\n              alt=\"home\"\r\n            />\r\n            <br />\r\n            <label class=\"mb-0 app-item-text\">Home</label>\r\n          </a> -->\r\n\r\n\r\n\r\n        <!-- <a routerLinkActive=\"active\" routerLink=\"tokeninfo\" queryParamsHandling=\"merge\">\r\n          <img class=\"sidebar-icon\" src=\"../assets/tokeninfo.png\" alt=\"tokeninfo\">\r\n          <br>\r\n          <label class=\"mb-0 app-item-text\">Token info</label>\r\n        </a> -->\r\n        <!-- <a\r\n          class=\"sidebar-menu-item\"\r\n          routerLinkActive=\"active\"\r\n          routerLink=\"/nft\"\r\n          queryParamsHandling=\"merge\"\r\n        >\r\n          <img class=\"sidebar-icon\" src=\"../assets/NFT.png\" alt=\"NFT\" />\r\n          <br />\r\n          <label class=\"mb-0 app-item-text\">NFT</label>\r\n        </a> -->\r\n        <a\r\n          class=\"sidebar-menu-item\"\r\n          routerLinkActive=\"active\"\r\n          routerLink=\"/nft-collection\"\r\n          queryParamsHandling=\"merge\"\r\n        >\r\n          <img\r\n            class=\"sidebar-icon\"\r\n            src=\"../assets/NFT.png\"\r\n            alt=\"reservation\"\r\n          />\r\n          <br />\r\n          <label class=\"mb-0 app-item-text\">NFT Collection</label>\r\n        </a>\r\n\r\n        <!-- <a\r\n          class=\"sidebar-menu-item\"\r\n          routerLinkActive=\"active\"\r\n          routerLink=\"/roadmap\"\r\n          queryParamsHandling=\"merge\"\r\n        >\r\n          <img class=\"sidebar-icon\" src=\"../assets/vaultz.png\" alt=\"vaultz\" />\r\n          <br />\r\n          <label class=\"mb-0 app-item-text\">Roadmap</label>\r\n        </a> -->\r\n\r\n        <!--<a\r\n          class=\"sidebar-menu-item\"\r\n          routerLinkActive=\"active\"\r\n          routerLink=\"/dashboard\"\r\n          queryParamsHandling=\"merge\"\r\n        >\r\n          <img\r\n            class=\"sidebar-icon\"\r\n            src=\"../assets/dashboard.png\"\r\n            alt=\"dashboard\"\r\n          />\r\n          <br />\r\n          <label class=\"mb-0 app-item-text\">Dashboard</label>\r\n        </a>-->\r\n\r\n        <div [ngClass]=\"{activeDropdown: dropdownActive,notActiveDropdown: dropdownNotActive}\" class=\"sidebar-dropdown\">\r\n          <a routerLinkActive=\"active\" routerLink=\"/AI\" queryParamsHandling=\"merge\">\r\n            <img class=\"sidebar-icon\" src=\"../assets/AI-Cryptokenomics.png\" alt=\"cryptometrix\">\r\n            <br>\r\n            <label class=\"mb-0 app-item-text\">AI</label>\r\n          </a>\r\n          <div class=\"sidebar-dropdown-menu\">\r\n            <a class=\"ai-drop-item\" routerLinkActive=\"active\" routerLink=\"/AI\" queryParamsHandling=\"merge\">\r\n              <label class=\"mb-0 app-item-text\">Indices</label>\r\n            </a>\r\n            <a class=\"ai-drop-item\" routerLinkActive=\"active\" routerLink=\"/sentiment-analysis\" queryParamsHandling=\"merge\">\r\n              <label class=\"mb-0 app-item-text\">Sentiment</label>\r\n              <br/>\r\n              <label class=\"mb-0 app-item-text\">Analysis</label>\r\n            </a>\r\n            <a class=\"ai-drop-item\" routerLinkActive=\"active\" routerLink=\"/coin-details\" queryParamsHandling=\"merge\">\r\n              <label class=\"mb-0 app-item-text\">Coin Details</label>\r\n            </a>\r\n          </div>\r\n        </div>\r\n\r\n        <a\r\n        class=\"sidebar-menu-item\"\r\n        routerLinkActive=\"active\"\r\n        routerLink=\"/moonverse\"\r\n        queryParamsHandling=\"merge\"\r\n      >\r\n        <img\r\n          class=\"sidebar-icon\"\r\n          src=\"../assets/tokenstat.png\"\r\n          alt=\"tokenstats\"\r\n        />\r\n        <br />\r\n        <label class=\"mb-0 app-item-text\">Moon Map</label>\r\n      </a>\r\n\r\n      <a\r\n        class=\"sidebar-menu-item\"\r\n        routerLinkActive=\"active\"\r\n        routerLink=\"/owly-bird\"\r\n        queryParamsHandling=\"merge\"\r\n      >\r\n        <img\r\n          class=\"sidebar-icon\"\r\n          src=\"../assets/owly_bird.png\"\r\n          alt=\"owly_bird\"\r\n        />\r\n        <br />\r\n        <label class=\"mb-0 app-item-text\">Owly Bird</label>\r\n      </a>\r\n        <!-- <a\r\n          routerLinkActive=\"active\"\r\n          routerLink=\"/cryptometrix\"\r\n          queryParamsHandling=\"merge\"\r\n        >\r\n          <img\r\n            class=\"sidebar-icon\"\r\n            src=\"../assets/AI-Cryptokenomics.png\"\r\n            alt=\"cryptometrix\"\r\n          />\r\n          <br />\r\n          <label class=\"mb-0 app-item-text\">AI</label>\r\n        </a> -->\r\n\r\n\r\n        <!-- <a\r\n          routerLinkActive=\"active\"\r\n          routerLink=\"/merge\"\r\n          queryParamsHandling=\"merge\"\r\n        >\r\n          <img class=\"sidebar-icon\" src=\"../assets/vaultz.png\" alt=\"Merge\" />\r\n          <br />\r\n          <label class=\"mb-0 app-item-text\">Merge</label>\r\n        </a> -->\r\n        <!-- <a\r\n          routerLinkActive=\"active\"\r\n          routerLink=\"/landing\"\r\n          queryParamsHandling=\"merge\"\r\n        >\r\n          <img\r\n            class=\"sidebar-icon\"\r\n            src=\"../assets/vaultz.png\"\r\n            alt=\"Landing Page\"\r\n          />\r\n          <br />\r\n          <label class=\"mb-0 app-item-text\">NFT Page</label>\r\n        </a> -->\r\n      </div>\r\n    </div>\r\n    <app-my-loader></app-my-loader>\r\n    <div class=\"stroke2-width container-fluid router-outlet\">\r\n      <div class=\"child-components-container\">\r\n        <router-outlet></router-outlet>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<app-spinner></app-spinner>\r\n<app-dialog></app-dialog>\r\n<app-referral-link-dialog></app-referral-link-dialog>\r\n<app-launch-timer-dialog\r\n  [showLaunchTimerDialog]=\"showLaunchTimerDialog\"\r\n></app-launch-timer-dialog>\r\n","import {ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnInit} from '@angular/core';\r\nimport {MatDialog, MatDialogConfig} from '@angular/material/dialog';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\n// import Wallet from \"@harmonicpool/cardano-wallet-interface\";\r\n// import Wallet from \"../packages/cardano-wallet-interface-main\";\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {LiquidityContractService} from 'src/app/services/liquidity-contract.service';\r\nimport {SharedService} from 'src/app/services/shared.service';\r\nimport {ContractService} from './services/contract.service';\r\nimport {GriseTokenContractService} from './services/grise-token-contract.service';\r\nimport {LocalDataUpdateService} from './services/local-data-update.service';\r\nimport {MinAbiDataContractService} from './services/minabi-data-contract.service';\r\nimport {environment as env} from '../environments/environment';\r\nimport {GraphDataService} from './services/graph-data.service';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport {any} from 'underscore';\r\nimport Loader from './services/nami-loader.service';\r\nimport {NFTsAPIServices} from './services/nft.service';\r\nimport {ConnectWalletDialogComponent} from \"./components/connect-wallet-dialog/connect-wallet-dialog.component\";\r\nimport {connect, WalletType} from \"@horizonx/aptos-wallet-connector\";\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n// const CoinSelection = require('./wallet/coinSelection.js');\r\n// import CoinSelectionSL  from './wallet/coinSelectionLatest';\r\n// import CoinSelectionSL  from './wallet/coinSelection';\r\n// import * as CoinSelectionSL  from './wallet/coinSelectionOld.js';\r\n// import { triggerPay } from './wallet/buy.js'\r\n\r\n// declare funciton CoinSelectionSL.setProtocolParameters(): any;\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class AppComponent implements OnInit {\r\n    state$ = new BehaviorSubject(false);\r\n\r\n    @Input() dropdownActive = false;\r\n    @Input() dropdownNotActive = true;\r\n\r\n\r\n    connected = false;\r\n    junaid: any;\r\n    disconnect: any;\r\n    isLogin = false;\r\n    accountNo = 0;\r\n    totalBalance = 0;\r\n    refAccountNo = '';\r\n    griseBalance = 0;\r\n    currentLPDay = 0;\r\n    launchOn = env.launchTimeStamp;\r\n    showLaunchTimerDialog = false;\r\n    totalGriseSupply: number;\r\n    priceData: any;\r\n    marketCapValue: number;\r\n    walletAddr = 'JUNAID SIKANDER';\r\n    walletBalance: any;\r\n    coinsData = any;\r\n    coinsDataList = [];\r\n    // currency: any;\r\n    public btc: number;\r\n    public ada: number;\r\n    public eth: number;\r\n    public dot: number;\r\n\r\n    constructor(\r\n        public dialog: MatDialog,\r\n        public walletDialog: MatDialog,\r\n        private contractService: ContractService,\r\n        private sharedService: SharedService,\r\n        private activatedRoute: ActivatedRoute,\r\n        private griseTokenContractService: GriseTokenContractService,\r\n        private APIServices: NFTsAPIServices,\r\n        private localDataUpdateService: LocalDataUpdateService,\r\n        private router: Router,\r\n        private minAbiDataContractService: MinAbiDataContractService,\r\n        private liquidityContractService: LiquidityContractService,\r\n        private toastrService: ToastrService,\r\n        private http: HttpClient,\r\n        private graphDataService: GraphDataService,\r\n    ) {}\r\n\r\n    async ngOnInit() {\r\n        if (localStorage.getItem('aptos-wallet-connector#last-connected-wallet-type')){\r\n            // tslint:disable-next-line:variable-name\r\n            const wallet_type = localStorage.getItem('aptos-wallet-connector#last-connected-wallet-type');\r\n            const result = await connect(wallet_type as WalletType);\r\n            // @ts-ignore\r\n            const {account, disconnect} = result;\r\n            this.disconnect = disconnect();\r\n            const address = await account();\r\n            this.state$.next(address);\r\n            console.log(wallet_type, '****');\r\n        }\r\n\r\n        const Nami = await Loader.Cardano();\r\n        if (await Nami.isEnabled()) {\r\n            this.connectWithCardanoWallet();\r\n        } else {\r\n            localStorage.removeItem('namiWalletTotalAssets');\r\n        }\r\n        // this.connectCCVault();\r\n        this.getWalletBalance();\r\n\r\n\r\n        // Sync with Nami Wallet\r\n\r\n        // END: Sync with Nami Wallet\r\n\r\n\r\n        // this.connectWithCardanoWallet();\r\n\r\n\r\n        //    cardano.getChangeAddress().then((res: any) => {\r\n        //      console.log(\"address: \", res);\r\n        //     const balance = cardanoSerialize.Value.from_bytes(Buffer.from(res, 'hex'));\r\n        //     const lovelaces = balance.coin().to_str();\r\n\r\n        //     localStorage.setItem(\"Address\", lovelaces);\r\n        //     console.log(balance, \"**  Address  ** \",lovelaces);\r\n        //  })\r\n\r\n        // const value = cardanoSerialize.Value.from_bytes() // your value\r\n        // const lovelace = value.coin().to_str();\r\n        // if (value.multiasset()) {\r\n        // const multiAssets = value.multiasset().keys();\r\n        // for (let j = 0; j < multiAssets.len(); j++) {\r\n        //   const policy = multiAssets.get(j);\r\n        //   const policyAssets = value.multiasset().get(policy);\r\n        //   const assetNames = policyAssets.keys();\r\n        //   for (let k = 0; k < assetNames.len(); k++) {\r\n        //     const assetPolicy = Buffer.from(policy.to_bytes()).toString(\"hex\"); // hex encoded policy\r\n        //     const assetName = Buffer.from(assetNames.get(k).name(),\"hex\").toString(); // utf8 encoded asset name\r\n        //     const quantity = policyAssets.get(policyAsset).to_str(); // asset's quantity\r\n\r\n        //     // your code here\r\n\r\n        //   }\r\n        // }\r\n\r\n        //     const value = CSL.Value.from_bytes(...) // your value\r\n        // const lovelace = value.coin().to_str();\r\n\r\n        this.showLaunchDialog();\r\n        this.assignContractAccounts();\r\n        this.minAbiDataContractService.setChainId();\r\n        this.sharedService.initPersonalPeriodStakes();\r\n        this.connectToWallet();\r\n        this.getTokenData();\r\n        this.checkLink();\r\n        const header = new HttpHeaders().set('Access-Control-Allow-Origin', '*');\r\n        this.http\r\n            .get('https://api.ethama.finance/get-top-coin-grise')\r\n            .subscribe((Response) => {\r\n                // console.log(Response);\r\n                const resSTR = JSON.stringify(Response);\r\n                const resJSON = JSON.parse(resSTR);\r\n\r\n                this.btc = resJSON.data.BTC;\r\n                this.dot = resJSON.data.DOT;\r\n                this.ada = resJSON.data.ADA;\r\n                this.eth = resJSON.data.ETH;\r\n\r\n                // this.coinsDataList = resJSON.data;\r\n                // console.log(this.coinsDataList);\r\n            });\r\n\r\n        this.localDataUpdateService.isInitSlotsReservationDataUpdated.subscribe(\r\n            (isUpdated) => {\r\n                if (isUpdated) {\r\n                    this.sharedService.initSlots();\r\n                    this.localDataUpdateService.forceUpdateSlotsReservationData(true);\r\n                }\r\n            }\r\n        );\r\n\r\n        this.localDataUpdateService.isWalletBalanceDataUpdated.subscribe(\r\n            (value) => {\r\n                if (value && this.isLogin) {\r\n                    this.refetchBalance();\r\n                }\r\n            }\r\n        );\r\n\r\n        this.liquidityContractService.getCurrentLPDay().then((lpDay) => {\r\n            if (lpDay) {\r\n                this.currentLPDay = lpDay;\r\n            }\r\n        });\r\n\r\n        this.activatedRoute.queryParams.subscribe((params) => {\r\n            this.contractService.referralAccountNo = params.referralCode;\r\n            if (this.contractService.referralAccountNo == null) {\r\n                this.contractService.referralAccountNo =\r\n                    this.contractService.blankReferralAccountNo;\r\n            }\r\n            this.refAccountNo = this.contractService.referralAccountNo;\r\n        });\r\n    }\r\n\r\n    testMultipleWallets() {\r\n        // if (Wallet.has(Wallet.Names.Nami)) {\r\n        //   console.log(\"Check wallet is connected or not :: => \", await Wallet.isEnabled(Wallet.Names.Nami));\r\n        // if (!await Wallet.isEnabled(Wallet.Names.Nami)) {\r\n\r\n        //     console.log(\"Wallet Disabled!\")\r\n\r\n        //     Wallet.enable(Wallet.Names.Nami)\r\n        //       .then(\r\n        //         // () => {\r\n        //         //     Wallet.Nami.delegateTo(\r\n        //         //         \"<your pool id>\",\r\n        //         //         \"<your blockforst api key>\"\r\n        //         //     );\r\n        //         // }\r\n        //       );\r\n        // }\r\n        //   else {\r\n        //     console.log(\"Wallet Enabled!\")\r\n        //     // Wallet.Nami.delegateTo(\r\n        //     //     \"<your pool id>\",\r\n        //     //     \"<your blockforst api key>\"\r\n        //     // );\r\n        //   }\r\n        // } else {\r\n        //   console.log(\"Required Wallet not Found!\");\r\n        // }\r\n\r\n    }\r\n\r\n    checkLink() {\r\n        const url: string = window.location.href;\r\n        if (url.includes('AI') || url.includes('sentiment-analysis') || url.includes('coin-details')) {\r\n            this.dropdownActive = true;\r\n            this.dropdownNotActive = false;\r\n        } else {\r\n            this.dropdownActive = false;\r\n            this.dropdownNotActive = true;\r\n        }\r\n    }\r\n\r\n    async connectWithCardanoWallet() {\r\n        // this.walletBalance = localStorage.getItem(\"lovelaces\");\r\n        await Loader.load();\r\n        const Nami = await Loader.Cardano();\r\n\r\n        const checkWallet = await Loader.verifyWallet();\r\n        // console.log(\"Hi verifyWallet => \", checkWallet);\r\n        if (checkWallet !== true) {\r\n            if (checkWallet === 'Nami-wallet not connected') {\r\n                await Nami.enable();\r\n            } else {\r\n                this.toastrService.warning(checkWallet);\r\n                return;\r\n            }\r\n        }\r\n\r\n        console.log('Hi testing...!');\r\n\r\n        await Nami.enable();\r\n\r\n        // Get Connected Wallet Address\r\n        const paymentAddr = await Nami.getAddress();\r\n        console.log('addr ==> ', paymentAddr);\r\n        // console.log(\"UTXO: =>> \", await Nami.getUtxos())\r\n        console.log('All Assets: => ', await Nami.getAssets());\r\n        if (localStorage.getItem('walletAddr') !== paymentAddr) {\r\n            localStorage.setItem('walletAddr', paymentAddr);\r\n            localStorage.removeItem('namiWalletTotalAssets');\r\n        }\r\n        this.walletAddr = `${paymentAddr.slice(0, 10)}...${paymentAddr.slice(paymentAddr.length - 5, paymentAddr.length)}`;\r\n\r\n        const namiWalletAssetsList = await Nami.getAssets();\r\n        let totalNamiAssets = 0;\r\n        namiWalletAssetsList.map((item) => totalNamiAssets += Number(item.quantity));\r\n        console.log('Total Assets: ', totalNamiAssets);\r\n\r\n        this.APIServices.totalNamiWalletNFT$.next(totalNamiAssets);\r\n        if (!localStorage.getItem('namiWalletTotalAssets')) {\r\n            localStorage.setItem('namiWalletTotalAssets', `${totalNamiAssets}`);\r\n        }\r\n\r\n        const userApiResp: any = await new Promise(async (resolve, reject) => {\r\n            const regUser = await this.APIServices.userRegister({\r\n                walletAddr: await Loader.CardanoWalletAddress()\r\n            });\r\n            resolve(regUser);\r\n        });\r\n        if (userApiResp.status) {\r\n            // set token service variable\r\n\r\n            this.APIServices.userLoginData$.next(userApiResp.data);\r\n            this.APIServices.userAuthToken$.next(userApiResp.token);\r\n        }\r\n\r\n        try {\r\n            const allAssets = await Nami.getAssets();\r\n            console.log('allAssets :: ', allAssets);\r\n        } catch (error) {\r\n            console.log('Error :: ', error);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    async connectCCVault() {\r\n        // this.walletBalance = localStorage.getItem(\"lovelaces\");\r\n        // await Loader.load()\r\n        const CCVault = await Loader.CCVault();\r\n        console.log('Hi testing...!');\r\n\r\n        const checkEnabled = await CCVault.enable();\r\n        console.log('cc valult ', checkEnabled);\r\n\r\n\r\n        // // Get Connected Wallet Address\r\n        // let paymentAddr = await Nami.getAddress()\r\n        // console.log(\"addr ==> \", paymentAddr)\r\n        // // console.log(\"UTXO: =>> \", await Nami.getUtxos())\r\n        // console.log(\"All Assets: => \", await Nami.getAssets());\r\n        // localStorage.setItem(\"walletAddr\", paymentAddr);\r\n        // this.walletAddr = `${paymentAddr.slice(0, 10)}...${paymentAddr.slice(paymentAddr.length - 5, paymentAddr.length)}`;\r\n\r\n        // const namiWalletAssetsList = await Nami.getAssets();\r\n        // let totalNamiAssets = 0;\r\n        // namiWalletAssetsList.map((item) => totalNamiAssets += Number(item.quantity));\r\n        // console.log(\"Total Assets: \", totalNamiAssets);\r\n\r\n        // this.APIServices.totalNamiWalletNFT$.next(totalNamiAssets);\r\n        // if (!localStorage.getItem(\"namiWalletTotalAssets\")) {\r\n        //   localStorage.setItem(\"namiWalletTotalAssets\", `${totalNamiAssets}`);\r\n        // }\r\n\r\n        // const userApiResp: any = await new Promise(async (resolve, reject) => {\r\n        //   const regUser = await this.APIServices.userRegister({\r\n        //     walletAddr: await Loader.CardanoWalletAddress()\r\n        //   });\r\n        //   resolve(regUser)\r\n        // });\r\n        // if (userApiResp.status) {\r\n        //   // set token service variable\r\n\r\n        //   this.APIServices.userLoginData$.next(userApiResp.data);\r\n        //   this.APIServices.userAuthToken$.next(userApiResp.token);\r\n        // }\r\n\r\n        // try {\r\n        //   const allAssets = await Nami.getAssets()\r\n        //   console.log(\"allAssets :: \", allAssets)\r\n        // } catch (error) {\r\n        //   console.log(\"Error :: \", error);\r\n        // }\r\n\r\n\r\n    }\r\n\r\n    convertToADA(value: any) {\r\n        return value ? value / 1000000 : 0;\r\n    }\r\n\r\n    async getWalletBalance() {\r\n        // debugger;\r\n        try {\r\n            // console.log('=================== ngOnInit')\r\n            await Loader.load();\r\n            const cardanoSerialize = await Loader.CardanoSRL();\r\n            const S = cardanoSerialize;\r\n            const cardano = (window as any).cardano;\r\n\r\n            (window as any).global = window;\r\n            // @ts-ignore\r\n            window.Buffer = window.Buffer || require('buffer').Buffer;\r\n\r\n\r\n            // const buffer =  (window as any).Buffer;\r\n            // console.log('namiWallet loader', cardanoSerialize);\r\n            // console.log('cardano loader', cardano);\r\n            // console.log('cardano Get Balance :: ', await cardano.getBalance());\r\n\r\n            cardano.getBalance().then((res: any) => {\r\n                const balance = cardanoSerialize.Value.from_bytes(Buffer.from(res, 'hex'));\r\n                const lovelaces = balance.coin().to_str();\r\n                this.walletBalance = lovelaces;\r\n                localStorage.setItem('lovelaces', lovelaces);\r\n                console.log('**  lovelaces  ** ', this.convertToADA(lovelaces));\r\n            });\r\n\r\n\r\n            // const paymentAddr = cardanoSerialize.Address.from_bytes(Buffer.from(await cardano.getChangeAddress(), 'hex')).to_bech32()\r\n            // console.log(\"paymentAddr :: \", paymentAddr);\r\n            // localStorage.setItem(\"address\", paymentAddr);\r\n            // this.walletAddr = `${paymentAddr.slice(0, 10)}...${paymentAddr.slice(paymentAddr.length - 5, paymentAddr.length)}`;\r\n            // let data = await this.APIServices.namiRegister({\r\n            //   walletAddr: paymentAddr,\r\n            //   name: \"test\",\r\n\r\n            // });\r\n            // console.log(data, \"this is nami address\");\r\n\r\n        } catch (error) {\r\n            console.log('Something went wrong!');\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    openDialog() {\r\n        this.localDataUpdateService.forceUpdateDialogData(true);\r\n        // this.dialog.open(DialogComponent);\r\n    }\r\n\r\n    openReferralLinkDialog() {\r\n        this.localDataUpdateService.forceUpdateDialogData(true);\r\n\r\n    }\r\n\r\n    logout() {\r\n        this.contractService.isLogin = false;\r\n        this.contractService.accountNo = 0;\r\n        this.contractService.totalBalance = 0;\r\n        this.contractService.totalGriseBalance = 0;\r\n        this.contractService.isContractLoadOnNetwork = false;\r\n        this.assignGlobalValues();\r\n\r\n        this.toastrService.success('Sucessfully logout.');\r\n        this.router.navigate(['/']);\r\n    }\r\n\r\n    assignGlobalValues() {\r\n        this.isLogin = this.contractService.isLogin;\r\n        // console.log(this.isLogin , '@this.isLoginapp')\r\n        this.accountNo = this.contractService.accountNo;\r\n        // console.log(this.accountNo , '@this.this.accountNo')\r\n        this.totalBalance = this.contractService.totalBalance;\r\n        this.griseBalance = this.contractService.totalGriseBalance;\r\n    }\r\n\r\n    async assignContractAccounts() {\r\n        await this.liquidityContractService.assignLiquidityAccountNo();\r\n        await this.griseTokenContractService.assignGriseAccountNo();\r\n    }\r\n\r\n    async connectToWallet() {\r\n        await this.refetchBalance();\r\n        await this.afterConnectToWallet();\r\n    }\r\n\r\n    async refetchBalance() {\r\n        await this.contractService.connectToWallet();\r\n        await this.griseTokenContractService.getGriseBalance();\r\n        this.assignGlobalValues();\r\n    }\r\n\r\n    async afterConnectToWallet() {\r\n        this.localDataUpdateService.forceUpdateStakeTransactionsData(true);\r\n        this.localDataUpdateService.forceUpdateExchangeRateData(true);\r\n    }\r\n\r\n    showLaunchDialog() {\r\n        const currentTime = new Date().getTime();\r\n        if (this.launchOn >= currentTime) {\r\n            this.showLaunchTimerDialog = true;\r\n        }\r\n    }\r\n\r\n    getTokenData() {\r\n        this.griseTokenContractService.getTotalSupply().then((totalSupply) => {\r\n            this.totalGriseSupply = totalSupply;\r\n            this.calcMarketCap();\r\n        });\r\n        this.graphDataService.getTableData().subscribe((priceData) => {\r\n            this.priceData = priceData;\r\n            this.calcMarketCap();\r\n        });\r\n    }\r\n\r\n    calcMarketCap() {\r\n        this.marketCapValue = this.totalGriseSupply * this.priceData?.priceUSD;\r\n    }\r\n\r\n    // tslint:disable-next-line:typedef\r\n    /*async connectWallet(type: string) {\r\n        try {\r\n            console.log(type);\r\n            const result = await connect(type as WalletType);\r\n            // @ts-ignore\r\n            const {account, disconnect} = result;\r\n            const address = await account();\r\n            this.connected = true;\r\n            console.log({address, result});\r\n\r\n        } catch (e) {\r\n            switch (e) {\r\n                case 'Petra wallet not installed':\r\n                    window.open('https://petra.app', '_blank');\r\n                    break;\r\n                case 'Martian wallet not installed.':\r\n                    window.open('https://martianwallet.xyz', '_blank');\r\n                    break;\r\n                case 'Pontem wallet not installed.':\r\n                    window.open('https://pontem.network', '_blank');\r\n                    break;\r\n                default:\r\n                    // @ts-ignore\r\n                    console.log('ERROR:', e.message);\r\n            }\r\n            console.log(e);\r\n        }\r\n    }*/\r\n\r\n\r\n    openWalletDialog() {\r\n        const dialogConfig = new MatDialogConfig();\r\n        dialogConfig.disableClose = true;\r\n        dialogConfig.autoFocus = true;\r\n        dialogConfig.width = '30%';\r\n        dialogConfig.data = {disconnect: this.disconnect};\r\n        const modalRef = this.walletDialog.open(ConnectWalletDialogComponent, dialogConfig);\r\n\r\n        modalRef.componentInstance.emitData.subscribe(($e) => {\r\n            console.log('EVENT', $e);\r\n            this.state$.next($e);\r\n            console.log($e);\r\n            modalRef.close();\r\n        });\r\n    }\r\n\r\n    truncAddress = (str, n = 6) => {\r\n        if (str) {\r\n            return `${str.slice(0, n)}...${str.slice(str.length - n)}`;\r\n        }\r\n        return '';\r\n    }\r\n}\r\n","import Loader from \"./loader\";\r\nimport CoinSelection from \"./coinSelection\";\r\nimport { Buffer } from \"buffer\";\r\nimport AssetFingerprint from '@emurgo/cip14-js';\r\n\r\nexport async function Cardano() {\r\n    await Loader.load();\r\n    return Loader.Cardano;\r\n  };\r\n\r\nconst ERROR = {\r\n    FAILED_PROTOCOL_PARAMETER: 'Couldnt fetch protocol parameters from blockfrost',\r\n    TX_TOO_BIG: 'Transaction too big'\r\n}\r\n\r\nclass NamiWalletApi {\r\n    constructor(serilizationLib, nami, apiKey) {\r\n        this.apiKey  = apiKey\r\n        this.Nami = nami\r\n        this.S = serilizationLib\r\n    }\r\n// Nami Wallet Endpoints\r\n  async isInstalled() {\r\n    if (this.Nami) return true\r\n    else return false\r\n  }\r\n\r\n\r\n  async isEnabled() {\r\n    return await this.Nami.isEnabled()\r\n  }\r\n\r\n  async enable() {\r\n    if (!await this.isEnabled()) {\r\n      try {\r\n        return await this.Nami.enable()\r\n      } catch (error) {\r\n        throw error\r\n      }\r\n    }\r\n  }\r\n\r\n  async getAddress() {\r\n    \r\n    if (!this.isEnabled()) throw ERROR.NOT_CONNECTED;\r\n    \r\n    const addressHex = Buffer.from(\r\n        (await this.Nami.getUsedAddresses())[0],\r\n        \"hex\"\r\n    );\r\n    \r\n    const address = this.S.BaseAddress.from_address(\r\n        this.S.Address.from_bytes(addressHex)\r\n    )\r\n        .to_address()\r\n        .to_bech32();\r\n\r\n    \r\n    return address;\r\n  \r\n  }\r\n  async getHexAddress(){\r\n  const addressHex = Buffer.from(\r\n    (await window.cardano.getUsedAddresses())[0],\r\n    \"hex\"\r\n  );\r\n  return addressHex\r\n  }\r\n\r\n  async getNetworkId() {\r\n    if (!this.isEnabled()) throw ERROR.NOT_CONNECTED;\r\n    let networkId = await this.Nami.getNetworkId()\r\n    console.log(\"networkId ============ \", networkId);\r\n    return {\r\n      id: networkId,\r\n      network: networkId === 1 ? 'mainnet' : 'testnet'\r\n    }\r\n  }\r\n\r\n\r\n  async getBalance (){\r\n    // get balance of Nami Wallet\r\n    if (!this.isEnabled()) {\r\n        await this.enable()\r\n    }\r\n    \r\n    const valueCBOR = await this.Nami.getBalance()\r\n    const value = this.S.Value.from_bytes(Buffer.from(valueCBOR, \"hex\"))\r\n    const lovelace = parseInt(value.coin().to_str())\r\n\r\n    const assets = [];\r\n    if (value.multiasset()) {\r\n        const multiAssets = value.multiasset().keys();\r\n        for (let j = 0; j < multiAssets.len(); j++) {\r\n            const policy = multiAssets.get(j);\r\n            const policyAssets = value.multiasset().get(policy);\r\n            const assetNames = policyAssets.keys();\r\n            for (let k = 0; k < assetNames.len(); k++) {\r\n                const policyAsset = assetNames.get(k);\r\n                const quantity = policyAssets.get(policyAsset);\r\n                const asset =\r\n                    Buffer.from(policy.to_bytes(), 'hex').toString('hex') +\r\n                    Buffer.from(policyAsset.name(), 'hex').toString('hex');\r\n                const _policy = asset.slice(0, 56);\r\n                const _name = asset.slice(56);\r\n                const fingerprint = new AssetFingerprint(\r\n                    Buffer.from(_policy, 'hex'),\r\n                    Buffer.from(_name, 'hex')\r\n                ).fingerprint();\r\n                assets.push({\r\n                    unit: asset,\r\n                    quantity: quantity.to_str(),\r\n                    policy: _policy,\r\n                    name: HexToAscii(_name),\r\n                    fingerprint,\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    return {\"lovelace\": lovelace, \r\n            \"assets\": assets}\r\n};\r\n\r\n    getApiKey(networkId) {\r\n        if (networkId == 0) {\r\n            return this.apiKey[0]\r\n            \r\n        } else {\r\n            return this.apiKey[1]\r\n            \r\n        }\r\n    }\r\n\r\n    async registerPolicy(policy){\r\n        fetch(`https://pool.pm/register/policy/${policy.id}`, {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n              type: \"all\",\r\n              scripts: [\r\n                {\r\n                  keyHash: policy.paymentKeyHash,\r\n                  type: \"sig\",\r\n                },\r\n                { slot: policy.ttl, type: \"before\" },\r\n              ],\r\n            }),\r\n          })\r\n            .then((res) => res.json())\r\n            .then(console.log);\r\n    }\r\n    async getUtxos(utxos) {\r\n        let Utxos = utxos.map(u => this.S.TransactionUnspentOutput.from_bytes(\r\n            Buffer.from(\r\n                u,\r\n                'hex'\r\n            )\r\n        ))\r\n        let UTXOS = []\r\n        for (let utxo of Utxos) {\r\n            let assets = this._utxoToAssets(utxo)\r\n\r\n            UTXOS.push({\r\n                txHash: Buffer.from(\r\n                    utxo.input().transaction_id().to_bytes(),\r\n                    'hex'\r\n                ).toString('hex'),\r\n                txId: utxo.input().index(),\r\n                amount: assets\r\n            })\r\n        }\r\n        return UTXOS\r\n    }\r\n\r\n\r\n\r\n    async getUtxosHex() {\r\n        return await this.Nami.getUtxos()\r\n    }\r\n\r\n\r\n\r\n    async transaction({\r\n        PaymentAddress = \"\",\r\n        recipients = [],\r\n        metadata = null,\r\n        utxosRaw = [],\r\n        networkId = 0,\r\n        ttl = 3600, \r\n        multiSig = false\r\n    }) {\r\n        \r\n        \r\n        let utxos = utxosRaw.map(u => this.S.TransactionUnspentOutput.from_bytes(\r\n            Buffer.from(\r\n                u,\r\n                'hex'\r\n            )\r\n        ))\r\n        let protocolParameter = await this._getProtocolParameter(networkId)\r\n        let mintedAssetsArray = []\r\n        let outputs = this.S.TransactionOutputs.new()\r\n        \r\n        let minting = 0;\r\n        let outputValues = {}\r\n        let costValues = {}\r\n        for (let recipient of recipients) {\r\n            let lovelace = Math.floor((recipient.amount || 0) * 1000000).toString()\r\n            let ReceiveAddress = recipient.address\r\n            let multiAsset = this._makeMultiAsset(recipient?.assets || [])\r\n            let mintedAssets = this._makeMintedAssets(recipient?.mintedAssets || [])\r\n            \r\n            let outputValue = this.S.Value.new(\r\n                this.S.BigNum.from_str(lovelace)\r\n            )\r\n            let minAdaMint = this.S.Value.new(\r\n                this.S.BigNum.from_str(\"0\")\r\n            )\r\n\r\n            if (((recipient?.assets || []).length > 0)) {\r\n                outputValue.set_multiasset(multiAsset)\r\n                let minAda = this.S.min_ada_required(\r\n                    outputValue,\r\n                    this.S.BigNum.from_str(protocolParameter.minUtxo)\r\n                )\r\n                \r\n                if (this.S.BigNum.from_str(lovelace).compare(minAda) < 0) outputValue.set_coin(minAda)\r\n\r\n            }\r\n            (recipient?.mintedAssets || []).map((asset) => {\r\n                minting += 1;\r\n                mintedAssetsArray.push({\r\n                    ...asset,\r\n                    address: recipient.address\r\n                })\r\n            })\r\n\r\n\r\n\r\n            \r\n          \r\n            if (parseInt(outputValue.coin().to_str()) > 0) {\r\n                outputValues[recipient.address] = outputValue\r\n            }\r\n            if ((recipient.mintedAssets || []).length > 0) {\r\n                \r\n                minAdaMint = this.S.min_ada_required(\r\n                    mintedAssets,\r\n                    this.S.BigNum.from_str(protocolParameter.minUtxo)\r\n                );\r\n                \r\n                let requiredMintAda = this.S.Value.new(\r\n                    this.S.BigNum.from_str(\"0\")\r\n                )\r\n                requiredMintAda.set_coin(minAdaMint)\r\n                if (outputValue.coin().to_str() == 0 ){\r\n                    outputValue = requiredMintAda\r\n                } else {\r\n                    outputValue = outputValue.checked_add(requiredMintAda)\r\n                }\r\n\r\n\r\n            }\r\n            if (ReceiveAddress != PaymentAddress) costValues[ReceiveAddress] = outputValue\r\n            outputValues[ReceiveAddress] = outputValue\r\n            if (parseInt(outputValue.coin().to_str()) > 0) {\r\n\r\n                outputs.add(\r\n                    this.S.TransactionOutput.new(\r\n                        this.S.Address.from_bech32(ReceiveAddress),\r\n                        outputValue\r\n\r\n                    )\r\n                )\r\n\r\n            }\r\n\r\n        }\r\n        let RawTransaction = null\r\n        if (minting > 0) {\r\n\r\n            outputValues[PaymentAddress] = this.S.Value.new(\r\n                this.S.BigNum.from_str(\"0\"))\r\n\r\n            \r\n            RawTransaction = await this._txBuilderMinting({\r\n                PaymentAddress: PaymentAddress,\r\n                Utxos: utxos,\r\n                Outputs: outputs,\r\n                mintedAssetsArray: mintedAssetsArray,\r\n                outputValues: outputValues,\r\n                ProtocolParameter: protocolParameter,\r\n                metadata: metadata,\r\n                multiSig: multiSig, \r\n                ttl: ttl,\r\n                costValues: costValues\r\n            })\r\n        } else {\r\n            RawTransaction = await this._txBuilder({\r\n                PaymentAddress: PaymentAddress,\r\n                Utxos: utxos,\r\n                Outputs: outputs,\r\n                ProtocolParameter: protocolParameter,\r\n                Metadata: metadata,\r\n                \r\n                Delegation: null\r\n            })\r\n        }\r\n        return Buffer.from(RawTransaction, \"hex\").toString(\"hex\")\r\n      \r\n    }\r\n\r\n    async createLockingPolicyScript(address, networkId, expirationTime) {\r\n        \r\n        var now = new Date()\r\n\r\n        const protocolParameters = await this._getProtocolParameter(networkId);\r\n        \r\n        const slot = parseInt(protocolParameters.slot);\r\n        const duration = expirationTime.getTime() - now.getTime()\r\n\r\n\r\n        const ttl = slot + duration;\r\n\r\n        const paymentKeyHash = this.S.BaseAddress.from_address(\r\n            this.S.Address.from_bytes(\r\n                Buffer.from(address, \"hex\")\r\n\r\n            ))\r\n            .payment_cred()\r\n            .to_keyhash();\r\n        \r\n        const nativeScripts = this.S.NativeScripts.new();\r\n        const script = this.S.ScriptPubkey.new(paymentKeyHash);\r\n        const nativeScript = this.S.NativeScript.new_script_pubkey(script);\r\n        const lockScript = this.S.NativeScript.new_timelock_expiry(\r\n            this.S.TimelockExpiry.new(ttl)\r\n        );\r\n        nativeScripts.add(nativeScript);\r\n        nativeScripts.add(lockScript);\r\n        const finalScript = this.S.NativeScript.new_script_all(\r\n            this.S.ScriptAll.new(nativeScripts)\r\n        );\r\n        const policyId = Buffer.from(\r\n            this.S.ScriptHash.from_bytes(\r\n                finalScript.hash().to_bytes()\r\n            ).to_bytes(),\r\n            \"hex\"\r\n        ).toString(\"hex\");\r\n        return {\r\n            id: policyId,\r\n            script: Buffer.from(finalScript.to_bytes()).toString(\"hex\"),\r\n            paymentKeyHash: Buffer.from(paymentKeyHash.to_bytes(), \"hex\").toString(\"hex\"),\r\n            ttl\r\n        };\r\n    }\r\n\r\n\r\n    async signTx(transaction) {\r\n        if (!this.isEnabled()) throw ERROR.NOT_CONNECTED;\r\n        return await this.Nami.signTx(transaction)\r\n      }\r\n    \r\n    async signData(string) {\r\n        let address = await getAddressHex()\r\n        let coseSign1Hex = await Nami.signData(\r\n            address,\r\n            Buffer.from(\r\n                string,\r\n                \"ascii\"\r\n            ).toString('hex')\r\n        )\r\n        return coseSign1Hex\r\n    }\r\n\r\n\r\n    //////////////////////////////////////////////////\r\n\r\n    _makeMintedAssets(mintedAssets) {\r\n     \r\n        let AssetsMap = {}\r\n\r\n        for (let asset of mintedAssets) {\r\n            let assetName = asset.assetName\r\n            let quantity = asset.quantity\r\n            if (!Array.isArray(AssetsMap[asset.policyId])) {\r\n                AssetsMap[asset.policyId] = []\r\n            }\r\n            AssetsMap[asset.policyId].push({\r\n                \"unit\": Buffer.from(assetName, 'ascii').toString('hex'),\r\n                \"quantity\": quantity\r\n            })\r\n\r\n        }\r\n        let multiAsset = this.S.MultiAsset.new()\r\n        \r\n        for (const policy in AssetsMap) {\r\n\r\n            const ScriptHash = this.S.ScriptHash.from_bytes(\r\n                Buffer.from(policy, 'hex')\r\n            )\r\n            const Assets = this.S.Assets.new()\r\n\r\n            const _assets = AssetsMap[policy]\r\n\r\n            for (const asset of _assets) {\r\n                const AssetName = this.S.AssetName.new(Buffer.from(asset.unit, 'hex'))\r\n                const BigNum = this.S.BigNum.from_str(asset.quantity)\r\n\r\n                Assets.insert(AssetName, BigNum)\r\n            }\r\n            \r\n            multiAsset.insert(ScriptHash, Assets)\r\n            \r\n        }\r\n        const value = this.S.Value.new(\r\n            this.S.BigNum.from_str(\"0\")\r\n        );\r\n        \r\n        value.set_multiasset(multiAsset);\r\n        return value\r\n    }\r\n\r\n    _makeMultiAsset(assets) {\r\n        \r\n        let AssetsMap = {}\r\n        for (let asset of assets) {\r\n            let [policy, assetName] = asset.unit.split('.')\r\n            let quantity = asset.quantity\r\n            if (!Array.isArray(AssetsMap[policy])) {\r\n                AssetsMap[policy] = []\r\n            }\r\n            AssetsMap[policy].push({\r\n                \"unit\": Buffer.from(assetName, 'ascii').toString('hex'),\r\n                \"quantity\": quantity\r\n            })\r\n\r\n        }\r\n\r\n        let multiAsset = this.S.MultiAsset.new()\r\n     \r\n        for (const policy in AssetsMap) {\r\n\r\n            const ScriptHash = this.S.ScriptHash.from_bytes(\r\n                Buffer.from(policy, 'hex')\r\n            )\r\n            const Assets = this.S.Assets.new()\r\n\r\n            const _assets = AssetsMap[policy]\r\n\r\n            for (const asset of _assets) {\r\n                const AssetName = this.S.AssetName.new(Buffer.from(asset.unit, 'hex'))\r\n                const BigNum = this.S.BigNum.from_str(asset.quantity.toString())\r\n\r\n                Assets.insert(AssetName, BigNum)\r\n            }\r\n            \r\n            multiAsset.insert(ScriptHash, Assets)\r\n            \r\n        }\r\n\r\n        return multiAsset\r\n    }\r\n\r\n    _utxoToAssets(utxo) {\r\n        let value = utxo.output().amount()\r\n        const assets = [];\r\n        assets.push({\r\n            unit: 'lovelace',\r\n            quantity: value.coin().to_str()\r\n        });\r\n        if (value.multiasset()) {\r\n            const multiAssets = value.multiasset().keys();\r\n            for (let j = 0; j < multiAssets.len(); j++) {\r\n                const policy = multiAssets.get(j);\r\n                const policyAssets = value.multiasset().get(policy);\r\n                const assetNames = policyAssets.keys();\r\n                for (let k = 0; k < assetNames.len(); k++) {\r\n                    const policyAsset = assetNames.get(k);\r\n                    const quantity = policyAssets.get(policyAsset);\r\n                    const asset =\r\n                        Buffer.from(\r\n                            policy.to_bytes()\r\n                        ).toString('hex') + \".\" +\r\n                        Buffer.from(\r\n                            policyAsset.name()\r\n                        ).toString('ascii')\r\n\r\n\r\n                    assets.push({\r\n                        unit: asset,\r\n                        quantity: quantity.to_str(),\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        return assets;\r\n    }\r\n    async _txBuilderMinting({\r\n        PaymentAddress,\r\n        Utxos,\r\n        Outputs,\r\n        ProtocolParameter,\r\n        mintedAssetsArray = [],\r\n    \r\n        outputValues = {},\r\n        metadata = null,\r\n        ttl = 3600,\r\n        multiSig = false, \r\n        costValues = {}\r\n    }) {\r\n        \r\n       \r\n        const MULTIASSET_SIZE = 5000;\r\n        const VALUE_SIZE = 5000;\r\n        const totalAssets = 0;\r\n\r\n        \r\n        \r\n        CoinSelection.setProtocolParameters(\r\n            ProtocolParameter.minUtxo.toString(),\r\n            ProtocolParameter.linearFee.minFeeA.toString(),\r\n            ProtocolParameter.linearFee.minFeeB.toString(),\r\n            ProtocolParameter.maxTxSize.toString()\r\n        )\r\n        const selection = await CoinSelection.randomImprove(\r\n            Utxos,\r\n            Outputs,\r\n            20 + totalAssets,\r\n            \r\n        )\r\n\r\n        const nativeScripts = this.S.NativeScripts.new();\r\n        let mint = this.S.Mint.new();\r\n        \r\n        let mintedAssetsDict = {}\r\n        let assetsDict = {}\r\n        for (let asset of mintedAssetsArray) {\r\n            if (typeof assetsDict[asset.assetName] == \"undefined\") {\r\n                assetsDict[asset.assetName] = {};\r\n                assetsDict[asset.assetName].quantity = 0\r\n                assetsDict[asset.assetName].policyScript = asset.policyScript;\r\n            }\r\n            assetsDict[asset.assetName].quantity = assetsDict[asset.assetName].quantity + parseInt(asset.quantity)\r\n        }\r\n        \r\n        Object.entries(assetsDict).map(([assetName, asset])=>{\r\n            \r\n            \r\n            const mintAssets = this.S.MintAssets.new();\r\n            mintAssets.insert(\r\n                this.S.AssetName.new(Buffer.from(assetName)),\r\n                this.S.Int.new(this.S.BigNum.from_str(asset.quantity.toString()))\r\n            );\r\n           \r\n            if (typeof mintedAssetsDict[asset.policyScript] == \"undefined\") {\r\n                mintedAssetsDict[asset.policyScript] = this.S.MintAssets.new();\r\n           \r\n            }\r\n            mintedAssetsDict[asset.policyScript].insert(\r\n                this.S.AssetName.new(Buffer.from(assetName)),\r\n                this.S.Int.new(this.S.BigNum.from_str(asset.quantity.toString()))\r\n            );\r\n         \r\n           \r\n\r\n        })\r\n\r\n\r\n        for (let asset of mintedAssetsArray) {\r\n            const multiAsset = this.S.MultiAsset.new();\r\n            const mintedAssets = this.S.Assets.new();\r\n           \r\n            const policyScript = this.S.NativeScript.from_bytes(Buffer.from(asset.policyScript, \"hex\"))\r\n            nativeScripts.add(policyScript);\r\n            \r\n            mintedAssets.insert(\r\n                this.S.AssetName.new(Buffer.from(asset.assetName)),\r\n                this.S.BigNum.from_str(asset.quantity.toString())\r\n            );\r\n\r\n            multiAsset.insert(\r\n                this.S.ScriptHash.from_bytes(policyScript.hash(this.S.ScriptHashNamespace.NativeScript).to_bytes()),\r\n                mintedAssets\r\n            );\r\n            const mintedValue = this.S.Value.new(\r\n                this.S.BigNum.from_str(\"0\")\r\n            );\r\n            mintedValue.set_multiasset(multiAsset);\r\n            if (typeof outputValues[asset.address] == \"undefined\") {\r\n                outputValues[asset.address] = this.S.Value.new(\r\n                    this.S.BigNum.from_str(\"0\")\r\n                );\r\n            }\r\n            // if (asset.address != PaymentAddress) {\r\n            //     let minAdaMint = this.S.min_ada_required(\r\n            //         mintedValue,\r\n            //         this.S.BigNum.from_str(ProtocolParameter.minUtxo)\r\n            //     );\r\n\r\n            //     mintedValue.set_coin(minAdaMint)\r\n            // }\r\n            outputValues[asset.address] = outputValues[asset.address].checked_add(mintedValue)\r\n        }\r\n      \r\n        Object.entries(mintedAssetsDict).map(([policyScriptHex, mintAssets]) => {\r\n        const policyScript = this.S.NativeScript.from_bytes(Buffer.from(policyScriptHex, \"hex\"))\r\n        mint.insert(\r\n            this.S.ScriptHash.from_bytes(\r\n                policyScript\r\n                    .hash(this.S.ScriptHashNamespace.NativeScript)\r\n                    .to_bytes()\r\n            ),\r\n            mintAssets\r\n        );\r\n      \r\n            }) \r\n\r\n       \r\n\r\n        const inputs = this.S.TransactionInputs.new();\r\n        \r\n        selection.input.forEach((utxo) => {\r\n\r\n            inputs.add(\r\n                this.S.TransactionInput.new(\r\n                    utxo.input().transaction_id(),\r\n                    utxo.input().index()\r\n                )\r\n            );\r\n            outputValues[PaymentAddress] = outputValues[PaymentAddress].checked_add(utxo.output().amount());\r\n        });\r\n\r\n  \r\n        const rawOutputs = this.S.TransactionOutputs.new();\r\n        \r\n        Object.entries(outputValues).map(([address, value]) => {\r\n            \r\n            rawOutputs.add(\r\n                this.S.TransactionOutput.new(\r\n                    this.S.Address.from_bech32(address),\r\n                    value\r\n                )\r\n            );\r\n        })\r\n        \r\n        const fee = this.S.BigNum.from_str(\"0\");\r\n        const rawTxBody = this.S.TransactionBody.new(\r\n            inputs,\r\n            rawOutputs,\r\n            fee,\r\n            ttl + ProtocolParameter.slot\r\n        );\r\n        rawTxBody.set_mint(mint);\r\n\r\n       \r\n\r\n        let aux = this.S.AuxiliaryData.new()\r\n        \r\n        if (metadata) {\r\n            const generalMetadata = this.S.GeneralTransactionMetadata.new();\r\n            Object.entries(metadata).map(([MetadataLabel, Metadata]) => {\r\n            \r\n            generalMetadata.insert(\r\n                this.S.BigNum.from_str(MetadataLabel),\r\n                this.S.encode_json_str_to_metadatum(JSON.stringify(Metadata), 0)\r\n            );\r\n            });\r\n\r\n            aux.set_metadata(generalMetadata)\r\n            \r\n            rawTxBody.set_auxiliary_data_hash(this.S.hash_auxiliary_data(aux));\r\n            \r\n\r\n\r\n        }\r\n\r\n        rawTxBody.set_auxiliary_data_hash(this.S.hash_auxiliary_data(aux));\r\n        const witnesses = this.S.TransactionWitnessSet.new();\r\n        witnesses.set_native_scripts(nativeScripts);\r\n\r\n        const dummyVkeyWitness =\r\n            \"8258208814c250f40bfc74d6c64f02fc75a54e68a9a8b3736e408d9820a6093d5e38b95840f04a036fa56b180af6537b2bba79cec75191dc47419e1fd8a4a892e7d84b7195348b3989c15f1e7b895c5ccee65a1931615b4bdb8bbbd01e6170db7a6831310c\";\r\n\r\n        const vkeys = this.S.Vkeywitnesses.new();\r\n        vkeys.add(\r\n            this.S.Vkeywitness.from_bytes(\r\n                Buffer.from(dummyVkeyWitness, \"hex\")\r\n            )\r\n        );\r\n\r\n        vkeys.add(\r\n            this.S.Vkeywitness.from_bytes(\r\n                Buffer.from(dummyVkeyWitness, \"hex\")\r\n            )\r\n        );\r\n        if (multiSig) {\r\n        vkeys.add(\r\n            this.S.Vkeywitness.from_bytes(\r\n                Buffer.from(dummyVkeyWitness, \"hex\")\r\n            )\r\n        );\r\n            }\r\n        witnesses.set_vkeys(vkeys);\r\n\r\n\r\n        const rawTx = this.S.Transaction.new(\r\n            rawTxBody,\r\n            witnesses,\r\n            aux\r\n        );\r\n\r\n        let minFee = this.S.min_fee(rawTx, this.S.LinearFee.new(\r\n            this.S.BigNum.from_str(ProtocolParameter.linearFee.minFeeA),\r\n            this.S.BigNum.from_str(ProtocolParameter.linearFee.minFeeB)\r\n        ));\r\n        \r\n        outputValues[PaymentAddress] = outputValues[PaymentAddress].checked_sub(this.S.Value.new(minFee));\r\n        Object.entries(costValues).map(([address, value]) => {\r\n\r\n            outputValues[PaymentAddress] = outputValues[PaymentAddress].checked_sub(value);\r\n\r\n        })\r\n\r\n        const outputs = this.S.TransactionOutputs.new();\r\n        Object.entries(outputValues).map(([address, value]) => {\r\n            \r\n            outputs.add(\r\n                this.S.TransactionOutput.new(\r\n                    this.S.Address.from_bech32(address),\r\n                    value\r\n                )\r\n            );\r\n        })\r\n\r\n      \r\n        \r\n        const finalTxBody = this.S.TransactionBody.new(\r\n            inputs,\r\n            outputs,\r\n            minFee,\r\n            ttl + ProtocolParameter.slot\r\n        );\r\n\r\n        finalTxBody.set_mint(rawTxBody.multiassets());\r\n\r\n        finalTxBody.set_auxiliary_data_hash(rawTxBody.auxiliary_data_hash());\r\n\r\n        const finalWitnesses = this.S.TransactionWitnessSet.new();\r\n        finalWitnesses.set_native_scripts(nativeScripts);\r\n\r\n        const transaction = this.S.Transaction.new(\r\n            finalTxBody,\r\n            finalWitnesses,\r\n            rawTx.auxiliary_data()\r\n        );\r\n\r\n        const size = transaction.to_bytes().length * 2;\r\n        if (size > ProtocolParameter.maxTxSize) throw ERROR.TX_TOO_BIG;\r\n        \r\n        return transaction.to_bytes()\r\n    }\r\n    async _txBuilder({\r\n        PaymentAddress,\r\n        Utxos,\r\n        Outputs,\r\n        ProtocolParameter,\r\n\r\n        metadata = null,\r\n        \r\n\r\n    }) {\r\n        \r\n        const MULTIASSET_SIZE = 5000;\r\n        const VALUE_SIZE = 5000;\r\n        const totalAssets = 0;\r\n\r\n        \r\n        \r\n        CoinSelection.setProtocolParameters(\r\n            ProtocolParameter.minUtxo.toString(),\r\n            ProtocolParameter.linearFee.minFeeA.toString(),\r\n            ProtocolParameter.linearFee.minFeeB.toString(),\r\n            ProtocolParameter.maxTxSize.toString()\r\n        )\r\n\r\n        const selection = await CoinSelection.randomImprove(\r\n            Utxos,\r\n            Outputs,\r\n            20 + totalAssets,\r\n            \r\n        )\r\n        console.log(selection)\r\n        const inputs = selection.input;\r\n        const txBuilder = this.S.TransactionBuilder.new(\r\n            this.S.LinearFee.new(\r\n                this.S.BigNum.from_str(ProtocolParameter.linearFee.minFeeA),\r\n                this.S.BigNum.from_str(ProtocolParameter.linearFee.minFeeB)\r\n            ),\r\n            this.S.BigNum.from_str(ProtocolParameter.minUtxo.toString()),\r\n            this.S.BigNum.from_str(ProtocolParameter.poolDeposit.toString()),\r\n            this.S.BigNum.from_str(ProtocolParameter.keyDeposit.toString()),\r\n            MULTIASSET_SIZE,\r\n            MULTIASSET_SIZE\r\n        );\r\n\r\n        for (let i = 0; i < inputs.length; i++) {\r\n            const utxo = inputs[i];\r\n            txBuilder.add_input(\r\n                utxo.output().address(),\r\n                utxo.input(),\r\n                utxo.output().amount()\r\n            );\r\n        }\r\n\r\n\r\n        let AUXILIARY_DATA\r\n        if (metadata) {\r\n            AUXILIARY_DATA = this.S.AuxiliaryData.new()\r\n            const generalMetadata = this.S.GeneralTransactionMetadata.new();\r\n            Object.entries(Metadata).map(([MetadataLabel, Metadata]) => {\r\n            generalMetadata.insert(\r\n                this.S.BigNum.from_str(MetadataLabel),\r\n                this.S.encode_json_str_to_metadatum(JSON.stringify(Metadata), 0)\r\n            );\r\n            });\r\n\r\n            aux.set_metadata(generalMetadata)\r\n            \r\n            txBuilder.set_auxiliary_data(AUXILIARY_DATA)\r\n        }\r\n\r\n        for (let i = 0; i < Outputs.len(); i++) {\r\n            txBuilder.add_output(Outputs.get(i))\r\n        }\r\n\r\n\r\n        const change = selection.change;\r\n        const changeMultiAssets = change.multiasset();\r\n        // check if change value is too big for single output\r\n        if (changeMultiAssets && change.to_bytes().length * 2 > VALUE_SIZE) {\r\n            const partialChange = this.S.Value.new(\r\n                this.S.BigNum.from_str('0')\r\n            );\r\n\r\n            const partialMultiAssets = this.S.MultiAsset.new();\r\n            const policies = changeMultiAssets.keys();\r\n            const makeSplit = () => {\r\n                for (let j = 0; j < changeMultiAssets.len(); j++) {\r\n                    const policy = policies.get(j);\r\n                    const policyAssets = changeMultiAssets.get(policy);\r\n                    const assetNames = policyAssets.keys();\r\n                    const assets = this.S.Assets.new();\r\n                    for (let k = 0; k < assetNames.len(); k++) {\r\n                        const policyAsset = assetNames.get(k);\r\n                        const quantity = policyAssets.get(policyAsset);\r\n                        assets.insert(policyAsset, quantity);\r\n                        //check size\r\n                        const checkMultiAssets = this.S.MultiAsset.from_bytes(\r\n                            partialMultiAssets.to_bytes()\r\n                        );\r\n                        checkMultiAssets.insert(policy, assets);\r\n                        const checkValue = this.S.Value.new(\r\n                            this.S.BigNum.from_str('0')\r\n                        );\r\n                        checkValue.set_multiasset(checkMultiAssets);\r\n                        if (\r\n                            checkValue.to_bytes().length * 2 >=\r\n                            VALUE_SIZE\r\n                        ) {\r\n                            partialMultiAssets.insert(policy, assets);\r\n                            return;\r\n                        }\r\n                    }\r\n                    partialMultiAssets.insert(policy, assets);\r\n                }\r\n            };\r\n\r\n            makeSplit();\r\n            partialChange.set_multiasset(partialMultiAssets);\r\n\r\n            const minAda = this.S.min_ada_required(\r\n                partialChange,\r\n                this.S.BigNum.from_str(ProtocolParameter.minUtxo)\r\n            );\r\n            partialChange.set_coin(minAda);\r\n\r\n            txBuilder.add_output(\r\n                this.S.TransactionOutput.new(\r\n                    this.S.Address.from_bech32(PaymentAddress),\r\n                    partialChange\r\n                )\r\n            );\r\n        }\r\n        txBuilder.add_change_if_needed(\r\n            this.S.Address.from_bech32(PaymentAddress)\r\n        );\r\n        const transaction = this.S.Transaction.new(\r\n            txBuilder.build(),\r\n            this.S.TransactionWitnessSet.new(),\r\n            AUXILIARY_DATA\r\n        )\r\n\r\n        const size = transaction.to_bytes().length * 2;\r\n        if (size > ProtocolParameter.maxTxSize) throw ERROR.TX_TOO_BIG;\r\n\r\n        return transaction.to_bytes()\r\n    }\r\n\r\n    async submitTx({\r\n        transactionRaw,\r\n        witnesses,\r\n        scripts,\r\n        networkId\r\n    }) {\r\n\r\n        \r\n        let transaction = this.S.Transaction.from_bytes(Buffer.from(transactionRaw, \"hex\"))\r\n\r\n\r\n        const txWitnesses = transaction.witness_set();\r\n        const txVkeys = txWitnesses.vkeys();\r\n        const txScripts = txWitnesses.native_scripts();\r\n\r\n\r\n        const addWitnesses = this.S.TransactionWitnessSet.from_bytes(\r\n            Buffer.from(witnesses[0], \"hex\")\r\n        );\r\n        const addVkeys = addWitnesses.vkeys();\r\n        const addScripts = addWitnesses.native_scripts();\r\n\r\n        const totalVkeys = this.S.Vkeywitnesses.new();\r\n        const totalScripts = this.S.NativeScripts.new();\r\n\r\n        if (txVkeys) {\r\n            for (let i = 0; i < txVkeys.len(); i++) {\r\n                totalVkeys.add(txVkeys.get(i));\r\n            }\r\n        }\r\n        if (txScripts) {\r\n            for (let i = 0; i < txScripts.len(); i++) {\r\n                totalScripts.add(txScripts.get(i));\r\n            }\r\n        }\r\n        if (addVkeys) {\r\n            for (let i = 0; i < addVkeys.len(); i++) {\r\n                totalVkeys.add(addVkeys.get(i));\r\n            }\r\n        }\r\n        if (addScripts) {\r\n            for (let i = 0; i < addScripts.len(); i++) {\r\n                totalScripts.add(addScripts.get(i));\r\n            }\r\n        }\r\n\r\n        const totalWitnesses = this.S.TransactionWitnessSet.new();\r\n        totalWitnesses.set_vkeys(totalVkeys);\r\n        totalWitnesses.set_native_scripts(totalScripts);\r\n\r\n        const signedTx = await this.S.Transaction.new(\r\n            transaction.body(),\r\n            totalWitnesses,\r\n            transaction.auxiliary_data()\r\n        );\r\n     \r\n        const txhash = await this._blockfrostRequest({\r\n            endpoint: `/tx/submit`,\r\n            headers: {\r\n                \"Content-Type\": \"application/cbor\"\r\n            },\r\n            body: Buffer.from(signedTx.to_bytes(), \"hex\"),\r\n            networkId: networkId,\r\n            method: \"POST\"\r\n        });\r\n        \r\n        return txhash\r\n\r\n    }\r\n    async _getProtocolParameter(networkId) {\r\n\r\n        let latestBlock = await this._blockfrostRequest({\r\n            endpoint: \"/blocks/latest\",\r\n            networkId: networkId,\r\n            method: \"GET\"\r\n        })\r\n        if (!latestBlock) throw ERROR.FAILED_PROTOCOL_PARAMETER\r\n\r\n        let p = await this._blockfrostRequest({\r\n            endpoint: `/epochs/${latestBlock.epoch}/parameters`,\r\n            networkId: networkId,\r\n            method: \"GET\"\r\n        }) // if(!p) throw ERROR.FAILED_PROTOCOL_PARAMETER\r\n\r\n        return {\r\n            linearFee: {\r\n                minFeeA: p.min_fee_a.toString(),\r\n                minFeeB: p.min_fee_b.toString(),\r\n            },\r\n            minUtxo: '1000000', //p.min_utxo, minUTxOValue protocol paramter has been removed since Alonzo HF. Calulation of minADA works differently now, but 1 minADA still sufficient for now\r\n            poolDeposit: p.pool_deposit,\r\n            keyDeposit: p.key_deposit,\r\n            maxTxSize: p.max_tx_size,\r\n            slot: latestBlock.slot,\r\n        };\r\n\r\n    }\r\n    async _submitRequest(body) {\r\n\r\n        let latestBlock = await this._blockfrostRequest({\r\n            endpoint: \"/blocks/latest\",\r\n            network: networkId\r\n        })\r\n        if (!latestBlock) throw ERROR.FAILED_PROTOCOL_PARAMETER\r\n\r\n        let p = await this._blockfrostRequest({\r\n            endpoint: `/epochs/${latestBlock.epoch}/parameters`,\r\n            networkId: networkId\r\n        }) //\r\n        if (!p) throw ERROR.FAILED_PROTOCOL_PARAMETER\r\n\r\n        return {\r\n            linearFee: {\r\n                minFeeA: p.min_fee_a.toString(),\r\n                minFeeB: p.min_fee_b.toString(),\r\n            },\r\n            minUtxo: '1000000', //p.min_utxo, minUTxOValue protocol paramter has been removed since Alonzo HF. Calulation of minADA works differently now, but 1 minADA still sufficient for now\r\n            poolDeposit: p.pool_deposit,\r\n            keyDeposit: p.key_deposit,\r\n            maxTxSize: p.max_tx_size,\r\n            slot: latestBlock.slot,\r\n        };\r\n\r\n    }\r\n    async _blockfrostRequest({\r\n        body,\r\n        endpoint = \"\",\r\n        networkId = 0,\r\n        headers = {},\r\n        method = \"GET\"\r\n    }) {\r\n        let networkEndpoint = networkId == 0 ?\r\n            'https://cardano-testnet.blockfrost.io/api/v0' :\r\n            'https://cardano-mainnet.blockfrost.io/api/v0'\r\n        let blockfrostApiKey = this.getApiKey(networkId)\r\n        \r\n        try {\r\n            return await (await fetch(`${networkEndpoint}${endpoint}`, {\r\n                headers: {\r\n                    project_id: blockfrostApiKey,\r\n                    ...headers\r\n                },\r\n                method: method,\r\n                body\r\n            })).json()\r\n        } catch (error) {\r\n            console.log(error)\r\n            return null\r\n        }\r\n    }\r\n\r\n}\r\n//////////////////////////////////////////////////\r\n//Auxiliary\r\n\r\nfunction AsciiToBuffer(string) {\r\n    return Buffer.from(string, \"ascii\")\r\n}\r\n\r\nfunction HexToBuffer(string) {\r\n    return Buffer.from(string, \"hex\")\r\n}\r\n\r\nfunction AsciiToHex(string) {\r\n    return AsciiToBuffer(string).toString('hex')\r\n}\r\n\r\nfunction HexToAscii(string) {\r\n    return HexToBuffer(string).toString(\"ascii\")\r\n}\r\n\r\nfunction BufferToAscii(buffer) {\r\n    return buffer.toString('ascii')\r\n}\r\n\r\nfunction BufferToHex(buffer) {\r\n    return buffer.toString(\"hex\")\r\n}\r\n\r\n\r\n\r\nexport default NamiWalletApi;\r\n","import { DOCUMENT } from '@angular/common';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  renderer: any;\r\n\r\n  constructor(@Inject(DOCUMENT) private document: any) {\r\n    this.document.body.classList.add('leftmenu');\r\n   }\r\n   loginbox: boolean = true;\r\n   forgotbox: boolean = false;\r\n   signupform :boolean = false;\r\n\r\n  ngOnInit(): void {\r\n    \r\n  }\r\n  ngOnDestroy() {\r\n    this.document.body.classList.remove('leftmenu');\r\n  }\r\n  forgetboxshow(){\r\n    this.loginbox = false;\r\n    this.forgotbox = true;\r\n    this.signupform = false;\r\n  }\r\n  createAccount(){\r\n    this.loginbox = false;\r\n    this.forgotbox = false;\r\n    this.signupform = true;\r\n  }\r\n\r\n}\r\n","\r\n<div class=\"container\">\r\n    <div class=\"row full-height\">\r\n        <div class=\"col-md-7 col-lg-5 mx-auto\">\r\n            <div class=\"tab flex-column align-items-center\">\r\n                <div class=\"w-100\" *ngIf=\"loginbox\">\r\n                    <h3>Login</h3>\r\n                    <form>\r\n                        <div class=\"mb-5\">\r\n                        <label for=\"exampleInputEmail1\" class=\"form-label\">Email address</label>\r\n                        <input type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\">\r\n                        \r\n                        </div>\r\n                        <div class=\"mb-5\">\r\n                        <label for=\"exampleInputPassword1\" class=\"form-label\">Password</label>\r\n                        <input type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\">\r\n                        </div>\r\n                        <!-- <div class=\"forget-btn mb-5\">\r\n                            <a href=\"javascript:void(0)\" (click)=\"forgetboxshow()\">Forgot Password?</a>\r\n                        </div> -->\r\n                        <button type=\"submit\" class=\"btn btn-primary tab-button\">Login</button>\r\n                    </form>\r\n                    <p class=\"d-flex flex-column\">New to Grise Metamoonverse? <a href=\"javascript:void(0)\" (click)=\"createAccount()\" class=\"mint-color\">Create New Account</a></p>\r\n                    \r\n                </div>\r\n\r\n                <div class=\"w-100\" *ngIf=\"forgotbox\">\r\n                    <h3>Password reset</h3>\r\n                    <form>\r\n                        <div class=\"mb-5\">\r\n                            <label for=\"exampleInputEmail1\" class=\"form-label\">Email address</label>\r\n                            <input type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\">\r\n                        </div>\r\n                        <button type=\"submit\" class=\"btn btn-primary tab-button\">Submit</button>\r\n                    </form>\r\n                </div>\r\n                \r\n                \r\n                <div class=\"w-100\" *ngIf=\"signupform\">\r\n                    <h3>Register</h3>\r\n                    <form>\r\n                        <div class=\"mb-5\">\r\n                            <label for=\"Username\" class=\"form-label\">Username</label>\r\n                            <input type=\"text\" class=\"form-control\" id=\"Username\" aria-describedby=\"Username\">\r\n                        </div>\r\n                        <div class=\"mb-5\">\r\n                            <label for=\"exampleInputEmail1\" class=\"form-label\">Email</label>\r\n                            <input type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\">\r\n                        </div>\r\n                        <div class=\"mb-5\">\r\n                            <label for=\"exampleInputPassword1\" class=\"form-label\">Password</label>\r\n                            <input type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\">\r\n                        </div>\r\n                        <button type=\"submit\" class=\"btn btn-primary tab-button\">Sign Up</button>\r\n                    </form>\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import {\r\n  TransactionUnspentOutput,\r\n  TransactionOutputs,\r\n  Value,\r\n} from \"@emurgo/cardano-serialization-lib-browser/cardano_serialization_lib\";\r\nimport Loader from \"./loader\";\r\nconst BigInt = typeof window !== \"undefined\" && window.BigInt;\r\n/**\r\n * BerryPool implementation of the __Random-Improve__ coin selection algorithm.\r\n *\r\n * = Overview\r\n *\r\n * The __Random-Improve__ coin selection algorithm works in __two phases__, by\r\n * /first/ selecting UTxO entries /at random/ to pay for each of the given\r\n * outputs, and /then/ attempting to /improve/ upon each of the selections.\r\n *\r\n * === Phase 1: Random Selection\r\n *\r\n * __In this phase, the algorithm randomly selects a minimal set of UTxO__\r\n * __entries to pay for each of the given outputs.__\r\n *\r\n * During this phase, the algorithm:\r\n *\r\n *   *  processes outputs in /descending order of coin value/.\r\n *\r\n *   *  maintains a /remaining UTxO set/, initially equal to the given\r\n *      /UTxO set/ parameter.\r\n *\r\n *   *  based on every output nature, generate a /native token UTxO subset/\r\n *      to narrow down to useful UTxO\r\n *\r\n *   *  maintains an /accumulated coin selection/, which is initially /empty/.\r\n *\r\n * For each output of value __/v/__, the algorithm /randomly/ selects entries\r\n * from the /remaining UTxO set/, until the total value of selected entries is\r\n * greater than or equal to __/v/__. The selected entries are then associated\r\n * with that output, and removed from the /remaining UTxO set/.\r\n *\r\n * This phase ends when every output has been associated with a selection of\r\n * UTxO entries.\r\n *\r\n * However, if the remaining UTxO set is completely exhausted before all\r\n * outputs can be processed, the algorithm terminates with an error.\r\n *\r\n * === Phase 2: Improvement\r\n *\r\n * __In this phase, the algorithm attempts to improve upon each of the UTxO__\r\n * __selections made in the previous phase, by conservatively expanding the__\r\n * __selection made for each output.__\r\n *\r\n * During this phase, the algorithm:\r\n *\r\n *   *  processes outputs in /ascending order of coin value/.\r\n *\r\n *   *  continues to maintain the /remaining UTxO set/ produced by the previous\r\n *      phase.\r\n *\r\n *   *  maintains an /accumulated coin selection/, initiated from previous phase.\r\n *\r\n * For each output of value __/v/__, the algorithm:\r\n *\r\n *  1.  __Calculates a /target range/__ for the total value of inputs used to\r\n *      pay for that output, defined by the triplet:\r\n *\r\n *      (/minimum/, /ideal/, /maximum/) = (/v/, /2v/, /3v/)\r\n *\r\n *  2.  __Attempts to /improve/ upon the /existing UTxO selection/__ for that\r\n *      output, by repeatedly selecting additional entries at random from the\r\n *      /remaining UTxO set/, stopping when the selection can be improved upon\r\n *      no further.\r\n *\r\n *      A selection with value /v1/ is considered to be an /improvement/ over a\r\n *      selection with value /v0/ if __all__ of the following conditions are\r\n *      satisfied:\r\n *\r\n *       * __Condition 1__: we have moved closer to the /ideal/ value:\r\n *\r\n *             abs (/ideal/ − /v1/) < abs (/ideal/ − /v0/)\r\n *\r\n *       * __Condition 2__: we have not exceeded the /maximum/ value:\r\n *\r\n *             /v1/ ≤ /maximum/\r\n *\r\n *       * __Condition 3__: when counting cumulatively across all outputs\r\n *       considered so far, we have not selected more than the /maximum/ number\r\n *       of UTxO entries specified by 'limit'.\r\n *\r\n *  3.  __Creates a /change value/__ for the output, equal to the total value\r\n *      of the /final UTxO selection/ for that output minus the value /v/ of\r\n *      that output.\r\n *\r\n *  4.  __Updates the /accumulated coin selection/__:\r\n *\r\n *       * Adds the /output/ to 'outputs'.\r\n *       * Adds the /improved UTxO selection/ to 'inputs'.\r\n *       * Adds the /change value/ to 'change'.\r\n *\r\n * This phase ends when every output has been processed, __or__ when the\r\n * /remaining UTxO set/ has been exhausted, whichever occurs sooner.\r\n *\r\n * = Termination\r\n *\r\n * When both phases are complete, the algorithm terminates.\r\n *\r\n * The /accumulated coin selection/ and /remaining UTxO set/ are returned to\r\n * the caller.\r\n *\r\n * === Failure Modes\r\n *\r\n * The algorithm terminates with an __error__ if:\r\n *\r\n *  1.  The /total value/ of the initial UTxO set (the amount of money\r\n *      /available/) is /less than/ the total value of the output list (the\r\n *      amount of money /required/).\r\n *\r\n *      See: __'InputsExhaustedError'__.\r\n *\r\n *  2.  The /number/ of UTxO entries needed to pay for the requested outputs\r\n *      would /exceed/ the upper limit specified by 'limit'.\r\n *\r\n *      See: __'InputLimitExceededError'__.\r\n *\r\n * == Motivating Principles\r\n *\r\n * There are several motivating principles behind the design of the algorithm.\r\n *\r\n * === Principle 1: Dust Management\r\n *\r\n * The probability that random selection will choose dust entries from a UTxO\r\n * set increases with the proportion of dust in the set.\r\n *\r\n * Therefore, for a UTxO set with a large amount of dust, there's a high\r\n * probability that a random subset will include a large amount of dust.\r\n *\r\n * === Principle 2: Change Management\r\n *\r\n * Ideally, coin selection algorithms should, over time, create a UTxO set that\r\n * has /useful/ outputs: outputs that will allow us to process future payments\r\n * with a minimum number of inputs.\r\n *\r\n * If for each payment request of value __/v/__ we create a change output of\r\n * /roughly/ the same value __/v/__, then we will end up with a distribution of\r\n * change values that matches the typical value distribution of payment\r\n * requests.\r\n *\r\n * === Principle 3: Performance Management\r\n *\r\n * Searching the UTxO set for additional entries to improve our change outputs\r\n * is /only/ useful if the UTxO set contains entries that are sufficiently\r\n * small enough. But it is precisely when the UTxO set contains many small\r\n * entries that it is less likely for a randomly-chosen UTxO entry to push the\r\n * total above the upper bound.\r\n */\r\n\r\n/**\r\n * @typedef {Value[]} AmountList - List of 'Value' object\r\n */\r\n\r\n/**\r\n * @typedef {TransactionUnspentOutput[]} UTxOList - List of UTxO\r\n */\r\n\r\n/**\r\n * @typedef {Object} UTxOSelection - Coin Selection algorithm core object\r\n * @property {UTxOList} selection - Accumulated UTxO set.\r\n * @property {UTxOList} remaining - Remaining UTxO set.\r\n * @property {UTxOList} subset - Remaining UTxO set.\r\n * @property {Value} amount - UTxO amount of each requested token\r\n */\r\n\r\n/**\r\n * @typedef {Object} ImproveRange - ImproveRange\r\n * @property {Value} ideal - Requested amount * 2\r\n * @property {Value} maximum - Requested amount * 3\r\n */\r\n\r\n/**\r\n * @typedef {Object} SelectionResult - Coin Selection algorithm return\r\n * @property {UTxOList} input - Accumulated UTxO set.\r\n * @property {OutputList} output - Requested outputs.\r\n * @property {UTxOList} remaining - Remaining UTxO set.\r\n * @property {Value} amount - UTxO amount of each requested token\r\n * @property {Value} change - Accumulated change amount.\r\n */\r\n\r\n/**\r\n * @typedef {Object} ProtocolParameters\r\n * @property {int} minUTxO\r\n * @property {int} minFeeA\r\n * @property {int} minFeeB\r\n * @property {int} maxTxSize\r\n */\r\n\r\n/**\r\n * @type {ProtocolParameters}\r\n */\r\nlet protocolParameters = null;\r\n\r\n/**\r\n * CoinSelection Module.\r\n * @module src/lib/CoinSelection\r\n */\r\nconst CoinSelection = {\r\n  /**\r\n   * Set protocol parameters required by the algorithm\r\n   * @param {string} minUTxO\r\n   * @param {string} minFeeA\r\n   * @param {string} minFeeB\r\n   * @param {string} maxTxSize\r\n   */\r\n  setProtocolParameters: (minUTxO, minFeeA, minFeeB, maxTxSize) => {\r\n    protocolParameters = {\r\n      minUTxO: minUTxO,\r\n      minFeeA: minFeeA,\r\n      minFeeB: minFeeB,\r\n      maxTxSize: maxTxSize,\r\n    };\r\n  },\r\n  /**\r\n   * Random-Improve coin selection algorithm\r\n   * @param {UTxOList} inputs - The set of inputs available for selection.\r\n   * @param {TransactionOutputs} outputs - The set of outputs requested for payment.\r\n   * @param {int} limit - A limit on the number of inputs that can be selected.\r\n   * @return {SelectionResult} - Coin Selection algorithm return\r\n   */\r\n  randomImprove: async (inputs, outputs, limit) => {\r\n    if (!protocolParameters)\r\n      throw new Error(\r\n        \"Protocol parameters not set. Use setProtocolParameters().\"\r\n      );\r\n\r\n    await Loader.load();\r\n\r\n    const _minUTxOValue =\r\n      BigInt(outputs.len()) * BigInt(protocolParameters.minUTxO);\r\n\r\n    /** @type {UTxOSelection} */\r\n    let utxoSelection = {\r\n      selection: [],\r\n      remaining: [...inputs], // Shallow copy\r\n      subset: [],\r\n      amount: Loader.Cardano.Value.new(Loader.Cardano.BigNum.from_str(\"0\")),\r\n    };\r\n\r\n    let mergedOutputsAmounts = mergeOutputsAmounts(outputs);\r\n\r\n    // Explode amount in an array of unique asset amount for comparison's sake\r\n    let splitOutputsAmounts = splitAmounts(mergedOutputsAmounts);\r\n\r\n    // Phase 1: RandomSelect\r\n    splitOutputsAmounts.forEach((output) => {\r\n      createSubSet(utxoSelection, output); // Narrow down for NatToken UTxO\r\n\r\n      try {\r\n        utxoSelection = randomSelect(\r\n          cloneUTxOSelection(utxoSelection), // Deep copy in case of fallback needed\r\n          output,\r\n          limit - utxoSelection.selection.length,\r\n          _minUTxOValue\r\n        );\r\n      } catch (e) {\r\n        if (e.message === \"INPUT_LIMIT_EXCEEDED\") {\r\n          // Limit reached : Fallback on DescOrdAlgo\r\n          utxoSelection = descSelect(\r\n            utxoSelection,\r\n            output,\r\n            limit - utxoSelection.selection.length,\r\n            _minUTxOValue\r\n          );\r\n        } else {\r\n          throw e;\r\n        }\r\n      }\r\n    });\r\n\r\n    // Phase 2: Improve\r\n    splitOutputsAmounts = sortAmountList(splitOutputsAmounts);\r\n\r\n    splitOutputsAmounts.forEach((output) => {\r\n      createSubSet(utxoSelection, output); // Narrow down for NatToken UTxO\r\n\r\n      let range = {};\r\n      range.ideal = Loader.Cardano.Value.new(\r\n        Loader.Cardano.BigNum.from_str(\"0\")\r\n      )\r\n        .checked_add(output)\r\n        .checked_add(output);\r\n      range.maximum = Loader.Cardano.Value.new(\r\n        Loader.Cardano.BigNum.from_str(\"0\")\r\n      )\r\n        .checked_add(range.ideal)\r\n        .checked_add(output);\r\n\r\n      improve(\r\n        utxoSelection,\r\n        output,\r\n        limit - utxoSelection.selection.length,\r\n        range\r\n      );\r\n    });\r\n\r\n    return {\r\n      input: utxoSelection.selection,\r\n      output: outputs,\r\n      remaining: utxoSelection.remaining,\r\n      amount: utxoSelection.amount,\r\n      change: utxoSelection.amount.checked_sub(mergedOutputsAmounts),\r\n    };\r\n  },\r\n};\r\n\r\n/**\r\n * Randomly select enough UTxO to fulfill requested outputs\r\n * @param {UTxOSelection} utxoSelection - The set of selected/available inputs.\r\n * @param {Value} outputAmount - Single compiled output qty requested for payment.\r\n * @param {int} limit - A limit on the number of inputs that can be selected.\r\n * @param {int} minUTxOValue - Network protocol 'minUTxOValue' current value.\r\n * @throws INPUT_LIMIT_EXCEEDED if the number of randomly picked inputs exceed 'limit' parameter.\r\n * @throws INPUTS_EXHAUSTED if all UTxO doesn't hold enough funds to pay for output.\r\n * @throws MIN_UTXO_ERROR if lovelace change is under 'minUTxOValue' parameter.\r\n * @return {UTxOSelection} - Successful random utxo selection.\r\n */\r\nfunction randomSelect(utxoSelection, outputAmount, limit, minUTxOValue) {\r\n  let nbFreeUTxO = utxoSelection.subset.length;\r\n  // If quantity is met, return subset into remaining list and exit\r\n  if (\r\n    isQtyFulfilled(outputAmount, utxoSelection.amount, minUTxOValue, nbFreeUTxO)\r\n  ) {\r\n    utxoSelection.remaining = [\r\n      ...utxoSelection.remaining,\r\n      ...utxoSelection.subset,\r\n    ];\r\n    utxoSelection.subset = [];\r\n    return utxoSelection;\r\n  }\r\n\r\n  if (limit <= 0) {\r\n    throw new Error(\"INPUT_LIMIT_EXCEEDED\");\r\n  }\r\n\r\n  if (nbFreeUTxO <= 0) {\r\n    if (isQtyFulfilled(outputAmount, utxoSelection.amount, 0, 0)) {\r\n      throw new Error(\"MIN_UTXO_ERROR\");\r\n    }\r\n    throw new Error(\"INPUTS_EXHAUSTED\");\r\n  }\r\n\r\n  /** @type {TransactionUnspentOutput} utxo */\r\n  let utxo = utxoSelection.subset\r\n    .splice(Math.floor(Math.random() * nbFreeUTxO), 1)\r\n    .pop();\r\n\r\n  utxoSelection.selection.push(utxo);\r\n  utxoSelection.amount = addAmounts(\r\n    utxo.output().amount(),\r\n    utxoSelection.amount\r\n  );\r\n\r\n  return randomSelect(utxoSelection, outputAmount, limit - 1, minUTxOValue);\r\n}\r\n\r\n/**\r\n * Select enough UTxO in DESC order to fulfill requested outputs\r\n * @param {UTxOSelection} utxoSelection - The set of selected/available inputs.\r\n * @param {Value} outputAmount - Single compiled output qty requested for payment.\r\n * @param {int} limit - A limit on the number of inputs that can be selected.\r\n * @param {int} minUTxOValue - Network protocol 'minUTxOValue' current value.\r\n * @throws INPUT_LIMIT_EXCEEDED if the number of randomly picked inputs exceed 'limit' parameter.\r\n * @throws INPUTS_EXHAUSTED if all UTxO doesn't hold enough funds to pay for output.\r\n * @throws MIN_UTXO_ERROR if lovelace change is under 'minUTxOValue' parameter.\r\n * @return {UTxOSelection} - Successful random utxo selection.\r\n */\r\nfunction descSelect(utxoSelection, outputAmount, limit, minUTxOValue) {\r\n  // Sort UTxO subset in DESC order for required Output unit type\r\n  utxoSelection.subset = utxoSelection.subset.sort((utxoA, utxoB) =>\r\n    utxoB.output().amount().compare(utxoA.output().amount())\r\n  );\r\n\r\n  do {\r\n    if (limit <= 0) {\r\n      throw new Error(\"INPUT_LIMIT_EXCEEDED\");\r\n    }\r\n\r\n    if (utxoSelection.subset.length <= 0) {\r\n      if (isQtyFulfilled(outputAmount, utxoSelection.amount, 0, 0)) {\r\n        throw new Error(\"MIN_UTXO_ERROR\");\r\n      }\r\n      throw new Error(\"INPUTS_EXHAUSTED\");\r\n    }\r\n\r\n    /** @type {TransactionUnspentOutput} utxo */\r\n    let utxo = utxoSelection.subset.splice(0, 1).pop();\r\n\r\n    utxoSelection.selection.push(utxo);\r\n    utxoSelection.amount = addAmounts(\r\n      utxo.output().amount(),\r\n      utxoSelection.amount\r\n    );\r\n\r\n    limit--;\r\n  } while (\r\n    !isQtyFulfilled(\r\n      outputAmount,\r\n      utxoSelection.amount,\r\n      minUTxOValue,\r\n      utxoSelection.subset.length - 1\r\n    )\r\n  );\r\n\r\n  // Quantity is met, return subset into remaining list and return selection\r\n  utxoSelection.remaining = [\r\n    ...utxoSelection.remaining,\r\n    ...utxoSelection.subset,\r\n  ];\r\n  utxoSelection.subset = [];\r\n\r\n  return utxoSelection;\r\n}\r\n\r\n/**\r\n * Try to improve selection by increasing input amount in [2x,3x] range.\r\n * @param {UTxOSelection} utxoSelection - The set of selected/available inputs.\r\n * @param {Value} outputAmount - Single compiled output qty requested for payment.\r\n * @param {int} limit - A limit on the number of inputs that can be selected.\r\n * @param {ImproveRange} range - Improvement range target values\r\n */\r\nfunction improve(utxoSelection, outputAmount, limit, range) {\r\n  let nbFreeUTxO = utxoSelection.subset.length;\r\n\r\n  if (\r\n    utxoSelection.amount.compare(range.ideal) >= 0 ||\r\n    nbFreeUTxO <= 0 ||\r\n    limit <= 0\r\n  ) {\r\n    // Return subset in remaining\r\n    utxoSelection.remaining = [\r\n      ...utxoSelection.remaining,\r\n      ...utxoSelection.subset,\r\n    ];\r\n    utxoSelection.subset = [];\r\n\r\n    return;\r\n  }\r\n\r\n  /** @type {TransactionUnspentOutput} utxo */\r\n  const utxo = utxoSelection.subset\r\n    .splice(Math.floor(Math.random() * nbFreeUTxO), 1)\r\n    .pop();\r\n\r\n  const newAmount = Loader.Cardano.Value.new(\r\n    Loader.Cardano.BigNum.from_str(\"0\")\r\n  )\r\n    .checked_add(utxo.output().amount())\r\n    .checked_add(outputAmount);\r\n\r\n  if (\r\n    abs(getAmountValue(range.ideal) - getAmountValue(newAmount)) <\r\n      abs(getAmountValue(range.ideal) - getAmountValue(outputAmount)) &&\r\n    newAmount.compare(range.maximum) <= 0\r\n  ) {\r\n    utxoSelection.selection.push(utxo);\r\n    utxoSelection.amount = addAmounts(\r\n      utxo.output().amount(),\r\n      utxoSelection.amount\r\n    );\r\n    limit--;\r\n  } else {\r\n    utxoSelection.remaining.push(utxo);\r\n  }\r\n\r\n  return improve(utxoSelection, outputAmount, limit, range);\r\n}\r\n\r\n/**\r\n * Compile all required outputs to a flat amounts list\r\n * @param {TransactionOutputs} outputs - The set of outputs requested for payment.\r\n * @return {Value} - The compiled set of amounts requested for payment.\r\n */\r\nfunction mergeOutputsAmounts(outputs) {\r\n  let compiledAmountList = Loader.Cardano.Value.new(\r\n    Loader.Cardano.BigNum.from_str(\"0\")\r\n  );\r\n\r\n  for (let i = 0; i < outputs.len(); i++) {\r\n    compiledAmountList = addAmounts(\r\n      outputs.get(i).amount(),\r\n      compiledAmountList\r\n    );\r\n  }\r\n\r\n  return compiledAmountList;\r\n}\r\n\r\n/**\r\n * Add up an Amounts List values to another Amounts List\r\n * @param {Value} amounts - Set of amounts to be added.\r\n * @param {Value} compiledAmounts - The compiled set of amounts.\r\n * @return {Value}\r\n */\r\nfunction addAmounts(amounts, compiledAmounts) {\r\n  return compiledAmounts.checked_add(amounts);\r\n}\r\n\r\n/**\r\n * Split amounts contained in a single {Value} object in separate {Value} objects\r\n * @param {Value} amounts - Set of amounts to be split.\r\n * @throws MIN_UTXO_ERROR if lovelace change is under 'minUTxOValue' parameter.\r\n * @return {AmountList}\r\n */\r\nfunction splitAmounts(amounts) {\r\n  let splitAmounts = [];\r\n\r\n  if (amounts.multiasset()) {\r\n    let mA = amounts.multiasset();\r\n\r\n    for (let i = 0; i < mA.keys().len(); i++) {\r\n      let scriptHash = mA.keys().get(i);\r\n\r\n      for (let j = 0; j < mA.get(scriptHash).keys().len(); j++) {\r\n        let _assets = Loader.Cardano.Assets.new();\r\n        let assetName = mA.get(scriptHash).keys().get(j);\r\n\r\n        _assets.insert(\r\n          Loader.Cardano.AssetName.from_bytes(assetName.to_bytes()),\r\n          Loader.Cardano.BigNum.from_bytes(\r\n            mA.get(scriptHash).get(assetName).to_bytes()\r\n          )\r\n        );\r\n\r\n        let _multiasset = Loader.Cardano.MultiAsset.new();\r\n        _multiasset.insert(\r\n          Loader.Cardano.ScriptHash.from_bytes(scriptHash.to_bytes()),\r\n          _assets\r\n        );\r\n        let _value = Loader.Cardano.Value.new(\r\n          Loader.Cardano.BigNum.from_str(\"0\")\r\n        );\r\n        _value.set_multiasset(_multiasset);\r\n\r\n        splitAmounts.push(_value);\r\n      }\r\n    }\r\n  }\r\n\r\n  // Order assets by qty DESC\r\n  splitAmounts = sortAmountList(splitAmounts, \"DESC\");\r\n\r\n  // Insure lovelace is last to account for min ada requirement\r\n  splitAmounts.push(\r\n    Loader.Cardano.Value.new(\r\n      Loader.Cardano.BigNum.from_bytes(amounts.coin().to_bytes())\r\n    )\r\n  );\r\n\r\n  return splitAmounts;\r\n}\r\n\r\n/**\r\n * Sort a mismatched AmountList ASC/DESC\r\n * @param {AmountList} amountList - Set of mismatched amounts to be sorted.\r\n * @param {string} [sortOrder=ASC] - Order\r\n * @return {AmountList} - The sorted AmountList\r\n */\r\nfunction sortAmountList(amountList, sortOrder = \"ASC\") {\r\n  return amountList.sort((a, b) => {\r\n    let sortInt = sortOrder === \"DESC\" ? BigInt(-1) : BigInt(1);\r\n    return Number((getAmountValue(a) - getAmountValue(b)) * sortInt);\r\n  });\r\n}\r\n\r\n/**\r\n * Return BigInt amount value\r\n * @param amount\r\n * @return {bigint}\r\n */\r\nfunction getAmountValue(amount) {\r\n  let val = BigInt(0);\r\n  let lovelace = BigInt(amount.coin().to_str());\r\n\r\n  if (lovelace > 0) {\r\n    val = lovelace;\r\n  } else if (amount.multiasset() && amount.multiasset().len() > 0) {\r\n    let scriptHash = amount.multiasset().keys().get(0);\r\n    let assetName = amount.multiasset().get(scriptHash).keys().get(0);\r\n    val = BigInt(amount.multiasset().get(scriptHash).get(assetName).to_str());\r\n  }\r\n\r\n  return val;\r\n}\r\n\r\n/**\r\n * Narrow down remaining UTxO set in case of native token, use full set for lovelace\r\n * @param {UTxOSelection} utxoSelection - The set of selected/available inputs.\r\n * @param {Value} output - Single compiled output qty requested for payment.\r\n */\r\nfunction createSubSet(utxoSelection, output) {\r\n  if (BigInt(output.coin().to_str()) < BigInt(1)) {\r\n    utxoSelection.remaining.forEach((utxo, index) => {\r\n      if (output.compare(utxo.output().amount()) !== undefined) {\r\n        utxoSelection.subset.push(\r\n          utxoSelection.remaining.splice(index, 1).pop()\r\n        );\r\n      }\r\n    });\r\n  } else {\r\n    utxoSelection.subset = utxoSelection.remaining.splice(\r\n      0,\r\n      utxoSelection.remaining.length\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * Is Quantity Fulfilled Condition - Handle 'minUTxOValue' protocol parameter.\r\n * @param {Value} outputAmount - Single compiled output qty requested for payment.\r\n * @param {Value} cumulatedAmount - Single compiled accumulated UTxO qty.\r\n * @param {int} minUTxOValue - Network protocol 'minUTxOValue' current value.\r\n * @param {int} nbFreeUTxO - Number of free UTxO available.\r\n * @return {boolean}\r\n */\r\nfunction isQtyFulfilled(\r\n  outputAmount,\r\n  cumulatedAmount,\r\n  minUTxOValue,\r\n  nbFreeUTxO\r\n) {\r\n  let amount = outputAmount;\r\n\r\n  if (minUTxOValue && BigInt(outputAmount.coin().to_str()) > 0) {\r\n    let minAmount = Loader.Cardano.Value.new(\r\n      Loader.Cardano.min_ada_required(\r\n        cumulatedAmount,\r\n        Loader.Cardano.BigNum.from_str(minUTxOValue.toString())\r\n      )\r\n    );\r\n\r\n    // Lovelace min amount to cover assets and number of output need to be met\r\n    if (cumulatedAmount.compare(minAmount) < 0) return false;\r\n\r\n    // If requested Lovelace lower than minAmount, plan for change\r\n    if (outputAmount.compare(minAmount) < 0) {\r\n      amount = minAmount.checked_add(\r\n        Loader.Cardano.Value.new(\r\n          Loader.Cardano.BigNum.from_str(protocolParameters.minUTxO)\r\n        )\r\n      );\r\n    }\r\n\r\n    // Try covering the max fees\r\n    if (nbFreeUTxO > 0) {\r\n      let maxFee =\r\n        BigInt(protocolParameters.minFeeA) *\r\n          BigInt(protocolParameters.maxTxSize) +\r\n        BigInt(protocolParameters.minFeeB);\r\n\r\n      maxFee = Loader.Cardano.Value.new(\r\n        Loader.Cardano.BigNum.from_str(maxFee.toString())\r\n      );\r\n\r\n      amount = amount.checked_add(maxFee);\r\n    }\r\n  }\r\n\r\n  return cumulatedAmount.compare(amount) >= 0;\r\n}\r\n\r\n/**\r\n * Return a deep copy of UTxOSelection\r\n * @param {UTxOSelection} utxoSelection\r\n * @return {UTxOSelection} Clone - Deep copy\r\n */\r\nfunction cloneUTxOSelection(utxoSelection) {\r\n  return {\r\n    selection: cloneUTxOList(utxoSelection.selection),\r\n    remaining: cloneUTxOList(utxoSelection.remaining),\r\n    subset: cloneUTxOList(utxoSelection.subset),\r\n    amount: cloneValue(utxoSelection.amount),\r\n  };\r\n}\r\n\r\n/**\r\n * Return a deep copy of an UTxO List\r\n * @param {UTxOList} utxoList\r\n * @return {UTxOList} Cone - Deep copy\r\n */\r\nconst cloneUTxOList = (utxoList) =>\r\n  utxoList.map((utxo) =>\r\n    Loader.Cardano.TransactionUnspentOutput.from_bytes(utxo.to_bytes())\r\n  );\r\n\r\n/**\r\n * Return a deep copy of a Value object\r\n * @param {Value} value\r\n * @return {Value} Cone - Deep copy\r\n */\r\nconst cloneValue = (value) => Loader.Cardano.Value.from_bytes(value.to_bytes());\r\n\r\n// Helper\r\nfunction abs(big) {\r\n  return big < 0 ? big * BigInt(-1) : big;\r\n}\r\n\r\nexport default CoinSelection;\r\n","\r\n<div style=\"background-color: rgb(59, 65, 72); height: 100%;\">\r\n       \r\n      <div  class=\"personal header_div\">\r\n        <!-- <img style=\"width: 250px\" src=\"../../../assets/logo.png\"> -->\r\n        <i class=\"fas fa-crown personal_icon header_icon\"></i>\r\n        <label class=\"personal_title header_title\">Token Holder Reward</label>\r\n      </div>\r\n      <div class=\"sub-end-part\">\r\n      \r\n          <!-- <div style=\" border-bottom: 2px solid grey;margin-bottom: 40px;\"></div> -->\r\n          <div class=\"row main\" >\r\n              <div class=\"tab\">\r\n              \r\n                  <h4 class=\"tab-header\">\r\n                  Your Transaction Fee Reward Amount\r\n                  </h4>\r\n                  <div class=\"timebox\">\r\n                        <!-- <i class=\"fab fa-bandcamp\" style=\"font-size: 30px;color: white\"></i> -->\r\n                        <button class=\"ether\">\r\n                            <!-- <i class=\"fab fa-ethereum\" style=\"font-size: 30px\"></i> -->\r\n                            <img src=\"../assets/logo-black.png\" alt=\"logo\" style=\"height: 30px; width: 30px;\">\r\n                        </button>\r\n                        \r\n                        <span class=\"digit\">{{ (rewardToken ? rewardToken : 0) | number:'1.0-2' }} Grise</span>\r\n                  </div>\r\n              </div>\r\n              <div style=\"width:2%\"></div>\r\n              <div class=\"tab\">\r\n                  <h4 class=\"tab-header\">\r\n                    Total Days left to claim Reward\r\n                    <span class=\"tooltip-question\" mat-raised-button #tooltip=\"matTooltip\"\r\n                      matTooltip=\"Token holder reward can be claimed at every 7th day of week.\"\r\n                      matTooltipPosition=\"below\"><i class=\"fas fa-question-circle\"></i></span>\r\n                  </h4>\r\n                  <div class=\"timebox\">\r\n                      <button class=\"ether\">\r\n                          <i class=\"fas fa-calendar-alt\"  style=\"font-size: 30px;\" aria-hidden=\"true\"></i>\r\n                      </button>\r\n                      \r\n                      <span class=\"digit\">\r\n                          <!-- <countdown [config]=\"{leftTime: 3444440}\"></countdown> -->\r\n                          \r\n                          <span style=\"color: white\" id=\"tokentimer1\" *ngIf=\"daysLeft == 0\">Claim Reward</span>                        \r\n                          <span style=\"color: white\" id=\"tokentimer1\" *ngIf=\"daysLeft != 0\">{{ daysLeft }} Days Left</span>                       \r\n                      </span>\r\n                  </div>\r\n                  \r\n              </div>\r\n          </div>\r\n        \r\n          \r\n          <br>\r\n          <br>\r\n          <button type=\"button\" [disabled]=\"daysLeft == 0 && rewardToken != 0 ? null : 'disabled'\" class=\"btn btn-primary staking_button\" (click)=\"claimReward()\">Claim Reward</button>\r\n          <footer>\r\n            <div class=\"grise\">\r\n              \r\n              <!-- <img style=\"width: 250px\" src=\"../../../assets/logo.png\"> -->\r\n            </div>\r\n          </footer>\r\n       \r\n\r\n\r\n      </div>\r\n</div>\r\n      \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { GriseTokenContractService } from 'src/app/services/grise-token-contract.service';\r\n\r\n@Component({\r\n  selector: 'app-reward',\r\n  templateUrl: './reward.component.html',\r\n  styleUrls: ['./reward.component.scss']\r\n})\r\nexport class RewardComponent implements OnInit {\r\n\r\n  rewardToken: any;\r\n  daysLeft: any;\r\n\r\n  constructor(private griseTokenContractService: GriseTokenContractService) { }\r\n\r\n  ngOnInit() {\r\n    this.griseTokenContractService.isClaimTokenHolderTransactionRewardDataUpdated.subscribe(() => {\r\n      this.griseTokenContractService.getTokenHolderTransactionReward().then(value => this.rewardToken = value);\r\n    });\r\n    this.griseTokenContractService.getTimeToClaimWeeklyReward().then(value => this.daysLeft = value);\r\n  }\r\n\r\n  claimReward() {\r\n    if (this.daysLeft != 0 && this.rewardToken != 0) {\r\n      return;\r\n    }\r\n\r\n    this.griseTokenContractService.claimTokenHolderTransactionReward();\r\n  }\r\n}\r\n","import { HttpClientModule, HTTP_INTERCEPTORS } from \"@angular/common/http\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { MatButtonModule } from \"@angular/material/button\";\r\nimport { MatDialogModule } from \"@angular/material/dialog\";\r\nimport { MatMenuModule } from \"@angular/material/menu\";\r\nimport { MatProgressSpinnerModule } from \"@angular/material/progress-spinner\";\r\nimport { MatSelectModule } from \"@angular/material/select\";\r\nimport { BrowserModule } from \"@angular/platform-browser\";\r\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\r\nimport { WavesModule } from \"angular-bootstrap-md\";\r\nimport { ChartsModule } from \"ng2-charts\";\r\nimport { Ng2PageScrollModule } from \"ng2-page-scroll\";\r\nimport { CountdownModule } from \"ngx-countdown\";\r\nimport { ToastrModule } from \"ngx-toastr\";\r\nimport { AppRoutingModule, routingmod } from \"./app-routing.module\";\r\nimport { AppComponent } from \"./app.component\";\r\nimport { AccountNoPipe } from \"./pipes/account-no.pipe\";\r\nimport { ClipboardModule } from \"ngx-clipboard\";\r\nimport { LandingPageComponent } from \"./components/landing-page/landing-page.component\";\r\nimport { SellFormComponent } from \"./components/sell-form/sell-form.component\";\r\nimport { TooltipModule } from \"ngx-bootstrap/tooltip\";\r\nimport { MergepopupComponent } from \"./components/mergepopup/mergepopup.component\";\r\nimport { TabsModule } from \"ngx-bootstrap/tabs\";\r\nimport { NFTsAPIServices } from \"./services/nft.service\";\r\nimport { NgMultiSelectDropDownModule } from \"ng-multiselect-dropdown\";\r\nimport { RoadmapComponent } from './components/roadmap/roadmap.component';\r\nimport { InfoComponent } from './components/info/info.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { ComingSoonComponent } from './components/coming-soon/coming-soon.component';\r\nimport { NftCollectionComponent } from './components/nft-collection/nft-collection.component';\r\nimport { MyNftsComponent } from './components/my-nfts/my-nfts.component';\r\nimport { MoonverseComponent } from './components/moonverse/moonverse.component';\r\nimport { OwlybirdComponent } from './components/owly-bird/owly-bird.component';\r\nimport { MataMaskButtonComponent } from './shared/mata-mask-button/mata-mask-button.component';\r\nimport { TrippyOwlDetailComponent } from './components/trippy-owl-detail/trippy-owl-detail.component';\r\nimport {NgxPaginationModule} from 'ngx-pagination';\r\nimport { SentimentAnalysisComponent } from './components/sentiment-analysis/sentiment-analysis.component';\r\nimport { CoinDetailsComponent } from './components/coin-details/coin-details.component';\r\nimport { CoinSummaryComponent } from './components/coin-details/coin-summary/coin-summary.component';\r\nimport { HighchartsChartModule } from \"highcharts-angular\";\r\nimport { CoinMarketComponent } from './components/coin-details/coin-market/coin-market.component';\r\nimport { CoinPredictionComponent } from './components/coin-details/coin-prediction/coin-prediction.component';\r\nimport { CoinTweetsComponent } from './components/coin-details/coin-tweets/coin-tweets.component';\r\nimport { CoinTechnicalAnalysisComponent } from './components/coin-details/coin-technical-analysis/coin-technical-analysis.component';\r\nimport { CoinCorelationComponent } from './components/coin-details/coin-corelation/coin-corelation.component';\r\nimport { MyLoaderComponent } from './components/my-loader/my-loader.component';\r\nimport { LoaderService } from './services/loader.service';\r\nimport { LoaderInterceptor } from './interceptors/loader-interceptor.service';\r\nimport { GoogleTrendsComponent } from './components/coin-details/google-trends/google-trends.component';\r\nimport { AdminpanelComponent } from './components/adminpanel/adminpanel.component';\r\nimport { ConnectWalletDialogComponent } from './components/connect-wallet-dialog/connect-wallet-dialog.component';\r\nimport {MatListModule} from \"@angular/material/list\";\r\n//import { LazyLoadImageModule } from 'ng-lazyload-image'; \r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    AccountNoPipe,\r\n    routingmod,\r\n    LandingPageComponent,\r\n    SellFormComponent,\r\n    MergepopupComponent,\r\n    RoadmapComponent,\r\n    InfoComponent,\r\n    LoginComponent,\r\n    ComingSoonComponent,\r\n    NftCollectionComponent,\r\n    MyNftsComponent,\r\n    MoonverseComponent,\r\n    OwlybirdComponent,\r\n    MataMaskButtonComponent,\r\n    TrippyOwlDetailComponent,\r\n    SentimentAnalysisComponent,\r\n    CoinDetailsComponent,\r\n    CoinSummaryComponent,\r\n    CoinMarketComponent,\r\n    CoinPredictionComponent,\r\n    CoinTweetsComponent,\r\n    CoinTechnicalAnalysisComponent,\r\n    CoinCorelationComponent,\r\n    MyLoaderComponent,\r\n    GoogleTrendsComponent,\r\n    AdminpanelComponent,\r\n    ConnectWalletDialogComponent,\r\n  ],\r\n  imports: [\r\n    FormsModule,\r\n    MatListModule,\r\n    HttpClientModule,\r\n    MatDialogModule,\r\n    CountdownModule,\r\n    MatMenuModule,\r\n    WavesModule,\r\n    ChartsModule,\r\n    MatButtonModule,\r\n    Ng2PageScrollModule,\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MatSelectModule,\r\n    ToastrModule.forRoot({ positionClass: \"toast-top-center\" }),\r\n    MatProgressSpinnerModule,\r\n    ClipboardModule,\r\n    TooltipModule.forRoot(),\r\n    TabsModule.forRoot(),\r\n    NgMultiSelectDropDownModule.forRoot(),\r\n    NgxPaginationModule,\r\n    HighchartsChartModule,\r\n    CountdownModule,\r\n    //LazyLoadImageModule\r\n  ],\r\n  providers: [\r\n    NFTsAPIServices, LoaderService,\r\n    { provide: HTTP_INTERCEPTORS, useClass: LoaderInterceptor, multi: true }\r\n  ],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { environment as env } from '../../environments/environment';\r\n// import NamiWalletApi, { Cardano } from 'nami-wallet-api-243';\r\nimport NamiWalletApi, { Cardano } from '../../packages/nami-js';\r\n\r\nclass NamiMintLoader {\r\n    blockFrostApiKey = env.blockFrostApiKey;\r\n    blockFrostApiKeyMainnet = env.blockFrostApiKeyMainnet;\r\n    production = env.production;\r\n\r\n    nami: any;\r\n    cardano: any;\r\n    connected: boolean = false;\r\n    policyExpiration: any = new Date();\r\n    newPolicy: any;\r\n\r\n    public async load() {\r\n        if (this.nami) return;\r\n\r\n        this.cardano = (window as any).cardano;\r\n\r\n        const S = await Cardano();\r\n        this.nami = new NamiWalletApi(\r\n            S,\r\n            this.cardano,\r\n            {\r\n                0: this.blockFrostApiKey, // \"testnetLYuDgDFyN0OD1s9hXnNMVzyRlPN7imcG\", // testnet\r\n                1: this.blockFrostApiKeyMainnet // \"yourBlockfrostMainnetApiKey\" // mainnet\r\n            }\r\n        )\r\n\r\n        // if (await this.nami.isInstalled()) {\r\n        //     await this.nami.isEnabled().then(result => { this.connected = result })\r\n\r\n        // }\r\n    }\r\n\r\n    public async Cardano() {\r\n        await this.load();\r\n        return this.nami;\r\n    }\r\n\r\n\r\n\r\n\r\n    connect = async () => {\r\n        // Connects nami wallet to current website \r\n        await this.nami.enable()\r\n            .then(result => result) // this.connected = result\r\n            .catch(e => {\r\n                console.log(e)\r\n                return false;\r\n            })\r\n    }\r\n\r\n    getAddress = async () => {\r\n        // retrieve address of nami wallet\r\n        if (!this.connected) {\r\n            await this.connect()\r\n        }\r\n        await this.nami.getAddress().then((newAddress) => {\r\n            console.log(newAddress);\r\n            return newAddress;\r\n        })\r\n    }\r\n\r\n\r\n    // public async getBalance = async () => {\r\n    //     if (!connected) {\r\n    //         await connect()\r\n    //     }\r\n    //     await nami.getBalance().then(result => { console.log(result); setNfts(result.assets); setBalance(result.lovelace) })\r\n    // }\r\n\r\n\r\n    // buildTransaction = async (recipients) => {\r\n    //     return await new Promise(async (resolve, reject) => {\r\n    //         if (!this.connected) {\r\n    //             await this.connect()\r\n    //         }\r\n    //         try {\r\n    //             // const recipients = [{ \"address\": recipientAddress, \"amount\": amount }]\r\n    //             let utxos = await this.nami.getUtxosHex();\r\n    //             const myAddress = await this.nami.getAddress();\r\n\r\n    //             let netId = await this.nami.getNetworkId();\r\n    //             const t = await this.nami.transaction({\r\n    //                 PaymentAddress: myAddress,\r\n    //                 recipients,\r\n    //                 metadata: null,\r\n    //                 utxosRaw: utxos,\r\n    //                 networkId: netId.id,\r\n    //                 ttl: 3600,\r\n    //                 multiSig: null\r\n    //             })\r\n    //             console.log(t)\r\n    //             // setTransaction(t)\r\n    //             resolve(t);\r\n\r\n    //         } catch (e) {\r\n    //             // console.log(e);\r\n    //             reject(e);\r\n    //         }\r\n    //     });\r\n    // }\r\n\r\n\r\n\r\n    buildFullTransaction = async (recipients: any, metadata: any = null) => {\r\n        console.log(\"======================= Tx :01 ==========================\")\r\n        return await new Promise(async (resolve, reject) => {\r\n            if (!this.connected) {\r\n                await this.connect()\r\n            }\r\n            console.log(\"======================= Tx :02 ==========================\")\r\n            try {\r\n                let utxos = await this.nami.getUtxosHex();\r\n\r\n                const myAddress = await this.nami.getAddress();\r\n                console.log(myAddress)\r\n                console.log(\"======================= Tx :03 ==========================\")\r\n                let netId = await this.nami.getNetworkId();\r\n                console.log(\"======================= Tx :04 ==========================\", netId);\r\n                const t = await this.nami.transaction({\r\n                    PaymentAddress: myAddress,\r\n                    recipients: recipients,\r\n                    metadata,\r\n                    utxosRaw: utxos,\r\n                    networkId: netId.id,\r\n                    ttl: 3600,\r\n                    multiSig: null\r\n                })\r\n                console.log(\"======================= Tx :05 ==========================\", t)\r\n                const signature = await this.nami.signTx(t)\r\n                console.log(signature, netId.id)\r\n                console.log(\"======================= Tx :06 ==========================\")\r\n                const txHash = await this.nami.submitTx({\r\n                    transactionRaw: t,\r\n                    witnesses: [signature],\r\n\r\n                    networkId: netId.id\r\n                })\r\n                console.log(txHash)\r\n                console.log(\"======================= Tx :07 ==========================\")\r\n                resolve(txHash);\r\n                // return txHash;\r\n                // setComplextxHash(txHash)\r\n            } catch (e) {\r\n                console.log(\"======================= Tx :08 ==========================\")\r\n                // console.log(e);\r\n                reject(e);\r\n            }\r\n            console.log(\"======================= Tx :09 ==========================\")\r\n        });\r\n    }\r\n\r\n    buildFullTransactionBatchMinting = async (recipients: any, metadata: any = null) => {\r\n        console.log(\"======================= Tx :01 ==========================\")\r\n        return await new Promise(async (resolve, reject) => {\r\n            if (!this.connected) {\r\n                await this.connect()\r\n            }\r\n            console.log(\"======================= Tx :02 ==========================\")\r\n            try {\r\n                let utxos = await this.nami.getUtxosHex();\r\n\r\n                const myAddress = await this.nami.getAddress();\r\n                console.log(myAddress)\r\n                console.log(\"======================= Tx :03 ==========================\")\r\n                let netId = await this.nami.getNetworkId();\r\n                console.log(\"======================= Tx :04 ==========================\", netId);\r\n                const t = await this.nami.transaction({\r\n                    PaymentAddress: myAddress, // \"addr_test1qqsmq4kwxtum0nnqp6mndmgdfn9c50l5la78dh9prs60znzsqg5nj5smnk073fc6jy4wvcrjzjjwlx67zy99gtrkxlnsxl4a2y\",\r\n                    recipients: recipients,\r\n                    metadata,\r\n                    utxosRaw: utxos,\r\n                    networkId: netId.id,\r\n                    ttl: 3600,\r\n                    multiSig: null\r\n                })\r\n                console.log(\"======================= Tx :05 ==========================\", t)\r\n                const signature = await this.nami.signTx(t)\r\n                console.log(signature, netId.id)\r\n                console.log(\"======================= Tx :06 ==========================\")\r\n                const txHash = await this.nami.submitTx({\r\n                    transactionRaw: t,\r\n                    witnesses: [signature],\r\n\r\n                    networkId: netId.id\r\n                })\r\n                console.log(txHash)\r\n                console.log(\"======================= Tx :07 ==========================\")\r\n                resolve(txHash);\r\n                // return txHash;\r\n                // setComplextxHash(txHash)\r\n            } catch (e) {\r\n                console.log(\"======================= Tx :08 ==========================\")\r\n                // console.log(e);\r\n                reject(e);\r\n            }\r\n            console.log(\"======================= Tx :09 ==========================\")\r\n        });\r\n    }\r\n\r\n    tokenTransfer = async (recipients: any, metadata: any = null) => {\r\n        return await new Promise(async (resolve, reject) => {\r\n            if (!this.connected) {\r\n                await this.connect()\r\n            }\r\n            try {\r\n                let utxos = await this.nami.getUtxosHex();\r\n                console.log(\"utxos ;; \", utxos);\r\n                // alert(\"hi\")\r\n                const myAddress = await this.nami.getAddress();\r\n                console.log(myAddress)\r\n                let netId = await this.nami.getNetworkId();\r\n\r\n                const t = await this.nami.transaction({\r\n                    PaymentAddress: myAddress,\r\n                    recipients: recipients,\r\n                    metadata,\r\n                    utxosRaw: utxos,\r\n                    networkId: netId.id,\r\n                    ttl: 3600,\r\n                    multiSig: null\r\n                })\r\n\r\n                const signature = await this.nami.signTx(t)\r\n                console.log(t, signature, netId.id)\r\n                const txHash = await this.nami.submitTx({\r\n                    transactionRaw: t,\r\n                    witnesses: [signature],\r\n\r\n                    networkId: netId.id\r\n                })\r\n                console.log(txHash)\r\n                resolve(txHash);\r\n                // return txHash;\r\n                // setComplextxHash(txHash)\r\n            } catch (e) {\r\n                // console.log(e);\r\n                reject(e);\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n\r\n    // public async signTransaction = async () => {\r\n    //     if (!connected) {\r\n    //         await connect()\r\n    //     }\r\n\r\n    //     const witnesses = await nami.signTx(transaction)\r\n    //     setWitnesses(witnesses)\r\n    // }\r\n\r\n    // public async submitTransaction = async () => {\r\n    //     let netId = await nami.getNetworkId();\r\n    //     const txHash = await nami.submitTx({\r\n    //         transactionRaw: transaction,\r\n    //         witnesses: [witnesses],\r\n\r\n    //         networkId: netId.id\r\n    //     })\r\n    //     setTxHash(txHash)\r\n\r\n    // }\r\n\r\n    createPolicy = async () => {\r\n        const defaultDate = new Date();\r\n        defaultDate.setTime(defaultDate.getTime() + (1 * 60 * 90 * 1000))\r\n        this.policyExpiration = defaultDate;\r\n\r\n        console.log(this.policyExpiration)\r\n        try {\r\n            await this.nami.enable()\r\n\r\n\r\n            const myAddress = await this.nami.getHexAddress();\r\n\r\n            let networkId = await this.nami.getNetworkId()\r\n            const newPolicy = await this.nami.createLockingPolicyScript(myAddress, networkId.id, this.policyExpiration)\r\n            this.newPolicy = newPolicy;\r\n            return newPolicy;\r\n\r\n            // setPolicy(newPolicy)\r\n            // setComplexTransaction(async (prevState) => {\r\n            //     const state = prevState; state.recipients[0].mintedAssets[0].policyId = newPolicy.id;\r\n            //     state.recipients[0].mintedAssets[0].policyScript = newPolicy.script;\r\n            //     state.metadata = {\r\n            //         \"721\": {\r\n            //             [newPolicy.script]:\r\n            //                 { [state.recipients[0].mintedAssets[0].assetName]: { name: \"MyNFT\", description: \"This is a test NFT\", image: \"ipfs://QmUb8fW7qm1zCLhiKLcFH9yTCZ3hpsuKdkTgKmC8iFhxV8\", } }\r\n            //         }\r\n            //     };\r\n            //     return { ...state }\r\n            // })\r\n\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default new NamiMintLoader();\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-roadmap',\r\n  templateUrl: './roadmap.component.html',\r\n  styleUrls: ['./roadmap.component.scss']\r\n})\r\nexport class RoadmapComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid bg-color\">\r\n  <div class=\"row content\">\r\n    <!-- Road Map section -->\r\n    <div class=\"col-md-12\">\r\n      <div class=\"infoBox_wrapper infoBox-wrapper--first\">\r\n        <h1 class=\"pb-5 headings_info\">Grise Road Map</h1>\r\n        <div class=\"d-flex flex-wrap justify-content-center\">\r\n          <!-- old Road Map -->\r\n          <!-- <div class=\"timeline-panel\">\r\n            <div class=\"timeline-heading\">\r\n              <h4 class=\"timeline-title\">\r\n                <div class=\"mb-1 timeline_dates\">Nov2020-Jan2021</div>\r\n                <ul class=\"timeline_content_font\">\r\n                  <li>Data scraping</li>\r\n                  <li>Platform Development</li>\r\n                </ul>\r\n              </h4>\r\n            </div>\r\n          </div>\r\n          <div class=\"timeline-panel\">\r\n            <div class=\"timeline-heading\">\r\n              <h4 class=\"timeline-title\">\r\n                <div class=\"mb-1 timeline_dates\">Jan2021-Feb2021</div>\r\n\r\n                <ul class=\"timeline_content_font\">\r\n                  <li>Grise Contract Development</li>\r\n                  <li>Testing</li>\r\n                  <li>Platform Improvement</li>\r\n                </ul>\r\n              </h4>\r\n            </div>\r\n          </div>\r\n          <div class=\"timeline-panel\">\r\n            <div class=\"timeline-heading\">\r\n              <h4 class=\"timeline-title\">\r\n                <div class=\"mb-1 timeline_dates\">Mar2021-May2021</div>\r\n\r\n                <ul class=\"timeline_content_font\">\r\n                  <li>Improving Algorithm for accuracy for our AI platform</li>\r\n                  <li>Grise contract launch on BSC</li>\r\n                  <li>Contract Audit</li>\r\n                </ul>\r\n              </h4>\r\n            </div>\r\n          </div>\r\n          <div class=\"timeline-panel\">\r\n            <div class=\"timeline-heading\">\r\n              <h4 class=\"timeline-title\">\r\n                <div class=\"mb-1 timeline_dates\">June2021-Aug2021</div>\r\n\r\n                <ul class=\"timeline_content_font\">\r\n                  <li>Money Flow Indicator Completion</li>\r\n                  <li>Price Prediction Completion</li>\r\n                  <li>Technical Indicator Completion</li>\r\n                  <li>Trending AI Index Completion</li>\r\n                  <li>Google Trend Feature Completion</li>\r\n                  <li>New Feed Completion</li>\r\n                </ul>\r\n              </h4>\r\n            </div>\r\n          </div>\r\n          <div class=\"timeline-panel\">\r\n            <div class=\"timeline-heading\">\r\n              <h4 class=\"timeline-title\">\r\n                <div class=\"mb-1 timeline_dates\">20 October</div>\r\n\r\n                <ul class=\"timeline_content_font\">\r\n                  <li>Initial AI Index Release</li>\r\n                </ul>\r\n              </h4>\r\n            </div>\r\n          </div>\r\n          <div class=\"timeline-panel\">\r\n            <div class=\"timeline-heading\">\r\n              <h4 class=\"timeline-title\">\r\n                <div class=\"mb-1 timeline_dates\">5 November</div>\r\n\r\n                <ul class=\"timeline_content_font\">\r\n                  <li>NFT Release on Cardano</li>\r\n                </ul>\r\n              </h4>\r\n            </div>\r\n          </div>\r\n          <div class=\"timeline-panel\">\r\n            <div class=\"timeline-heading\">\r\n              <h4 class=\"timeline-title\">\r\n                <div class=\"mb-1 timeline_dates\">Oct2021-Nov2021</div>\r\n\r\n                <ul class=\"timeline_content_font\">\r\n                  <li>Price Prediction Platform Launch</li>\r\n                  <li>Cardano NFT Launch</li>\r\n                  <li>Caradano Cross Chain Bridging</li>\r\n                </ul>\r\n              </h4>\r\n            </div>\r\n          </div>\r\n          <div class=\"timeline-panel\">\r\n            <div class=\"timeline-heading\">\r\n              <h4 class=\"timeline-title\">\r\n                <div class=\"mb-1 timeline_dates\">1 December 2021</div>\r\n\r\n                <ul class=\"timeline_content_font\">\r\n                  <li>First AI Image Merger Dream nft Platform Release</li>\r\n                </ul>\r\n              </h4>\r\n            </div>\r\n          </div>\r\n          <div class=\"timeline-panel\">\r\n            <div class=\"timeline-heading\">\r\n              <h4 class=\"timeline-title\">\r\n                <div class=\"mb-1 timeline_dates\">Dec2021-Jan2022</div>\r\n\r\n                <ul class=\"timeline_content_font\">\r\n                  <li>Different Indicators Launch</li>\r\n                  <li>NFT Game development</li>\r\n                </ul>\r\n              </h4>\r\n            </div>\r\n          </div>\r\n          <div class=\"timeline-panel\">\r\n            <div class=\"timeline-heading\">\r\n              <h4 class=\"timeline-title\">\r\n                <div class=\"mb-1 timeline_dates\">Jan2022-March2022</div>\r\n\r\n                <ul class=\"timeline_content_font\">\r\n                  <li>Mobile App Development and Launch</li>\r\n                </ul>\r\n              </h4>\r\n            </div>\r\n          </div>\r\n          <div class=\"timeline-panel\">\r\n            <div class=\"timeline-heading\">\r\n              <h4 class=\"timeline-title\">\r\n                <div class=\"mb-1 timeline_dates\">Apr2022-Aug2022</div>\r\n\r\n                <ul class=\"timeline_content_font\">\r\n                  <li>Stripe payment integration</li>\r\n                  <li>NFT Game Launch</li>\r\n                </ul>\r\n              </h4>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"timeline-panel\">\r\n            <div class=\"timeline-heading\">\r\n              <h4 class=\"timeline-title\">\r\n                <div class=\"mb-1 timeline_dates\">Apr2022-Aug2022</div>\r\n\r\n                <ul class=\"timeline_content_font\">\r\n                  <li>Stripe payment integration</li>\r\n                  <li>NFT Game Launch</li>\r\n                </ul>\r\n              </h4>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"timeline-panel\">\r\n            <div class=\"timeline-heading\">\r\n              <h4 class=\"timeline-title\">\r\n                <div class=\"mb-1 timeline_dates\">Apr2022-Aug2022</div>\r\n\r\n                <ul class=\"timeline_content_font\">\r\n                  <li>Stripe payment integration</li>\r\n                  <li>NFT Game Launch</li>\r\n                </ul>\r\n              </h4>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"timeline-panel\">\r\n            <div class=\"timeline-heading\">\r\n              <h4 class=\"timeline-title\">\r\n                <div class=\"mb-1 timeline_dates\">Apr2022-Aug2022</div>\r\n\r\n                <ul class=\"timeline_content_font\">\r\n                  <li>Stripe payment integration</li>\r\n                  <li>NFT Game Launch</li>\r\n                </ul>\r\n              </h4>\r\n            </div>\r\n          </div> -->\r\n\r\n          <div class=\"timeline-panel\">\r\n            <div class=\"timeline-heading\">\r\n              <h4 class=\"timeline-title\">\r\n                <div class=\"mb-1 timeline_dates\">Released</div>\r\n\r\n                <ul class=\"timeline_content_font\">\r\n                  <li>\r\n                    Grise setup of staking pools for bsc contract and launch\r\n                  </li>\r\n                </ul>\r\n              </h4>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"timeline-panel\">\r\n            <div class=\"timeline-heading\">\r\n              <h4 class=\"timeline-title\">\r\n                <div class=\"mb-1 timeline_dates\">Released</div>\r\n\r\n                <ul class=\"timeline_content_font\">\r\n                  <li>\r\n                    Research and development of AI platform that became\r\n                    available for stakers\r\n                  </li>\r\n                </ul>\r\n              </h4>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"timeline-panel\">\r\n            <div class=\"timeline-heading\">\r\n              <h4 class=\"timeline-title\">\r\n                <div class=\"mb-1 timeline_dates\">November</div>\r\n\r\n                <ul class=\"timeline_content_font\">\r\n                  <li>Launch of Grise nft marketplace and moon metaverse</li>\r\n                </ul>\r\n              </h4>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"timeline-panel\">\r\n            <div class=\"timeline-heading\">\r\n              <h4 class=\"timeline-title\">\r\n                <div class=\"mb-1 timeline_dates\">\r\n                  December- further announcements about the AI Platform\r\n                </div>\r\n\r\n                <ul class=\"timeline_content_font\">\r\n                  <li>\r\n                    Launch of Moon dashboard on our platform for land holders,\r\n                    Grise token launch on Cardano.\r\n                  </li>\r\n                </ul>\r\n              </h4>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"timeline-panel\">\r\n            <div class=\"timeline-heading\">\r\n              <h4 class=\"timeline-title\">\r\n                <div class=\"mb-1 timeline_dates\">\r\n                  Release of Automated AI trading bot for stakers and NFT\r\n                  holders. January\r\n                </div>\r\n\r\n                <ul class=\"timeline_content_font\">\r\n                  <li>\r\n                    Release of different characters on the moon land and\r\n                    different merging mechanics to make your moon land stronger.\r\n                  </li>\r\n                </ul>\r\n              </h4>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <!-- <div style=\"display: inline-block; overflow-y: auto\">\r\n          <ul class=\"timeline timeline-horizontal\">\r\n            <li class=\"timeline-item\">\r\n              <div class=\"timeline-badge primary\"><i class=\"\"></i></div>\r\n              <div class=\"timeline-panel\">\r\n                <div class=\"timeline-heading\">\r\n                  <h4 class=\"timeline-title\">\r\n                    <div class=\"mb-1 timeline_dates\">Nov2020-Jan2021</div>\r\n                    <ul class=\"timeline_content_font\">\r\n                      <li>Data scraping</li>\r\n                      <li>Platform Development</li>\r\n                    </ul>\r\n                  </h4>\r\n                </div>\r\n              </div>\r\n            </li>\r\n            <li class=\"timeline-item\">\r\n              <div class=\"timeline-badge success\"><i class=\"\"></i></div>\r\n              <div class=\"timeline-panel\">\r\n                <div class=\"timeline-heading\">\r\n                  <h4 class=\"timeline-title\">\r\n                    <div class=\"mb-1 timeline_dates\">Jan2021-Feb2021</div>\r\n\r\n                    <ul class=\"timeline_content_font\">\r\n                      <li>Grise Contract Development</li>\r\n                      <li>Testing</li>\r\n                      <li>Platform Improvement</li>\r\n                    </ul>\r\n                  </h4>\r\n                </div>\r\n              </div>\r\n            </li>\r\n\r\n            <li class=\"timeline-item\">\r\n              <div class=\"timeline-badge\"><i class=\"\"></i></div>\r\n              <div class=\"timeline-panel\">\r\n                <div class=\"timeline-heading\">\r\n                  <h4 class=\"timeline-title\">\r\n                    <div class=\"mb-1 timeline_dates\">Mar2021-May2021</div>\r\n\r\n                    <ul class=\"timeline_content_font\">\r\n                      <li>\r\n                        Improving Algorithm for accuracy for our AI platform\r\n                      </li>\r\n                      <li>Grise contract launch on BSC</li>\r\n                      <li>Contract Audit</li>\r\n                    </ul>\r\n                  </h4>\r\n                </div>\r\n              </div>\r\n            </li>\r\n            <li class=\"timeline-item\">\r\n              <div class=\"timeline-badge\"><i class=\"\"></i></div>\r\n              <div class=\"timeline-panel\">\r\n                <div class=\"timeline-heading\">\r\n                  <h4 class=\"timeline-title\">\r\n                    <div class=\"mb-1 timeline_dates\">June2021-Aug2021</div>\r\n\r\n                    <ul class=\"timeline_content_font\">\r\n                      <li>Money Flow Indicator Completion</li>\r\n                      <li>Price Prediction Completion</li>\r\n                      <li>Technical Indicator Completion</li>\r\n                      <li>Trending AI Index Completion</li>\r\n                      <li>Google Trend Feature Completion</li>\r\n                      <li>New Feed Completion</li>\r\n                    </ul>\r\n                  </h4>\r\n                </div>\r\n              </div>\r\n            </li>\r\n            <li class=\"timeline-item\">\r\n              <div class=\"timeline-badge\"><i class=\"\"></i></div>\r\n              <div class=\"timeline-panel\">\r\n                <div class=\"timeline-heading\">\r\n                  <h4 class=\"timeline-title\">\r\n                    <div class=\"mb-1 timeline_dates\">20 October</div>\r\n\r\n                    <ul class=\"timeline_content_font\">\r\n                      <li>Initial AI Index Release</li>\r\n                    </ul>\r\n                  </h4>\r\n                </div>\r\n              </div>\r\n            </li>\r\n            <li class=\"timeline-item\">\r\n              <div class=\"timeline-badge\"><i class=\"\"></i></div>\r\n              <div class=\"timeline-panel\">\r\n                <div class=\"timeline-heading\">\r\n                  <h4 class=\"timeline-title\">\r\n                    <div class=\"mb-1 timeline_dates\">5 November</div>\r\n\r\n                    <ul class=\"timeline_content_font\">\r\n                      <li>NFT Release on Cardano</li>\r\n                    </ul>\r\n                  </h4>\r\n                </div>\r\n              </div>\r\n            </li>\r\n\r\n            <li class=\"timeline-item\">\r\n              <div class=\"timeline-badge\"><i class=\"\"></i></div>\r\n              <div class=\"timeline-panel\">\r\n                <div class=\"timeline-heading\">\r\n                  <h4 class=\"timeline-title\">\r\n                    <div class=\"mb-1 timeline_dates\">Oct2021-Nov2021</div>\r\n\r\n                    <ul class=\"timeline_content_font\">\r\n                      <li>Price Prediction Platform Launch</li>\r\n                      <li>Cardano NFT Launch</li>\r\n                      <li>Caradano Cross Chain Bridging</li>\r\n                    </ul>\r\n                  </h4>\r\n                </div>\r\n              </div>\r\n            </li>\r\n            <li class=\"timeline-item\">\r\n              <div class=\"timeline-badge\"><i class=\"\"></i></div>\r\n              <div class=\"timeline-panel\">\r\n                <div class=\"timeline-heading\">\r\n                  <h4 class=\"timeline-title\">\r\n                    <div class=\"mb-1 timeline_dates\">1 December 2021</div>\r\n\r\n                    <ul class=\"timeline_content_font\">\r\n                      <li>First AI Image Merger Dream nft Platform Release</li>\r\n                    </ul>\r\n                  </h4>\r\n                </div>\r\n              </div>\r\n            </li>\r\n            <li class=\"timeline-item\">\r\n              <div class=\"timeline-badge\"><i class=\"\"></i></div>\r\n              <div class=\"timeline-panel\">\r\n                <div class=\"timeline-heading\">\r\n                  <h4 class=\"timeline-title\">\r\n                    <div class=\"mb-1 timeline_dates\">Dec2021-Jan2022</div>\r\n\r\n                    <ul class=\"timeline_content_font\">\r\n                      <li>Different Indicators Launch</li>\r\n                      <li>NFT Game development</li>\r\n                    </ul>\r\n                  </h4>\r\n                </div>\r\n              </div>\r\n            </li>\r\n            <li class=\"timeline-item\">\r\n              <div class=\"timeline-badge\"><i class=\"\"></i></div>\r\n              <div class=\"timeline-panel\">\r\n                <div class=\"timeline-heading\">\r\n                  <h4 class=\"timeline-title\">\r\n                    <div class=\"mb-1 timeline_dates\">Jan2022-March2022</div>\r\n\r\n                    <ul class=\"timeline_content_font\">\r\n                      <li>Mobile App Development and Launch</li>\r\n                    </ul>\r\n                  </h4>\r\n                </div>\r\n              </div>\r\n            </li>\r\n            <li class=\"timeline-item\">\r\n              <div class=\"timeline-badge\"><i class=\"\"></i></div>\r\n              <div class=\"timeline-panel\">\r\n                <div class=\"timeline-heading\">\r\n                  <h4 class=\"timeline-title\">\r\n                    <div class=\"mb-1 timeline_dates\">Apr2022-Aug2022</div>\r\n\r\n                    <ul class=\"timeline_content_font\">\r\n                      <li>Stripe payment integration</li>\r\n                      <li>NFT Game Launch</li>\r\n                    </ul>\r\n                  </h4>\r\n                </div>\r\n              </div>\r\n            </li>\r\n          </ul>\r\n        </div> -->\r\n      </div>\r\n\r\n      <div\r\n        class=\"d-flex align-items-center justify-content-center mb-5 medium-box\"\r\n      >\r\n        <p class=\"mb-0\">Follow us on medium for further announcements</p>\r\n        <a href=\"#\" class=\"medium-logo ml-5\"></a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","<div class=\"container-fluid bg-color\">\r\n\r\n    <div class=\"row content\">\r\n\r\n\r\n        <div class=\"col-lg-12\" id=\"Overview\">\r\n            <div class=\"scrollable-title-container\">\r\n                <label class=\"scrollable-title mb-5\">NFT Collections</label>\r\n              </div>\r\n              <div class=\"heading\">\r\n                <div class=\"line-splitter\"></div>\r\n                <h1 class=\"heading-text\">Beyond Moon Collection</h1>\r\n                <div class=\"line-splitter\"></div>\r\n             </div>\r\n\r\n             <div class=\"row mt-5 mb-5\">\r\n                <div class=\"col-xl-4 col-lg-4 col-md-6 col-sm-12 col-xs-12\">\r\n                    <div  class=\"tab flex-column align-items-center position-relative\">\r\n                        <h3 class=\"text-uppercase title-tripy\"> Beyond Owl</h3>\r\n                        <button class=\"sync-icon\" mat-raised-button (click)=\"syncNamiWallet()\"\r\n                            matTooltip=\"Sync assets with blockchain\" matTooltipClass=\"tooltip-custum\">\r\n                              <i class=\"fas fa-redo-alt\"></i>\r\n                            </button>\r\n                        <div class=\"d-flex justify-content-between w-100 flex-column flex-md-row flex-lg-column flex-xl-row align-items-center\">\r\n                            <a\r\n                        href=\"/#/trippy-owl-listing\"\r\n                        class=\"btn btn-secondary tab-button border-0\"\r\n                        >\r\n                        View all\r\n                        </a>\r\n                        <!-- <a\r\n                        href=\"javascript:void(0)\"\r\n                        class=\"btn btn-primary tab-button border-0 tealcolor\"\r\n                        data-toggle=\"modal\"\r\n                        data-target=\"#claimconfirm\"\r\n                        [ngClass]=\"{'notallowed d-none': buttondisnft, 'notallowed': circleLoader}\"\r\n                        >\r\n                        Claim\r\n                        <div class=\"spinner-border spinner-border-sm\" role=\"status\" *ngIf=\"circleLoader\">\r\n\r\n                          </div>\r\n                        </a> -->\r\n\r\n\r\n                        <div\r\n                        class=\"btn btn-primary tab-button border-0 tealcolor\"\r\n                        *ngIf=\"buttondisnft\"\r\n                        >Loading...\r\n                        <div class=\"spinner-border spinner-border-sm\" role=\"status\">\r\n                            <span class=\"sr-only\">Loading...</span>\r\n                          </div>\r\n                      </div>\r\n\r\n                      <!-- <a\r\n                        href=\"javascript:void(0)\"\r\n                        class=\"btn btn-primary tab-button border-0 tealcolor\"\r\n                        (click)=\"syncNamiWallet()\"\r\n                         >\r\n                        Sync\r\n                        </a> -->\r\n\r\n                        </div>\r\n                        <div class=\"trippy-box\">\r\n                            <img\r\n                            class=\"img-responsive nft-img\"\r\n                            alt=\"NFTs\"\r\n                            src=\"../../../assets/dekala-owl/1.png\"\r\n                            loading=\"lazy\"\r\n                        />\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n\r\n               <div class=\"col-xl-4 col-lg-4 col-md-6 col-sm-12 col-xs-12\">\r\n                    <div class=\"tab flex-column align-items-center\">\r\n                            <a  href=\"/#/moonverse\">\r\n                            <h3 class=\"text-uppercase clr-white\">Beyond Deed</h3>\r\n\r\n                            <div class=\"trippy-box\">\r\n                                <img\r\n                                class=\"img-responsive nft-img\"\r\n                                alt=\"NFTs\"\r\n                                src=\"../../../assets/beyond_deed.jpg\"\r\n                            />\r\n                            </div>\r\n\r\n                        </a>\r\n                        </div>\r\n                </div>\r\n\r\n                <!--<div class=\"col-xl-4 col-lg-4 col-md-6 col-sm-12 col-xs-12\">\r\n                    <div class=\"tab flex-column align-items-center\">\r\n                            <a href=\"javascript:void(0)\" >\r\n                            <h3 class=\"text-uppercase clr-white\">Mythic</h3>\r\n\r\n                            <div class=\"trippy-box\">\r\n                                <img\r\n                                class=\"img-responsive nft-img\"\r\n                                alt=\"NFTs\"\r\n                                src=\"../../../assets/legend/dropping_soon.gif\"\r\n                            />\r\n                            </div>\r\n                        </a>\r\n                        </div>\r\n                </div>-->\r\n             </div>\r\n\r\n              <div class=\"heading\">\r\n                <div class=\"line-splitter\"></div>\r\n                <h1 class=\"heading-text\">NFT Launch Pad</h1>\r\n                <div class=\"line-splitter\"></div>\r\n             </div>\r\n\r\n             <div class=\"row mt-5 mb-5\">\r\n                <div class=\"col-xl-4 col-lg-4 col-md-4 col-sm-12 col-xs-12\">\r\n                    <div class=\"tab flex-column align-items-center\">\r\n                        <h3 class=\"text-uppercase\">List Your NFT collections</h3>\r\n                        <div class=\"position-relative\">\r\n                            <a href=\"javascript:void(0)\" class=\"plus-icon\">\r\n                                <i class=\"fa fa-plus-circle\"></i>\r\n                            </a>\r\n                            <img\r\n                            class=\"img-responsive nft-img\"\r\n                            alt=\"NFTs\"\r\n                            src=\"../../../assets/cross.png\"\r\n                        />\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n\r\n\r\n             </div>\r\n\r\n\r\n\r\n\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n\r\n<!-- conformation modal -->\r\n<div\r\n  class=\"modal fade mintmodal\"\r\n  id=\"claimconfirm\"\r\n  tabindex=\"-1\"\r\n  role=\"dialog\"\r\n  aria-labelledby=\"exampleModaltwo\"\r\n  aria-hidden=\"true\"\r\n\r\n  >\r\n  <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n     <div class=\"modal-content\">\r\n        <div class=\"modal-header border-0\">\r\n           <h3 class=\"modal-title mb-0\">\r\n            Are you sure you want to  Claim ?\r\n           </h3>\r\n\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n\r\n\r\n           <button\r\n              type=\"button\"\r\n              class=\"tab-button\"\r\n              data-dismiss=\"modal\"\r\n              aria-label=\"Close\"\r\n              >\r\n           Cancel\r\n           </button>\r\n           <button\r\n              type=\"button\"\r\n              class=\"tab-button\"\r\n              (click)=\"clickMint()\"\r\n              data-dismiss=\"modal\"\r\n              aria-label=\"Close\"\r\n              >\r\n           Confirm\r\n           </button>\r\n        </div>\r\n     </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from \"@angular/router\";\r\nimport { NFTsAPIServices } from \"../../services/nft.service\";\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { SpinnerService } from '../../helper/spinner/spinner.service';\r\nimport { environment as env } from '../../../environments/environment';\r\nimport Loader from '../../services/nami-loader.service';\r\nimport MintLoader from '../../services/nami-minting-243.service';\r\nimport { CountdownConfig, CountdownEvent } from 'ngx-countdown';\r\n@Component({\r\n  selector: 'app-nft-collection',\r\n  templateUrl: './nft-collection.component.html',\r\n  styleUrls: ['./nft-collection.component.scss']\r\n})\r\nexport class NftCollectionComponent implements OnInit {\r\n  adminNamiWalletAddress = env.adminNamiWalletAddress;\r\n  TRIPPY_OWL_COLLECTION_PRICE = env.TRIPPY_OWL_COLLECTION_PRICE\r\n  ASSET_TRANSFER_PRICE = env.ASSET_TRANSFER_PRICE;\r\n  SERVER_URL = env.SERVER_URL;\r\n\r\n  authUser: any = null;\r\n  // authToken: any = null;\r\n  buttondisnft: boolean = false;\r\n  KEY = 'nfttime'\r\n  DEFAULT = 120\r\n  circleLoader: boolean = false;\r\n  config: CountdownConfig = { leftTime: this.DEFAULT, notify: 0, format: 'm:s' }\r\n  constructor(\r\n    private readonly APIServices: NFTsAPIServices,\r\n    private readonly router: Router,\r\n    private toastr: ToastrService,\r\n    private spinnerService: SpinnerService\r\n  ) { }\r\n\r\n  async ngOnInit() {\r\n\r\n    let exctingValue: any = localStorage.getItem(this.KEY)\r\n    let value = +exctingValue ?? this.DEFAULT;\r\n    if (value <= 0) {\r\n      value = this.DEFAULT\r\n      //localStorage.clear();\r\n    }\r\n    this.config = { ...this.config, leftTime: value }\r\n\r\n\r\n    this.buttondisnft = Boolean(localStorage.getItem('buttonvaluenft'));\r\n\r\n    this.APIServices.userLoginData$.subscribe((data) => {\r\n      // console.log(data, '@dadadadad nft collection component');\r\n      this.authUser = data;\r\n    })\r\n\r\n    this.APIServices.claimButtonLoading$.subscribe((data) => {\r\n      console.log(data, '@dadadadad nft collection component claimButtonLoading');\r\n      this.circleLoader = data;\r\n    })\r\n\r\n    this.handleClaimButton((localStorage.getItem(\"claimBtnLoading\") === \"true\" ? true : false));\r\n    await this.syncNamiWallet();\r\n  }\r\n\r\n  async syncNamiWallet() {\r\n    const Nami = await Loader.Cardano();\r\n    const namiWalletAssetsList = await Nami.getAssets();\r\n    let totalNamiAssets = 0;\r\n    namiWalletAssetsList.map((item: any) => totalNamiAssets += Number(item.quantity));\r\n    console.log(\"Total Assets: \", totalNamiAssets);\r\n\r\n    // this.APIServices.totalNamiWalletNFT$.subscribe((totalNamiAssets) => {\r\n    if (!totalNamiAssets) return;\r\n    console.log(totalNamiAssets, '@dadadadad totalNamiWalletNFT nft collection component');\r\n    // this.authToken = data;\r\n    const prevTotalNamiAssets = localStorage.getItem(\"namiWalletTotalAssets\") ? Number(localStorage.getItem(\"namiWalletTotalAssets\")) : 0;\r\n    console.log(\"=============== HI ===================\", prevTotalNamiAssets)\r\n    if (totalNamiAssets > prevTotalNamiAssets) {\r\n      // console.log(\"current assets are more than prev\");\r\n      // Enable claim button\r\n      this.buttondisnft = false;\r\n      // localStorage.removeItem(\"buttonvaluenft\")\r\n      localStorage.removeItem(\"claimStartTime\");\r\n      localStorage.setItem(\"namiWalletTotalAssets\", `${totalNamiAssets}`);\r\n      this.handleClaimButton(false);\r\n\r\n    } else if (totalNamiAssets <= prevTotalNamiAssets) {\r\n      // console.log(\"current assets are less than prev or equal\");\r\n\r\n      const claimStartTime: any = localStorage.getItem(\"claimStartTime\");\r\n      if (claimStartTime) {\r\n\r\n        const prevTime: any = new Date(claimStartTime)\r\n        const currentTime: any = new Date();\r\n\r\n        var diffMs = (currentTime - prevTime);\r\n        var diffDays = Math.floor(diffMs / 86400000); // days\r\n        var diffHrs = Math.floor((diffMs % 86400000) / 3600000); // hours\r\n        var diffMins = Math.round(((diffMs % 86400000) % 3600000) / 60000); // minutes\r\n\r\n        console.log(\"date values: \", diffDays, diffHrs, diffMins);\r\n\r\n        // var currentdate: any = new Date(\"3/8/2022 18:31\");\r\n        //     localStorage.setItem(\"claimStartTime\", currentdate);\r\n\r\n        // enable claim button if 20 minutes passed\r\n        if (diffDays > 0 || diffHrs > 0 || diffMins > 5) {\r\n          console.log(\"check data\");\r\n          this.buttondisnft = false;\r\n          // localStorage.removeItem(\"buttonvaluenft\")\r\n          localStorage.removeItem(\"claimStartTime\");\r\n          localStorage.setItem(\"namiWalletTotalAssets\", `${totalNamiAssets}`);\r\n          this.handleClaimButton(false);\r\n        }\r\n      } else {\r\n        this.handleClaimButton(false);\r\n        this.buttondisnft = false;\r\n      }\r\n    }\r\n    // })\r\n  }\r\n\r\n  handleClaimButton = (_value: boolean) => {\r\n    // console.log(\"handleClaimButton func : \", _value);\r\n    localStorage.setItem(\"claimBtnLoading\", `${_value}`);\r\n    this.APIServices.claimButtonLoading$.next(_value);\r\n  }\r\n  async handleMintNft(obj: any, action: any) {\r\n    //  if (this.authUser && (this.authUser.type === 'dev' || this.authUser.type === 'admin')) {\r\n\r\n    if (this.authUser.type === 'dev') this.toastr.info('Developer mode enabled');\r\n\r\n    const checkWallet = await Loader.verifyWallet(this.TRIPPY_OWL_COLLECTION_PRICE, this.authUser.type);\r\n    console.log(\"Hi verifyWallet => \", checkWallet);\r\n    if (checkWallet !== true) {\r\n      this.toastr.warning(checkWallet)\r\n      return;\r\n    };\r\n\r\n    // $('#exampleModaltwo').modal('show');\r\n  }\r\n\r\n  clickMint = async () => {\r\n    // if (!this.authUser) return;\r\n\r\n    // console.log(this.mintNftObj, 'this.mintNftObjakldjfa;lksdjfas')\r\n    // ***\r\n    // verify wallet validations\r\n    // check availbele tokens for minting\r\n    // nami-wallet minting\r\n    // update db records\r\n    // ***\r\n    //  this.circleLoader = true;\r\n\r\n    try {\r\n\r\n      // const tokenAmmount = Number(this.mintNftObj.amount)\r\n      const MintNami = await MintLoader.Cardano();\r\n\r\n      const checkWallet = await Loader.verifyWallet(0, this.authUser.type);\r\n      console.log(\"clickMint verifyWallet => \", checkWallet);\r\n\r\n      if (checkWallet !== true) {\r\n        this.toastr.warning(checkWallet)\r\n        return\r\n      }\r\n\r\n        // if (localStorage.getItem(\"isCollectionLaunched\") || localStorage.getItem(\"isCollectionLaunched\") === \"1\") {\r\n        // // if (this.authUser.type !== \"dev\") {\r\n        //   this.toastr.info(\"Comming Soon!\")\r\n        //   return\r\n        // }\r\n\r\n      const nftResp: any = await new Promise(async (resolve, reject) => {\r\n        const resp = await this.APIServices.verifyClaimedCollection({\r\n          action: 'trippy-owl',\r\n          walletAddress: await Loader.CardanoWalletAddress()\r\n        });\r\n        resolve(resp)\r\n      });\r\n      if (!nftResp.status) {\r\n        this.toastr.error(nftResp.msg);\r\n        // this.circleLoader = false;\r\n        this.handleClaimButton(false);\r\n        return\r\n      }\r\n\r\n      const requiredAmount = nftResp.isFreeClaimable ? this.ASSET_TRANSFER_PRICE : this.TRIPPY_OWL_COLLECTION_PRICE + this.ASSET_TRANSFER_PRICE;\r\n      const getBalance = await Loader.getWalletBalance();\r\n      console.log(\"Wallet balance is: \", getBalance);\r\n      if (!getBalance) { this.toastr.warning('Something went wrong to get wallet balance'); return; }\r\n      if (await Loader.convertToADA(getBalance) < requiredAmount) { this.toastr.warning('Insufficient balance'); return; }\r\n\r\n      this.handleClaimButton(true);\r\n\r\n      // const newPolicy = await MintLoader.createPolicy();\r\n      // console.log(\"newPolicy \", JSON.stringify(newPolicy));\r\n      const recipients = [\r\n        // { // mint nft against connected wallet\r\n        //   address: await MintNami.getAddress(),\r\n        //   amount: this.ASSET_TRANSFER_PRICE,\r\n        //   mintedAssets: [{\r\n        //     assetName: this.mintNftObj.assetKey, quantity: \"1\", policyId: newPolicy.id,\r\n        //     policyScript: newPolicy.script\r\n        //   }]\r\n        // },\r\n        { // send nft amount to admin\r\n          address: this.adminNamiWalletAddress,\r\n          // claim free if exist into airdrop addresses\r\n          amount: requiredAmount\r\n        }\r\n      ];\r\n\r\n      // const mintMetadata: any = {\r\n      //   \"721\": {\r\n      //     [newPolicy.id]: {\r\n      //       [this.mintNftObj.assetKey]: {\r\n      //         name: this.mintNftObj.assetKey,\r\n      //         description: 'GRISE NFT Marketplace.', // `GRISE Metamoonverse NFT Marketplace. https://grisemetamoonverse.io/nft`,\r\n      //         image: this.mintNftObj.imageUrl,\r\n      //         authors: [\"GRISE\"] // GRISEMETAMOONVERSE\r\n      //       }\r\n      //     }\r\n      //   }\r\n      // };\r\n      // console.log(\"mintMetadata => \", JSON.stringify(mintMetadata));\r\n      let txHash: any = '';\r\n      try { // T#1\r\n        console.log(\"======================= Start Tx ==========================\")\r\n        txHash = await MintLoader.buildFullTransaction(recipients);\r\n        console.log(\"======================= End Tx ==========================\", txHash)\r\n\r\n        if (txHash && txHash.error) {\r\n          this.toastr.error(\"Transaction Failed\");\r\n          // this.circleLoader = false;\r\n          this.handleClaimButton(false);\r\n          return\r\n        }\r\n      } catch (err: any) {\r\n        console.log(\"err1: \", err);\r\n        this.handleClaimButton(false);\r\n        if (err && err.info) {\r\n          this.toastr.info(err.info);\r\n          // this.circleLoader = false;\r\n          console.log(err.info, \"error test\");\r\n          return\r\n\r\n        }\r\n        else if (err.toString().includes(\"MIN_UTXO_ERROR\")) {\r\n          this.toastr.warning(\"Insufficient balance\");\r\n          return;\r\n        }\r\n        // else {\r\n\r\n        //   console.log(\"mintMetadata 1:: \", JSON.stringify(mintMetadata));\r\n        //   try { // T#2\r\n        //     delete mintMetadata[\"721\"][newPolicy.id][this.mintNftObj.assetKey].description;\r\n        //     txHash = await MintLoader.buildFullTransaction(recipients, mintMetadata);\r\n        //   } catch (err2) {\r\n        //     console.log(\"err2: \", err2);\r\n        //     try { // T#3\r\n        //       mintMetadata[\"721\"][newPolicy.id][this.mintNftObj.assetKey].image = this.mintNftObj.imageLink;\r\n        //       txHash = await MintLoader.buildFullTransaction(recipients, mintMetadata);\r\n        //     } catch (err3) {\r\n        //       console.log(\"err3: \", err3);\r\n        //       try { // T#4\r\n        //         delete mintMetadata[\"721\"][newPolicy.id][this.mintNftObj.assetKey].image;\r\n        //         // mintMetadata[\"721\"][newPolicy.script] = mintMetadata[\"721\"][newPolicy.id];\r\n        //         // delete mintMetadata[\"721\"][newPolicy.id];\r\n        //         // console.log(\"mintMetadata 3:: \", JSON.stringify(mintMetadata));\r\n        //         txHash = await MintLoader.buildFullTransaction(recipients, mintMetadata);\r\n        //       } catch (err4) {\r\n        //         console.log(\"err4: \", err4);\r\n        //         txHash = await MintLoader.buildFullTransaction(recipients);\r\n        //       }\r\n        //     }\r\n\r\n        //   }\r\n        // }\r\n      }\r\n      console.log(\"mintTransaction \", txHash);\r\n\r\n      // const txHash = await Nami.send({\r\n      //   address: this.adminNamiWalletAddress, // ADMIN ADDRESS\r\n      //   amount: tokenAmmount\r\n      // })\r\n      if (!txHash) {\r\n        // this.toastr.error(\"Failed to claim trippy owl collection\");\r\n        this.toastr.error(\"Unable to proceed this transaction, Try again!\");\r\n        // this.circleLoader = false;\r\n        this.handleClaimButton(false);\r\n      } else {\r\n        // this.toastr.success(`TxHash is: ${txHash}`, \"Trippy Owl Collection claimed successfully\");\r\n        const data = {\r\n          isFreeClaimable: nftResp.isFreeClaimable,\r\n          walletAddress: await Loader.CardanoWalletAddress(), //this.authUser.walletAddr\r\n          // nftId: this.mintNftObj._id,\r\n          // mintToken: `${newPolicy.id}.${this.mintNftObj.assetKey}`,\r\n          // nftQuantity: 1\r\n        }\r\n\r\n        this.APIServices.mintTrippyOwl(data)\r\n          .then((res) => {\r\n            // this.btnid = \"\"\r\n            if (res.status) {\r\n              var currentdate: any = new Date();\r\n              localStorage.setItem(\"claimStartTime\", currentdate);\r\n              // this.circleLoader = false;\r\n              this.handleClaimButton(false);\r\n              // this.disablebtn = false;\r\n              // this.mintNftObj.quantity = String(Number(this.mintNftObj.quantity) - 1);\r\n              this.toastr.success(`TxHash is: ${txHash}`, res.msg);\r\n              this.buttondisnft = true;\r\n              localStorage.setItem(\"buttonvaluenft\", `${this.buttondisnft}`)\r\n              setTimeout(() => {\r\n                this.buttondisnft = false;\r\n                localStorage.removeItem(`${this.buttondisnft}`)\r\n              }, 120000);\r\n            } else {\r\n              // this.toastr.error(`TxHash is: ${txHash}`, \"Trippy Owl Collection claimed successfully\");\r\n              this.toastr.error(res.msg);\r\n              // this.circleLoader = false;\r\n              this.handleClaimButton(false);\r\n            }\r\n          })\r\n          .catch((err) => {\r\n            // this.toastr.error(`TxHash is: ${txHash}`, \"Trippy Owl Collection claimed successfully\");\r\n            this.toastr.error(\"Something went wrong\");\r\n            console.log(\"Error is: \", err);\r\n            // this.circleLoader = false;\r\n            this.handleClaimButton(false);\r\n          });\r\n      }\r\n\r\n    } catch (error: any) {\r\n      // this.circleLoader = false;\r\n      this.handleClaimButton(false);\r\n      console.log(\"Error :: \", error);\r\n      if (error && error.info) {\r\n        this.toastr.info(error.info);\r\n      } else {\r\n        this.toastr.error(\"Something went wrong\");\r\n        // this.circleLoader = false;\r\n\r\n      }\r\n      this.handleClaimButton(false);\r\n    }\r\n  }\r\n\r\n  // handleEvent(ev: CountdownEvent) {\r\n  //   //console.log(ev, \"envkfadfja;lsdjf\")\r\n  //   if (ev.action === 'notify') {\r\n  //     // Save current value\r\n  //     localStorage.setItem(this.KEY, `${ev.left / 1000}`);\r\n  //   }\r\n  //   if (ev.action === 'done') {\r\n  //     localStorage.removeItem(\"buttonvaluenft\")\r\n  //     localStorage.removeItem(\"nfttime\")\r\n  //     //localStorage.clear();\r\n  //     this.buttondisnft = false;\r\n  //   }\r\n\r\n  // }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ClaimableAmountData } from 'src/app/models/claimable-amount-data';\r\nimport { LiquidityEventData } from 'src/app/models/liquidity-event-data';\r\nimport { LiquidityContractService } from 'src/app/services/liquidity-contract.service';\r\nimport { LocalDataUpdateService } from 'src/app/services/local-data-update.service';\r\nimport { SharedService } from 'src/app/services/shared.service';\r\n\r\n@Component({\r\n  selector: 'app-liquidity',\r\n  templateUrl: './liquidity.component.html',\r\n  styleUrls: ['./liquidity.component.scss']\r\n})\r\nexport class LiquidityComponent implements OnInit {\r\n\r\n  liquidityEventData: LiquidityEventData;\r\n  claimableAmountData: ClaimableAmountData;\r\n  timeLeft: string;\r\n  eventIsClosed: boolean;\r\n  claimableAmount = 0;\r\n\r\n  constructor(private sharedService: SharedService,\r\n              private liquidityContractService: LiquidityContractService,\r\n              private localDataUpdateService: LocalDataUpdateService) { }\r\n\r\n  ngOnInit() {\r\n    this.tokenTimer();\r\n    this.liquidityContractService.getLiquidityEventData().then(value => this.liquidityEventData = value!);\r\n    this.localDataUpdateService.isClaimableAmountDataUpdated.subscribe(() => {\r\n      this.liquidityContractService.getClaimableAmount().then(claimableAmtData => {\r\n        if (claimableAmtData) {\r\n          this.claimableAmountData = claimableAmtData;\r\n          this.claimableAmount = claimableAmtData.claimableAmount;\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  tokenTimer() {\r\n    this.timeLeft = this.sharedService.getTimeLeft(this.sharedService.endTime);\r\n    const intervalId = setInterval(() => {\r\n      this.timeLeft = this.sharedService.getTimeLeft(this.sharedService.endTime);\r\n      if (this.timeLeft == 'EXPIRED') {\r\n        this.eventIsClosed = true;\r\n        clearInterval(intervalId);\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  checkClaimGrise(): boolean {\r\n    if (this.claimableAmountData) {\r\n      if (this.claimableAmount != 0 && this.claimableAmountData.generatedDays > 0 && this.claimableAmountData.totalWeiContributed == 0) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  claimGriseToken() {\r\n    if (this.checkClaimGrise()) {\r\n      return;\r\n    }\r\n\r\n    this.liquidityContractService.claimGriseToken();    \r\n  }\r\n}\r\n","<div style=\"background-color: rgb(59, 65, 72); height: 100%;\">\r\n\r\n  <div class=\"personal header_div\">\r\n    <!-- <img style=\"width: 250px\" src=\"../../../assets/logo.png\"> -->\r\n    <i class=\"fas fa-coins personal_icon header_icon\"></i>\r\n    <label class=\"personal_title header_title\">Liquidity Event</label>\r\n  </div>\r\n  <div class=\"sub-end-part\">\r\n\r\n    <!-- <div style=\" border-bottom: 2px solid grey;margin-bottom: 40px;\"></div> -->\r\n    <div class=\"row main\">\r\n      <div class=\"col-xl-6 col-lg-12 col-md-12 col-sm-12 tab\">\r\n\r\n        <h4 class=\"tab-header\">\r\n          Total BNB contributed for all Grise reservation days\r\n        </h4>\r\n        <div class=\"timebox\">\r\n          <!-- <i class=\"fab fa-bandcamp\" style=\"font-size: 30px;color: white\"></i> -->\r\n          <button class=\"ether\">\r\n            <!-- <i class=\"fab fa-ethereum\" style=\"font-size: 30px\"></i> -->\r\n            <img src=\"../assets/bnb-black.png\" alt=\"logo\" style=\"height: 30px; width: 30px;\">\r\n          </button>\r\n\r\n          <span class=\"digit liq_time\">{{ liquidityEventData?.totalInvestment | number:'1.0-5' }} BNB</span>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-xl-6 col-lg-12 col-md-12 col-sm-12 tab\">\r\n        <h4 class=\"tab-header\">\r\n          Total Time left until liquidity event is closed\r\n        </h4>\r\n        <div class=\"timebox\">\r\n          <button class=\"ether\">\r\n            <i class=\"fa fa-clock\" style=\"font-size: 30px;\" aria-hidden=\"true\"></i>\r\n          </button>\r\n\r\n          <span class=\"digit\">\r\n            <!-- <countdown [config]=\"{leftTime: 3444440}\"></countdown> -->\r\n\r\n            <span style=\"color: white\" id=\"tokentimer1\" class=\"liq_time\">{{ timeLeft }}</span>\r\n          </span>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row upper\" >\r\n      <!-- <div class=\"col-sm-3\" >\r\n                <div class=\"box_lable\">\r\n                    <br>\r\n                  <span class=\"box\">100</span>  \r\n                  <br>\r\n                  <h4 class=\"label\">Grise Reservation</h4>\r\n                  <br>\r\n                </div>\r\n              </div> -->\r\n      <div class=\"col-md-6 col-xs-12\">\r\n        <div class=\"box_lable\">\r\n          <br>\r\n          <span class=\"box\">{{ liquidityEventData?.uniqueInvestorCount }}</span>\r\n          <br>\r\n          <h4 class=\"label\">Unique contributor</h4>\r\n          <br>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-6 col-xs-12\">\r\n        <div class=\"box_lable\">\r\n          <br>\r\n          <span class=\"box\">{{ liquidityEventData?.referralAccountCount }}</span>\r\n          <br>\r\n          <h4 class=\"label\">Unique Referrer</h4>\r\n          <br>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-6 col-xs-12\">\r\n        <div class=\"box_lable\">\r\n          <br>\r\n          <span class=\"box\">{{ (liquidityEventData && liquidityEventData.currentLPDay >= 0) ? liquidityEventData.currentLPDay : '-' }}</span>\r\n          <br>\r\n          <h4 class=\"label\">Current Grise Slot</h4>\r\n          <br>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-6 col-xs-12\">\r\n        <div class=\"box_lable\">\r\n          <br>\r\n          <span class=\"box\">{{ claimableAmount | number: '1.0-2' }}</span>\r\n          <br>\r\n          <h4 class=\"label\">Claimable Amount</h4>\r\n          <br>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <br>\r\n    <button type=\"button\" [disabled]=\"checkClaimGrise()\"\r\n      class=\"btn btn-primary staking_button\" (click)=\"claimGriseToken()\">Claim Grise Token</button>\r\n\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\r\nimport * as Highcharts from \"highcharts/highstock\";\r\nimport Indicators from \"highcharts/indicators/indicators-all.js\";\r\nimport DragPanes from \"highcharts/modules/drag-panes.js\";\r\nimport AnnotationsAdvanced from \"highcharts/modules/annotations-advanced.js\";\r\nimport PriceIndicator from \"highcharts/modules/price-indicator.js\";\r\nimport StockTools from \"highcharts/modules/stock-tools.js\";\r\n\r\ndeclare var require: any;\r\nconst wordCloud = require('highcharts/modules/wordcloud.js');\r\nwordCloud(Highcharts);\r\n\r\nIndicators(Highcharts);\r\nDragPanes(Highcharts);\r\nAnnotationsAdvanced(Highcharts);\r\nPriceIndicator(Highcharts);\r\nStockTools(Highcharts);\r\n\r\n@Component({\r\n  selector: 'app-coin-summary',\r\n  templateUrl: './coin-summary.component.html',\r\n  styleUrls: ['./coin-summary.component.scss']\r\n})\r\nexport class CoinSummaryComponent implements OnInit {\r\n\r\n  NewsData: any = ''\r\n  Indexes: any = []\r\n  WordCloud: any = ''\r\n  coins_list_api:any = []\r\n  currentProduct:string = 'bitcoin'\r\n  \r\n  highcharts = Highcharts;\r\n  public wordCloud: any = {\r\n    chart: {\r\n      backgroundColor: \"#2d3339\",\r\n    },\r\n    title: {\r\n      text: '',\r\n      style: {\r\n          color: '#fff',\r\n      }\r\n    },\r\n    series: [{\r\n        type: 'wordcloud',\r\n        data: [],\r\n        name: 'Occurrences'\r\n    }],\r\n  };\r\n\r\n  public coinHistory: any = {\r\n    chart: {\r\n      backgroundColor: \"#2d3339\",\r\n    },\r\n    rangeSelector: {\r\n      buttonTheme: { // styles for the buttons\r\n        fill: 'none',\r\n        stroke: 'none',\r\n        'stroke-width': 0,\r\n        r: 8,\r\n        style: {\r\n            color: 'white',\r\n            fontWeight: 'bold'\r\n        },\r\n        states: {\r\n            hover: {\r\n                fill: 'white',\r\n                style: {\r\n                    color: 'black'\r\n                }\r\n            },\r\n            select: {\r\n                fill: 'white',\r\n                style: {\r\n                    color: 'black'\r\n                }\r\n            }\r\n        }\r\n    },\r\n    inputStyle: {\r\n        color: 'white',\r\n        fontWeight: 'bold',\r\n        states:{\r\n            select:{\r\n                color: 'black',\r\n            }\r\n        }\r\n    },\r\n    labelStyle: {\r\n        color: 'white',\r\n        fontWeight: 'bold',\r\n    },\r\n    },\r\n    title: {\r\n      text: \"Coin Price and MovingAvg\",\r\n      style: {\r\n        color: '#fff',\r\n      }\r\n    },\r\n    yAxis: {\r\n      title: {\r\n          text: 'Price & Moving Avg'\r\n      },\r\n      gridLineColor: 'gray',\r\n      labels: {\r\n        style: {\r\n            color: 'white'\r\n        }\r\n    }\r\n  },\r\n    series: [\r\n      {\r\n        type: \"line\",\r\n        name: \"Price\",\r\n        data: [],\r\n        color: '#ED561B',\r\n        \r\n      },\r\n      {\r\n        type: \"line\",\r\n        name: \"MovingAvg\",\r\n        data: [],\r\n        color: '#DDDF00',\r\n      }\r\n    ]\r\n  }\r\n\r\n  public coinTrends:any = {\r\n    chart: {\r\n      backgroundColor: \"#2d3339\",\r\n    },\r\n    rangeSelector: {\r\n      buttonTheme: { // styles for the buttons\r\n        fill: 'none',\r\n        stroke: 'none',\r\n        'stroke-width': 0,\r\n        r: 8,\r\n        style: {\r\n            color: 'white',\r\n            fontWeight: 'bold'\r\n        },\r\n        states: {\r\n            hover: {\r\n                fill: 'white',\r\n                style: {\r\n                    color: 'black'\r\n                }\r\n            },\r\n            select: {\r\n                fill: 'white',\r\n                style: {\r\n                    color: 'black'\r\n                }\r\n            }\r\n            // disabled: { ... }\r\n        }\r\n    },\r\n    inputStyle: {\r\n        color: 'white',\r\n        fontWeight: 'bold',\r\n        states:{\r\n            select:{\r\n                color: 'black',\r\n            }\r\n        }\r\n    },\r\n    labelStyle: {\r\n        color: 'white',\r\n        fontWeight: 'bold',\r\n    },\r\n    },\r\n    title: {\r\n      text: \"Coin Seasonal and Trends\",\r\n    },\r\n    yAxis: [\r\n      {\r\n        labels: {\r\n          align: \"right\",\r\n          x: -3,\r\n        },\r\n        title: {\r\n          text: \"Trends\",\r\n          \r\n        },\r\n        height: \"60%\",\r\n        resize: {\r\n          enabled: true\r\n        },\r\n      },\r\n      {\r\n        labels: {\r\n          align: \"right\",\r\n          x: -3\r\n        },\r\n        title: {\r\n          text: \"Seasonal\"\r\n        },\r\n        top: \"65%\",\r\n        height: \"35%\",\r\n        offset: 0,\r\n      }\r\n    ],\r\n    tooltip: {\r\n      split: true,\r\n    },\r\n    series: [\r\n      {\r\n        type: \"line\",\r\n        name: \"Trends\",\r\n        data: [],\r\n        color: '#24CBE5',\r\n        \r\n      },\r\n      \r\n      {\r\n        type: \"column\",\r\n        name: \"Seasonal\",\r\n        data: [],\r\n        yAxis: 1,\r\n        color: '#50B432',\r\n        zonesAxis: 'y',\r\n        zones: [{\r\n            value: 0.5,\r\n            color: 'red',\r\n        }, {\r\n            value: 1,\r\n            color: 'yellow',\r\n        }]\r\n      }\r\n    ]\r\n  }\r\n\r\ngetWordCloudNews (coinName: any){\r\n  const headers = new HttpHeaders;\r\n  const body = { coin_name: coinName };\r\n  this.http.post<any>('https://api.ethama.finance/get-google-news', body, { headers }).subscribe(data => {\r\n    let details = data;\r\n    if(details.code === 200 && details.data.news_link.length !== 0){\r\n      this.NewsData = details.data\r\n\r\n      let i: number = 0\r\n      let j: any = []\r\n      details.data.news_link.forEach((news:any) => {\r\n          j.push(i)\r\n          i=i+1;\r\n      });\r\n      this.Indexes=j\r\n\r\n      if(details.data.scraping_error_message === \"success - 200\"){\r\n        var bigcoin = false;\r\n        var Wordlist = details.data.word_cloud_data\r\n        Object.values(Wordlist).map((v:any) => {\r\n            if(v>50){\r\n                bigcoin = true\r\n            }\r\n            return null;\r\n        }) \r\n        let list: any = [];\r\n        i=0;\r\n        Object.entries(Wordlist).map((item:any) => {\r\n        if(i<100){\r\n            if(bigcoin){\r\n                if(item[1]< 20){\r\n                    list.push({name: item[0], weight: item[1]+20})\r\n                }else{\r\n                    list.push({name: item[0], weight: item[1]})\r\n                }\r\n            }else{\r\n                if(item[1]< 20){\r\n                    list.push({name: item[0], weight: item[1]+10})\r\n                }else{\r\n                    list.push({name: item[0], weight: item[1]})\r\n                }\r\n            }\r\n            i=i+1;\r\n        }\r\n        return null;\r\n        })\r\n        this.WordCloud = list\r\n        this.wordCloud = {\r\n          chart: {\r\n          backgroundColor: \"#3b4148\",\r\n          },\r\n          title: {\r\n          text: '',\r\n          style: {\r\n              color: '#fff',\r\n          }\r\n          },\r\n          series: [{\r\n              type: 'wordcloud',\r\n              name: 'Occurrences',\r\n              data: this.WordCloud\r\n          }],\r\n        };\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\ngetCoinTrends(coinName: any){\r\n  let headers = new HttpHeaders();\r\n  let params = new HttpParams()\r\n    .set(\"coin\", coinName)\r\n  this.http.get(`https://api.ethama.finance/get-summary-page?coin=${coinName}&days=365`, {\r\n    headers: headers,\r\n    params: params,\r\n    responseType: 'text'\r\n  }).toPromise().then(Response => {\r\n    let details = JSON.parse(Response);\r\n    let Price: any = []\r\n    let MovingAvg: any = []\r\n    for (let i = 0; i < details.data.data.length; i++) {\r\n      Price.push([details.data.data[i][0],details.data.data[i][1]])\r\n      if(details.data.data[i][2]===\"\"){\r\n          MovingAvg.push([details.data.data[i][0],0])\r\n      }else{\r\n          MovingAvg.push([details.data.data[i][0],details.data.data[i][2]])\r\n      }\r\n    }\r\n    this.coinHistory = {\r\n      chart: {\r\n        backgroundColor: \"#3b4148\",\r\n      },\r\n      rangeSelector: {\r\n        buttonTheme: { // styles for the buttons\r\n          fill: 'none',\r\n          stroke: 'none',\r\n          'stroke-width': 0,\r\n          r: 8,\r\n          style: {\r\n              color: 'white',\r\n              fontWeight: 'bold'\r\n          },\r\n          states: {\r\n              hover: {\r\n                  fill: 'white',\r\n                  style: {\r\n                      color: 'black'\r\n                  }\r\n              },\r\n              select: {\r\n                  fill: 'white',\r\n                  style: {\r\n                      color: 'black'\r\n                  }\r\n              }\r\n          }\r\n      },\r\n      inputStyle: {\r\n          color: 'white',\r\n          fontWeight: 'bold',\r\n          states:{\r\n              select:{\r\n                  color: 'black',\r\n              }\r\n          }\r\n      },\r\n      labelStyle: {\r\n          color: 'white',\r\n          fontWeight: 'bold',\r\n      },\r\n      },\r\n      title: {\r\n        text: \"Coin Price and MovingAvg\",\r\n        style: {\r\n          color: '#fff',\r\n        }\r\n      },\r\n      yAxis: {\r\n        title: {\r\n            text: 'Price & Moving Avg',\r\n            style: {\r\n              color: '#fff',\r\n            }\r\n        },\r\n        gridLineColor: 'gray',\r\n        labels: {\r\n          style: {\r\n              color: 'white'\r\n          }\r\n      }\r\n    },\r\n      series: [\r\n        {\r\n          type: \"line\",\r\n          name: \"Price\",\r\n          data: Price,\r\n          color: '#ED561B',\r\n        },\r\n        {\r\n          type: \"line\",\r\n          name: \"MovingAvg\",\r\n          data: MovingAvg,\r\n          color: '#DDDF00',\r\n        }\r\n      ]\r\n    }\r\n\r\n    let Trends:any = []\r\n    let Seasonal:any = []\r\n    for (let i = 0; i < details.data.trends.datetime.length; i++) {\r\n      Trends.push([details.data.trends.datetime[i]/1000000,details.data.trends.trend[i]])\r\n      Seasonal.push([details.data.trends.datetime[i]/1000000,details.data.trends.seasonal[i]])\r\n    }\r\n\r\n    this.coinTrends = {\r\n      chart: {\r\n        backgroundColor: \"#3b4148\",\r\n      },\r\n      rangeSelector: {\r\n        buttonTheme: { // styles for the buttons\r\n          fill: 'none',\r\n          stroke: 'none',\r\n          'stroke-width': 0,\r\n          r: 8,\r\n          style: {\r\n              color: 'white',\r\n              fontWeight: 'bold'\r\n          },\r\n          states: {\r\n              hover: {\r\n                  fill: 'white',\r\n                  style: {\r\n                      color: 'black'\r\n                  }\r\n              },\r\n              select: {\r\n                  fill: 'white',\r\n                  style: {\r\n                      color: 'black'\r\n                  }\r\n              }\r\n              // disabled: { ... }\r\n          }\r\n      },\r\n      inputStyle: {\r\n          color: 'white',\r\n          fontWeight: 'bold',\r\n          states:{\r\n              select:{\r\n                  color: 'black',\r\n              }\r\n          }\r\n      },\r\n      labelStyle: {\r\n          color: 'white',\r\n          fontWeight: 'bold',\r\n      },\r\n      },\r\n      title: {\r\n        text: \"Coin Seasonal and Trends\",\r\n        style: {\r\n          color: '#fff',\r\n        }\r\n      },\r\n      yAxis: [\r\n        {\r\n          labels: {\r\n            align: \"right\",\r\n            x: -3,\r\n          },\r\n          title: {\r\n            text: \"Trends\",\r\n            \r\n          },\r\n          height: \"60%\",\r\n          resize: {\r\n            enabled: true\r\n          },\r\n        },\r\n        {\r\n          labels: {\r\n            align: \"right\",\r\n            x: -3\r\n          },\r\n          title: {\r\n            text: \"Seasonal\"\r\n          },\r\n          top: \"65%\",\r\n          height: \"35%\",\r\n          offset: 0,\r\n        }\r\n      ],\r\n      tooltip: {\r\n        split: true,\r\n      },\r\n      series: [\r\n        {\r\n          type: \"line\",\r\n          name: \"Trends\",\r\n          data: Trends,\r\n          color: '#24CBE5',\r\n          \r\n        },\r\n        \r\n        {\r\n          type: \"column\",\r\n          name: \"Seasonal\",\r\n          data: Seasonal,\r\n          yAxis: 1,\r\n          color: '#50B432',\r\n          zonesAxis: 'y',\r\n          zones: [{\r\n              value: 0.5,\r\n              color: 'red',\r\n          }, {\r\n              value: 1,\r\n              color: 'yellow',\r\n          }]\r\n        }\r\n      ]\r\n    }\r\n\r\n  })\r\n}\r\n\r\ngetCoinData(name:string){\r\n  this.getWordCloudNews(name);\r\n  this.getCoinTrends(name);\r\n}\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getCoinData('bitcoin')\r\n    this.http.get('https://api.ethama.finance/get-coin-name').subscribe(Response => {\r\n      // console.log(Response);\r\n      let resSTR = JSON.stringify(Response);\r\n      let resJSON = JSON.parse(resSTR);\r\n      this.coins_list_api = resJSON.data.data;\r\n\r\n      // console.log(this.coins_list_api);\r\n    })\r\n  }\r\n\r\n}\r\n","<div class=\"coin-summary-div\">\r\n    <h2 for=\"ice-cream-choice\" class=\"mr-3\">Choose Coin:</h2>\r\n    <input class=\"inputcoinsearch mb-3 \" type=\"text\" list=\"productList\" name=\"product\" [(ngModel)]='currentProduct'\r\n      (change)=\"getCoinData(currentProduct)\" />\r\n\r\n    <datalist id=\"productList\">\r\n      <option *ngFor=\"let data_coin_name of coins_list_api;\" [value]=\"data_coin_name.id\">\r\n        {{data_coin_name.id}} ({{data_coin_name.symbol}})\r\n      </option>\r\n    </datalist>\r\n    <div class=\"row \">\r\n        <!-- introduction part -->\r\n        \r\n        <div class=\"col-lg-12 card-outer-div\" style=\"margin-top: 59px;\">\r\n        \r\n            <h1 class=\"headingAi\">Introduction AI Platform</h1>\r\n            <div class=\"main-div card-div\" style=\"text-align: justify;\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-lg-12\">\r\n                    <h1> How to use Grise Token AI-Indices</h1>\r\n                    </div>\r\n                    <div class=\"col-lg-12 my-3\">\r\n                    <h4 class=\"text-danger\">NOTE: Indices Rebalancing Times Are an Approximation.</h4>\r\n                    </div>\r\n                    <div class=\"col-lg-12 my-3\">\r\n                        <div class=\"info-text\">\r\n                        Sometimes we may update the indices when we make important updates or changes to technical details and\r\n                        calculations for an index. For example, we recently added a requirement for all indices to only hold\r\n                        cryptocurrencies with a daily trading volume greater than $500k. Each of these technical updates requires us\r\n                        to re-do the index. This will apply with future technical updates to indices.\r\n                            Furthermore, we have recently add features related to trading signal. This features is based on Deep Learning by which our stacker can take smart decision to avoid loss in trading. In AI-Price prediction algorithms we can see the future expected price up-to two months and take fast decision to in-out the market.\r\n                        As a result, the days and times are an approximation and indices may take 1-4 hours to fully update or on\r\n                        occasion be rebalanced more than their time-horizon to make important technical updates.\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-lg-12 my-3\">\r\n                    <h4 class=\"text-danger\">DISCLAIMER\r\n                    Indices of crypto investments, like all types of investment-related information, are subject to risk; they can\r\n                    go down as well as up; and relying on such information can lead to losses as well as gains. Information about\r\n                    past performance is not necessarily indicative of future performance.\r\n                    </h4>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class='row'>\r\n        <div class=\"col-12 col-lg-7 card-outer-div\">\r\n            <h1 class=\"headingAi\">World Cloud</h1>\r\n            <div class='main-div card-div'>\r\n                <highcharts-chart class=\"custom-chart-styles\"\r\n                    [Highcharts]=\"highcharts\"\r\n                    [options]=\"wordCloud\">\r\n                </highcharts-chart>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-12 col-lg-5 card-outer-div\">\r\n            <h1 class=\"headingAi\">Coin News</h1>\r\n            <div class='main-div card-div'>\r\n                <div class=\"news-div\">\r\n                    <div class=\"news_dates justify-content-between\">\r\n                        <span class=\"dates_color\">Start Date: {{NewsData.start_date}} -> End Date: {{NewsData.end_date}}</span>\r\n                        <span class=\"dates_color\">Last Updated: {{NewsData.last_updated}}</span>\r\n                    </div>\r\n                    <div class=\"news_scroller\">\r\n                        <div *ngFor=\"let i of Indexes\" class=\"coin_news\">\r\n                            <p>\r\n                                <a target=\"_blank\" rel=\"noreferrer\" href=\"https://{{NewsData.news_link[i]}}\">{{NewsData.news_text[i]}}</a>\r\n                            </p>\r\n                            <hr/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"card-outer-div\">\r\n        <h1 class=\"headingAi\">Coin History</h1>\r\n        <div class=\"card-div\">\r\n            <highcharts-chart class=\"custom-chart-styles\"\r\n                [Highcharts]=\"highcharts\"\r\n                [constructorType]=\"'stockChart'\"\r\n                [options]=\"coinHistory\">\r\n            </highcharts-chart>\r\n        </div>\r\n    </div>\r\n    <div class=\"card-outer-div\">\r\n        <h1 class=\"headingAi\">Coin Trends</h1>\r\n        <div class=\"card-div\">\r\n            <highcharts-chart class=\"custom-chart-styles\"\r\n                [Highcharts]=\"highcharts\"\r\n                [constructorType]=\"'stockChart'\"\r\n                [options]=\"coinTrends\">\r\n            </highcharts-chart>\r\n        </div>\r\n    </div>\r\n</div>","<div>\r\n  <!-- <div class=\"personal\">\r\n    <h1 class=\"personal_title\">Graph</h1>\r\n  </div> -->\r\n  <div class=\"sub-end-part\">\r\n    <!-- <div style=\"border-bottom: 2px solid grey;margin-bottom: 40px;\"></div> -->\r\n    <div style=\"margin-top: 5%;\">\r\n      <!-- <div class=\"row\" style=\"margin-top: 5%;\">\r\n        <div class=\"col-xl-4 col-lg-12 col-md-12 col-sm-12\">\r\n          <div class=\"box_lable\">\r\n            <br>\r\n            <span class=\"box\">{{ tokenLocked ? (tokenLocked | number: '1.0-0') : '-' }}</span>\r\n            <br>\r\n            <h4 class=\"label\">Token Locked in Liquidity</h4>\r\n            <br>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-xl-4 col-lg-12 col-md-12 col-sm-12\">\r\n          <div class=\"box_lable\">\r\n            <br>\r\n            <span class=\"box\">{{ tokenCirculating ? (tokenCirculating | number: '1.0-0') : '-' }}</span>\r\n            <br>\r\n            <h4 class=\"label\">Token Freely Circulating</h4>\r\n            <br>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-xl-4 col-lg-12 col-md-12 col-sm-12\">\r\n          <div class=\"box_lable\">\r\n            <br>\r\n            <span class=\"box\">{{ totalStakedToken ? (totalStakedToken | number: '1.0-0') : '-' }}</span>\r\n            <br>\r\n            <h4 class=\"label\">Total Staked</h4>\r\n            <br>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <br> -->\r\n      <div class=\"table_chart d-flex justify-content-center\">\r\n        <div class=\"left_table\" style=\"margin-top: 30px; border-collapse: collapse; \">\r\n          <table class=\"table table-dark\">\r\n            <tr>\r\n              <th class=\"tbl-description\">Token Data</th>\r\n              <th class=\"tbl-usd\">USD</th>\r\n            </tr>\r\n            <tr>\r\n              <td class=\"tbl-description\">Volume (24h)</td>\r\n              <td class=\"tbl-usd\">{{ priceData?.volume24hUSD ? (priceData?.volume24hUSD | number: '1.2-2') : '-' }}</td>\r\n            </tr>\r\n            <tr>\r\n              <td class=\"tbl-description\">Volume Change (24h)</td>\r\n              <td class=\"tbl-usd\">{{ priceData?.volumeChange24h ? (priceData?.volumeChange24h | number: '1.2-2') : '-' }}</td>\r\n            </tr>\r\n            <tr>\r\n              <td class=\"tbl-description\">Liquidity</td>\r\n              <td class=\"tbl-usd\">{{ priceData?.liquidityUSD ? (priceData?.liquidityUSD | number: '1.2-2') : '-' }}</td>\r\n            </tr>\r\n            <tr>\r\n              <td class=\"tbl-description\">Liquidity Change (24h)</td>\r\n              <td class=\"tbl-usd\">{{ priceData?.liquidityChange24h ? (priceData?.liquidityChange24h | number: '1.2-2') : '-' }}</td>\r\n            </tr>\r\n            <tr>\r\n              <td class=\"tbl-description\">Price USD</td>\r\n              <td class=\"tbl-usd\">{{ priceData?.priceUSD ? (priceData?.priceUSD | number: '1.5-5') : '-' }}</td>\r\n            </tr>\r\n            <tr>\r\n              <td class=\"tbl-description\">Price USD Change (24h)</td>\r\n              <td class=\"tbl-usd\">{{ priceData?.priceChange24h ? (priceData?.priceChange24h | number: '1.2-2') : '-' }}</td>\r\n            </tr>\r\n            <tr>\r\n              <td class=\"tbl-description\">Transaction (24h)</td>\r\n              <td class=\"tbl-usd\">{{ priceData?.txns24h ? (priceData?.txns24h | number: '1.2-2') : '-' }}</td>\r\n            </tr>\r\n            <tr>\r\n              <td class=\"tbl-description\">Transaction Change (24h)</td>\r\n              <td class=\"tbl-usd\">{{ priceData?.txns24hChange ? (priceData?.txns24hChange | number: '1.2-2') : '-' }}</td>\r\n            </tr>\r\n          </table>\r\n          <br> <br> <br>\r\n        </div>\r\n      </div>\r\n      <div *ngIf=\"tokenDayDatas\">\r\n        <div class=\"d-flex justify-content-center line-chart\">\r\n          <canvas baseChart [datasets]=\"lineChartData\" [labels]=\"lineChartLabels\" [options]=\"lineChartOptions\"\r\n            [colors]=\"lineChartColors\" chartType=\"line\" [plugins]=\"lineChartPlugins\">\r\n          </canvas>\r\n        </div>\r\n        <br> <br> <br>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  \r\n<div style=\" padding-top: 60px;\"></div>\r\n</div>\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { ChartDataSets } from 'chart.js';\r\nimport { Color, Label } from 'ng2-charts';\r\nimport { GraphTableData } from 'src/app/models/graph-table-data';\r\nimport { GraphDataService } from 'src/app/services/graph-data.service';\r\nimport { SharedService } from 'src/app/services/shared.service';\r\nimport { StakingTokenContractService } from 'src/app/services/staking-token-contract.service';\r\nimport { environment as env } from './../../../../environments/environment';\r\nimport { GriseTokenContractService } from './../../../services/grise-token-contract.service';\r\n\r\n@Component({\r\n  selector: 'app-token-data',\r\n  templateUrl: './token-data.component.html',\r\n  styleUrls: ['./token-data.component.scss']\r\n})\r\nexport class TokenDataComponent implements OnInit {\r\n\r\n  // tokenDayDataAddress = env.tokenDayDataAddress;\r\n  // marketCapPairAddress = env.marketCapPairAddress;\r\n\r\n  lineChartData: ChartDataSets[] = [];\r\n  lineChartLabels: Label[] = [];\r\n  lineChartOptions = {\r\n    scales: {\r\n      yAxes: [{ ticks: { fontColor: 'white' } }],\r\n      xAxes: [{ ticks: { fontColor: 'white' } }]\r\n    },\r\n    legend: { labels: { fontColor: 'white' }, data: { fontColor: 'white' } },\r\n    responsive: true,\r\n  };\r\n  lineChartColors: Color[] = [{ borderColor: 'white', backgroundColor: 'grey', borderWidth: 2 }];\r\n  lineChartPlugins = [];\r\n\r\n  priceData: any;\r\n  // ethPrice: number;\r\n  tokenDayDatas: any[];\r\n  // marketCapData: any;\r\n  // usdGraphTableData = new GraphTableData();\r\n  // ethGraphTableData = new GraphTableData();\r\n  // tokenLocked: number;\r\n  // tokenCirculating: number;\r\n  // totalStakedToken: number;\r\n  // totalGriseSupply: number;\r\n  // intervalId: any;\r\n  // initialDayPriceUSD: number;\r\n\r\n  constructor(private graphDataService: GraphDataService,\r\n    private sharedService: SharedService,\r\n    private stakingTokenContractService: StakingTokenContractService,\r\n    private griseTokenContractService: GriseTokenContractService) { }\r\n\r\n  ngOnInit(): void {\r\n    // this.getInitialDayData();\r\n    this.refreshData();\r\n    // this.setRefreshDataTimer();\r\n\r\n    // this.graphDataService.getTotalLiquidity(\"0x6b175474e89094c44da98b954eedeac495271d0f\").subscribe(data => {\r\n    //   console.log(data);\r\n    // });\r\n  }\r\n\r\n  refreshData() {\r\n    // this.griseTokenContractService.getTotalSupply().then(totalSupply => this.totalGriseSupply = totalSupply);\r\n    // this.stakingTokenContractService.getTotalStakedToken().then(stakedToken => this.totalStakedToken = stakedToken);\r\n    this.getTableData();\r\n    this.getChartData();\r\n  }\r\n\r\n  // setRefreshDataTimer() {\r\n  //   this.intervalId = setInterval(() => {\r\n  //     this.refreshData();\r\n  //   }, 30000);\r\n  // }\r\n\r\n  getTableData() {\r\n    this.graphDataService.getTableData().subscribe(priceData => {\r\n      this.priceData = priceData;\r\n    });\r\n  }\r\n\r\n  // getInitialDayData() {\r\n  //   const initialTimeStamp = env.initialTimeStamp;\r\n  //   this.graphDataService.getTokenInititalDayDatas(this.tokenDayDataAddress, initialTimeStamp).subscribe(initData => {\r\n  //     if (initData.data) {\r\n  //       this.initialDayPriceUSD = +initData.data.tokenDayDatas[0].priceUSD;\r\n  //     }\r\n  //   });\r\n  // }\r\n\r\n  getChartData() {\r\n    this.graphDataService.getGraphHistoryData().subscribe(chartData => {\r\n      if (chartData.data) {\r\n        this.tokenDayDatas = chartData.data;\r\n        const priceUSDList = this.tokenDayDatas.map(data => data.dailyVolumeUSD);\r\n        const dateList = this.tokenDayDatas.map(data => new Date(data.date * 1000).toDateString());\r\n\r\n        this.lineChartLabels = [];\r\n        this.lineChartData = [];\r\n        this.lineChartLabels.push(...dateList);\r\n        this.lineChartData.push({ data: priceUSDList, label: 'Volume USD' });\r\n      }\r\n    });    \r\n  }\r\n\r\n  // getMarketCapData() {\r\n  //   this.graphDataService.getMarketCapData(this.marketCapPairAddress).subscribe(marketData => {\r\n  //     if (marketData.data) {\r\n  //       this.marketCapData = marketData.data.pairs[0];\r\n  //       this.calcUSDTableData();\r\n  //     }\r\n  //   });\r\n  // }\r\n\r\n  // calcUSDTableData() {\r\n  //   if (this.tokenDayDatas != undefined && this.marketCapData != undefined) {\r\n  //     this.usdGraphTableData.initialPrice = this.initialDayPriceUSD;\r\n  //     this.usdGraphTableData.currentPrice = +this.tokenDayDatas[this.tokenDayDatas.length - 1].priceUSD;\r\n  //     this.usdGraphTableData.roiOnInitalPrice = (this.usdGraphTableData.currentPrice - this.usdGraphTableData.initialPrice) / this.usdGraphTableData.initialPrice;\r\n  //     this.usdGraphTableData.factorOnInitialPrice = this.usdGraphTableData.currentPrice / this.usdGraphTableData.initialPrice;\r\n\r\n  //     this.tokenLocked = +this.marketCapData.reserve0;\r\n  //     this.tokenCirculating = Math.abs(this.totalGriseSupply - this.tokenLocked);\r\n\r\n  //     this.usdGraphTableData.totalMarketCap = (this.tokenLocked + this.tokenCirculating + this.totalStakedToken) * this.usdGraphTableData.currentPrice;\r\n  //     this.usdGraphTableData.circulatingSupply = (this.tokenCirculating + this.totalStakedToken) * this.usdGraphTableData.currentPrice;\r\n  //     this.calcETHTableData();\r\n  //   }\r\n  // }\r\n\r\n  // calcETHTableData() {\r\n  //   if (this.usdGraphTableData) {\r\n  //     this.ethGraphTableData.initialPrice = this.usdGraphTableData.initialPrice / this.ethPrice;\r\n  //     this.ethGraphTableData.currentPrice = this.usdGraphTableData.currentPrice / this.ethPrice;\r\n  //     this.ethGraphTableData.roiOnInitalPrice = (this.ethGraphTableData.currentPrice - this.ethGraphTableData.initialPrice) / this.ethGraphTableData.initialPrice;\r\n  //     this.ethGraphTableData.factorOnInitialPrice = this.ethGraphTableData.currentPrice / this.ethGraphTableData.initialPrice;\r\n  //     this.ethGraphTableData.totalMarketCap = this.usdGraphTableData.totalMarketCap / this.ethPrice;\r\n  //     this.ethGraphTableData.circulatingSupply = this.usdGraphTableData.circulatingSupply / this.ethPrice;\r\n  //   }\r\n  // }\r\n\r\n  // ngOnDestroy() {\r\n  //   clearInterval(this.intervalId);\r\n  // }\r\n}\r\n","<div class=\"container-fluid bg-color\">\r\n  <div class=\"row content\">\r\n     <!-- <div class=\"col-lg-3 tokeninfo-first\">\r\n        <div class=\"left-scroll\">\r\n           <div style=\"display: grid; justify-content: center\">\r\n              <button\r\n                 type=\"button\"\r\n                 class=\"btn btn-primary tab-button\"\r\n                 (click)=\"allNFTs()\"\r\n                 [ngClass]=\"{'active-tab': this.filterNFTGroups === this.allNFTGroups}\"\r\n                 >\r\n              All NFTs\r\n              </button>\r\n              <button\r\n                 type=\"button\"\r\n                 class=\"btn btn-primary tab-button\"\r\n                 (click)=\"mythicNFTs()\"\r\n                 [ngClass]=\"{'active-tab': this.filterNFTGroups === this.mythicNFTsGroup}\"\r\n                 >\r\n              Mythic\r\n              </button>\r\n              <button\r\n                 type=\"button\"\r\n                 class=\"btn btn-primary tab-button\"\r\n                 (click)=\"rareNFTs()\"\r\n                 [ngClass]=\"{'active-tab': this.filterNFTGroups === this.rareNFTsGroup}\"\r\n                 >\r\n              Rare\r\n              </button>\r\n              <button\r\n                 type=\"button\"\r\n                 class=\"btn btn-primary tab-button\"\r\n                 (click)=\"legendaryNFTs()\"\r\n                 [ngClass]=\"{'active-tab': this.filterNFTGroups === this.legendaryNFTsGroup}\"\r\n                 >\r\n              Legendary\r\n              </button>\r\n              <button\r\n                 type=\"button\"\r\n                 class=\"btn btn-primary tab-button\"\r\n                 (click)=\"commonNFTs()\"\r\n                 [ngClass]=\"{'active-tab': this.filterNFTGroups === this.commonNFTsGroup}\"\r\n                 >\r\n              Common\r\n              </button>\r\n              <button\r\n                 type=\"button\"\r\n                 class=\"btn btn-primary tab-button\"\r\n                 (click)=\"mergerButtonsShow()\"\r\n                 [ngClass]=\"{'active-tab': this.mergerButtons === true}\"\r\n                 >\r\n              Merge\r\n              </button>\r\n              <button \r\n                 class=\"btn btn-primary tab-button black-bg\"\r\n                 (click)=\"incubationShow()\"\r\n                 [ngClass]=\"{'active-tab': this.incubationText === true}\"\r\n                 >\r\n              Incubation\r\n              </button>\r\n           </div>\r\n           <div class=\"m-0 p-0\" style=\"overflow: hidden;\">\r\n              <h3>Documentation</h3>\r\n              <div class=\"row justify-content-center img-responsive-setting\">\r\n                 <div  class=\"col-md-4 col-lg-6\">\r\n                    <span >\r\n                       <h5>GRSE NFT Mechanics </h5>\r\n                       <a  href=\"https://bnb-grise-assests.s3.us-west-2.amazonaws.com/assets/GRSE NFT Mechanics (3).pdf\" target=\"_blank\">\r\n                       <img src=\"https://bnb-grise-assests.s3.us-west-2.amazonaws.com/assets/GRSE NFT Mechanics.jpeg\"  class=\"img-responsive\" style=\"border-radius: 10px;\"></a>\r\n                    </span>\r\n                 </div>\r\n                 <div  class=\"col-md-4 col-lg-6\">\r\n                    <span >\r\n                       <h5 > Acquire GRISE NFT</h5>\r\n                       <a  href=\"../../..//assets/How-To-Acquire-GRSE-NFTs-November-2021.pdf\" target=\"_blank\"><img src=\"../../../assets/How_To_Acquire_GRISE_NFT.png\" class=\"img-responsive\" style=\"border-radius: 10px;\"></a>\r\n                    </span>\r\n                 </div>\r\n              </div>\r\n           </div>\r\n        </div>\r\n     </div> -->\r\n     <div class=\"col-lg-12 col-md-12 tokeninfo-second\" *ngIf=\"AllNftShow\">\r\n        <div class=\"scrollable-title-container\">\r\n           <label class=\"scrollable-title\">NFT Market Place</label>\r\n           <div class=\"feesbtn d-flex flex-column\">\r\n            <!-- <a href=\"javascript:void(0)\"\r\n            data-toggle=\"modal\"\r\n            data-target=\"#exampleModalFees\" class=\"tab-button btn btn-primary border-0 mb-0 mt-0\">Fees & Commision</a> -->\r\n            <a href=\"/adminpanel\" class=\"tab-button btn btn-primary border-0\" *ngIf=\"fundsbtn\">Withdraw Funds</a>\r\n            <a href=\"javascript:void(0)\" class=\"tab-button btn btn-primary border-0\" (click)=\"batchMinting()\" *ngIf=\"remainingNftsClaimBtn\">Claim Remaining NFTs</a>\r\n           </div>\r\n        </div>\r\n        <div class=\"nft-container\">\r\n           <!-- <div class=\"empty-list\">\r\n            <img src=\"/assets/empty-bids.svg\"/>\r\n            <p>No assets yet</p>\r\n           </div> -->\r\n           <div *ngFor=\"let nftGroup of filterNFTGroups\">\r\n              <div class=\"heading\">\r\n                 <h1 class=\"heading-text\">{{ nftGroup.contentHeader }}</h1>\r\n                 <div class=\"line-splitter\"></div>\r\n              </div>\r\n              <div class=\"row\">\r\n                 <div class=\"empty-list\" *ngIf=\"nftGroup.contentData.length === 0\">\r\n            <img src=\"/assets/empty-bids.svg\"/>\r\n            <p>No assets yet</p>\r\n           </div>\r\n\r\n                  \r\n                 <div\r\n                 *ngFor=\"let nftContent of nftGroup.contentData\"\r\n                 class=\"col-xl-5 col-lg-6 col-md-6 col-sm-6 col-xs-12 d-flex mx-auto\"\r\n                 [ngClass]=\"{ 'single-center col-xl-9 col-lg-12 col-md-12 col-sm-12': nftGroup.contentGroup == 1 }\"\r\n                 \r\n                 \r\n                 >\r\n                 <div class=\"tab flex-column align-items-center\">\r\n                    <img\r\n                    *ngIf=\"nftContent.contentType == 1\"\r\n                    class=\"img-responsive nft-img\"\r\n                    [src]=\"nftContent.contentPath\"\r\n                    alt=\"NFTs\"\r\n                    (click)=\"redirectlandingPage(nftContent.nftObj)\"\r\n                    />\r\n                    <video\r\n                       *ngIf=\"nftContent.contentType == 2\"\r\n                       style=\"width: 100%; height: inherit\"\r\n                       autoplay\r\n                       muted\r\n                       loop\r\n                       >\r\n                       <source [src]=\"nftContent.contentPath\" type=\"video/mp4\" />\r\n                    </video>\r\n                    <img\r\n                    *ngIf=\"nftContent.contentType == 3\"\r\n                    class=\"img-responsive nft-gif\"\r\n                    [src]=\"nftContent.contentPath\"\r\n                    alt=\"NFTs\"\r\n                    (click)=\"redirectlandingPage(nftContent.nftObj)\"\r\n                    />\r\n                    <!-- <div class=\"d-flex justify-content-between align-items-center nftcolumn\">\r\n                    \r\n                    <a\r\n                   \r\n                    class=\"btn btn-primary tab-button border-0 position-relative\"\r\n                    *ngIf=\"nftContent.nftObj.quantity > 0\"\r\n                    (click)=\"handleMintNft(nftContent.nftObj, 'mint')\"\r\n                    [ngClass]=\"{'custumspinner' : disablebtn && btnid === nftContent.nftObj._id}\"\r\n                    >\r\n                    Mint\r\n                    </a>\r\n\r\n                    <span *ngIf=\"nftContent.nftObj.quantity > 0\">{{ nftContent.nftObj.amount }} ADA + fee</span>\r\n                    \r\n                    </div> -->\r\n                    <!-- <div class=\"d-flex justify-content-between align-items-center nftcolumn2\">\r\n                     <a\r\n                   href=\"javascript:void(0)\"\r\n                   class=\"btn btn-primary tab-button border-0 position-relative\"\r\n                   *ngIf=\"(nftContent.nftObj.userNftData && nftContent.nftObj.userNftData.status) === 'list'\"\r\n                   (click)=\"handleMintNft(nftContent.nftObj, 'buy')\"\r\n                   [attr.data-target] = \"custumid\"\r\n                   data-toggle=\"modal\"\r\n                   [ngClass]=\"{'custumspinner' : buydiable && buyid === nftContent.nftObj.userNftData.userNftId}\"\r\n                   >\r\n                   Buy Secondary\r\n                   </a>\r\n                   <p class=\"mb-0\" *ngIf=\"(nftContent.nftObj.userNftData && nftContent.nftObj.userNftData.status) === 'list'\">Lowest Price: {{ nftContent.nftObj.userNftData.amount }}</p>\r\n                   \r\n                   </div> -->\r\n                    <!-- [ngClass]=\"{ 'disabled': nftContent.nftObj.status == 'pending' }\" -->\r\n                    <a\r\n                    (click)=\"redirectform(nftContent.nftObj)\"\r\n                    href=\"javascript:void(0)\"\r\n                    class=\"btn btn-primary tab-button border-0\"\r\n                    *ngIf=\"showsell\"\r\n                    >\r\n                    Sell\r\n                    </a>\r\n                 </div>\r\n              </div>\r\n            \r\n           </div>\r\n        </div>\r\n        \r\n    </div>\r\n    <!-- <div class=\"row\" *ngIf=\"keynfthide\">\r\n      \r\n      <div class=\"col-md-12\">\r\n         <div class=\"tab tab--keyNft flex-column align-items-center\" style=\"min-height: 20px;\">\r\n            \r\n            \r\n            <img src=\"../../../assets/key.gif\" height=\"309px\"/>\r\n            <div class=\"d-flex justify-content-between align-items-center nftcolumn\">\r\n             <a\r\n           href=\"javascript:void(0)\"\r\n           \r\n           class=\"btn btn-primary tab-button border-0 notallowed\"\r\n                    disabled\r\n           >\r\n           Mint\r\n           </a>\r\n           <span>300 ADA + fee</span>\r\n           </div>\r\n           <div class=\"d-flex justify-content-between align-items-center nftcolumn2\">\r\n            <a\r\n          href=\"javascript:void(0)\"\r\n          class=\"btn btn-primary tab-button border-0\"\r\n          *ngIf=\"(keyitem.userNftData && keyitem.userNftData.status) === 'list'\"\r\n          (click)=\"handleMintNft(keyitem, 'buy')\"\r\n          >\r\n          Buy Secondary\r\n          </a>\r\n          <a\r\n          href=\"javascript:void(0)\"\r\n          class=\"btn btn-primary tab-button border-0\"\r\n          *ngIf=\"(keyitem.userNftData && keyitem.userNftData.status) === 'list'\"\r\n          (click)=\"handleMintNft(keyitem, 'buy')\"\r\n          [attr.data-target] = \"custumid\"\r\n          data-toggle=\"modal\"\r\n          >\r\n          Lowest Price: {{ keyitem.userNftData.amount }}\r\n          </a>\r\n          </div>\r\n            \r\n         </div>\r\n      </div>\r\n   </div> -->\r\n    <div class=\"row d-none\" *ngIf=\"keynfthide && keyitem && keyitem._id\">\r\n      \r\n      <div class=\"col-md-12\">\r\n         <div class=\"tab tab--keyNft flex-column align-items-center\" style=\"min-height: 20px;\">\r\n            \r\n            <!-- <img [src]=\"keyitem.src\" height=\"309px\"/> -->\r\n            <img src=\"../../../assets/key/GRISEKEY2021.gif\" height=\"309px\"/>\r\n            <!-- <div class=\"d-flex justify-content-between align-items-center nftcolumn\">\r\n             <a\r\n           href=\"javascript:void(0)\"\r\n           class=\"btn btn-primary tab-button border-0\"\r\n           (click)=\"handleMintNft(keyitem, 'mint')\"\r\n           [attr.data-target] = \"custumid\"\r\n           data-toggle=\"modal\"\r\n           *ngIf=\"keyitem.quantity > 0\"\r\n           >\r\n           Mint\r\n           </a>\r\n           <span *ngIf=\"keyitem.quantity > 0\" >{{ (keyitem && keyitem.amount) ? keyitem.amount : 'N/A' }} ADA + fee</span>\r\n           </div> -->\r\n           <!-- <div class=\"d-flex justify-content-between align-items-center nftcolumn2\">\r\n            <a\r\n          href=\"javascript:void(0)\"\r\n          class=\"btn btn-primary tab-button border-0\"\r\n          *ngIf=\"(keyitem && keyitem.userNftData && keyitem.userNftData.status) === 'list'\"\r\n          (click)=\"handleMintNft(keyitem, 'buy')\"\r\n          >\r\n          Buy Secondary\r\n          </a> -->\r\n          <!-- <a\r\n          href=\"javascript:void(0)\"\r\n          class=\"btn btn-primary tab-button border-0\"\r\n          *ngIf=\"(keyitem && keyitem.userNftData && keyitem.userNftData.status) === 'list'\"\r\n          (click)=\"handleMintNft(keyitem, 'buy')\"\r\n          [attr.data-target] = \"custumid\"\r\n          data-toggle=\"modal\"\r\n          >\r\n          Lowest Price: {{ (keyitem && keyitem.userNftData && keyitem.userNftData.amount) ? keyitem.userNftData.amount : 'N/A' }}\r\n          </a> -->\r\n          <!-- <p *ngIf=\"(keyitem && keyitem.userNftData && keyitem.userNftData.status) === 'list'\">Lowest Price: {{ (keyitem && keyitem.userNftData && keyitem.userNftData.amount) ? keyitem.userNftData.amount : 'N/A' }}</p>\r\n          </div> -->\r\n            \r\n         </div>\r\n      </div>\r\n   </div>\r\n    \r\n</div>\r\n<div class=\"col-lg-9 col-md-12 tokeninfo-second\" *ngIf=\"mergerButtons\">\r\n  <div class=\"nft-container\">\r\n     <div class=\"heading\">\r\n        <h1 class=\"heading-text\">Merger Show</h1>\r\n        <div class=\"line-splitter\"></div>\r\n     </div>\r\n     <div class=\"col-md-12 col-sm-12 col-xs-12\">\r\n        <div class=\"mergernewsection\">\r\n           <button\r\n              class=\"btn btn-primary tab-button\"\r\n              data-toggle=\"modal\"\r\n              data-target=\"#exampleModal\"\r\n              >\r\n           Common Merger\r\n           </button>\r\n           <button class=\"btn btn-primary tab-button\">Mythic Merger</button>\r\n           <button class=\"btn btn-primary tab-button\">Legendary Merger</button>\r\n           <button class=\"btn btn-primary tab-button\">Mythic Merger</button>\r\n        </div>\r\n     </div>\r\n  </div>\r\n</div>\r\n<div class=\"col-lg-9 col-md-12 tokeninfo-second\" *ngIf=\"incubationText\">\r\n  <div class=\"scrollable-title-container\">\r\n     <!-- <img style=\"width: 250px\" src=\"../../../assets/logo.png\"> -->\r\n     <!-- <i class=\"fas fa-coins\"></i> -->\r\n     <label class=\"scrollable-title\"\r\n        >NFT Market Place</label\r\n        >\r\n  </div>\r\n  <div class=\"nft-container\">\r\n     <div class=\"heading\">\r\n        <h1 class=\"heading-text\">Incubation</h1>\r\n        <div class=\"line-splitter\"></div>\r\n     </div>\r\n     <div class=\"col-md-12 col-sm-12 col-xs-12\">\r\n        <h1>You have no current incubations</h1>\r\n        <h1>14 days left Common Merger incubations</h1>\r\n        <h1>14 days left Mythic Merger incubations</h1>\r\n        <h1>14 days left Legendary Merger incubations</h1>\r\n        <h1>14 days left Mythic Merger incubations</h1>\r\n     </div>\r\n  </div>\r\n</div>\r\n</div>\r\n<!-- conformation modal -->\r\n<div\r\n  class=\"modal fade mintmodal\"\r\n  id=\"exampleModaltwo\"\r\n  tabindex=\"-1\"\r\n  role=\"dialog\"\r\n  aria-labelledby=\"exampleModaltwo\"\r\n  aria-hidden=\"true\"\r\n  \r\n  >\r\n  <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n     <div class=\"modal-content\">\r\n        <div class=\"modal-header border-0\">\r\n           <h3 class=\"modal-title mb-0\">\r\n            Are you sure you want to {{ action === 'mint' ? 'mint' : 'buy'}} <b>({{ action === 'mint' ? mintNftObj.assetName : buyNftObj.assetName }}) NFT ?</b>\r\n           </h3>\r\n           \r\n        </div>\r\n        <div class=\"modal-footer\">\r\n           <button\r\n              type=\"button\"\r\n              class=\"tab-button\"\r\n              data-dismiss=\"modal\"\r\n              aria-label=\"Close\"\r\n              (click)=\"resetMintNftObj()\"\r\n              >\r\n           Cancel\r\n           </button>\r\n           <button\r\n              type=\"button\"\r\n              class=\"tab-button\"\r\n              (click)=\"action === 'mint' ? clickMint() : clickBuy()\"\r\n              data-dismiss=\"modal\"\r\n              aria-label=\"Close\"\r\n              >\r\n           Confirm\r\n           </button>\r\n        </div>\r\n     </div>\r\n  </div>\r\n</div>\r\n<!-- when not login show modal -->\r\n<div\r\n  class=\"modal fade mintmodal\"\r\n  id=\"exampleModalnotlogin\"\r\n  tabindex=\"-1\"\r\n  role=\"dialog\"\r\n  aria-labelledby=\"exampleModalnotlogin\"\r\n  aria-hidden=\"true\"\r\n  >\r\n  <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n     <div class=\"modal-content\">\r\n        <div class=\"modal-body\">\r\n           <p>Wallet is not connected</p>\r\n           <button\r\n              type=\"button\"\r\n              class=\"tab-button btn text-white\"\r\n              data-dismiss=\"modal\"\r\n              aria-label=\"Close\"\r\n              (click)=\"resetMintNftObj()\"\r\n              >\r\n           Ok\r\n           </button>\r\n        </div>\r\n     </div>\r\n  </div>\r\n</div>\r\n</div>\r\n<!-- Modal -->\r\n<div\r\n  class=\"modal fade\"\r\n  id=\"exampleModal\"\r\n  tabindex=\"-1\"\r\n  role=\"dialog\"\r\n  aria-labelledby=\"exampleModalLongTitle\"\r\n  aria-hidden=\"true\"\r\n  >\r\n  <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n     <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n           <h5 class=\"modal-title mb-0\" *ngIf=\"firstBox\">\r\n              Following NFTs are being incubated for this merge\r\n           </h5>\r\n           <h5 class=\"modal-title mb-0\" *ngIf=\"nextBox\">\r\n              You'll get these NFTs after the merge is complete\r\n           </h5>\r\n           <h5 class=\"modal-title mb-0\" *ngIf=\"resultBox\">\r\n              Your NFTs have been incubated, you'll get your new NFTs in\r\n           </h5>\r\n           <button\r\n              type=\"button\"\r\n              class=\"close\"\r\n              data-dismiss=\"modal\"\r\n              aria-label=\"Close\"\r\n              >\r\n           <span aria-hidden=\"true\">&times;</span>\r\n           </button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n           <div class=\"modal-body-inner d-flex\" *ngIf=\"firstBox\">\r\n              <div class=\"modal-body-img-box\">\r\n                 \r\n                 <img src=\"../../../assets/cross.png\">\r\n              </div>\r\n              <div class=\"modal-body-img-box\">\r\n                 \r\n                 <img src=\"../../../assets/cross.png\">\r\n              </div>\r\n              <div class=\"modal-body-img-box\">\r\n                \r\n                 <img src=\"../../../assets/cross.png\">\r\n              </div>\r\n              <div class=\"modal-body-img-box\">\r\n           \r\n                 <img src=\"../../../assets/cross.png\">\r\n              </div>\r\n              <div class=\"modal-body-img-box\">\r\n                \r\n                 <img src=\"../../../assets/cross.png\">\r\n              </div>\r\n              <div class=\"modal-body-img-box\">\r\n                 <img src=\"../../../assets/cross.png\">\r\n              </div>\r\n              <div class=\"modal-body-img-box\">\r\n                 <img src=\"../../../assets/cross.png\">\r\n              </div>\r\n              <div class=\"modal-body-img-box\">\r\n                 <img src=\"../../../assets/cross.png\">\r\n              </div>\r\n              <div class=\"modal-body-img-box\">\r\n                 <img src=\"../../../assets/cross.png\">\r\n              </div>\r\n           </div>\r\n           <div class=\"modal-body-inner d-flex\" *ngIf=\"nextBox\">\r\n              <div class=\"modal-body-img-box\">\r\n                 <img src=\"../../../assets/cross.png\">\r\n              </div>\r\n              <div class=\"modal-body-img-box\">\r\n                 <img src=\"../../../assets/cross.png\">\r\n              </div>\r\n              <div class=\"modal-body-img-box\">\r\n                 <img src=\"../../../assets/cross.png\">\r\n              </div>\r\n              <div class=\"modal-body-img-box\">\r\n                 <img src=\"../../../assets/cross.png\">\r\n              </div>\r\n              <div class=\"modal-body-img-box\">\r\n                 <img src=\"../../../assets/cross.png\">\r\n              </div>\r\n              <div class=\"modal-body-img-box\">\r\n                 <img src=\"../../../assets/cross.png\">\r\n              </div>\r\n              <div class=\"modal-body-img-box\">\r\n                 <img src=\"../../../assets/cross.png\">\r\n              </div>\r\n           </div>\r\n           <div class=\"successBox\" *ngIf=\"resultBox\">\r\n              <h2>14 days Left</h2>\r\n           </div>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n           <button\r\n           type=\"button\"\r\n           class=\"tab-button\"\r\n           *ngIf=\"firstBox\"\r\n           (click)=\"nextImagesBox()\"\r\n           >\r\n           Next\r\n           </button>\r\n           <button\r\n           type=\"button\"\r\n           class=\"tab-button\"\r\n           *ngIf=\"nextBox\"\r\n           (click)=\"nextResultBox()\"\r\n           >\r\n           Submit\r\n           </button>\r\n        </div>\r\n     </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n<!-- Fees modal -->\r\n<div\r\n  class=\"modal fade\"\r\n  id=\"exampleModalFees\"\r\n  tabindex=\"-1\"\r\n  role=\"dialog\"\r\n  aria-labelledby=\"exampleModalLongTitle\"\r\n  aria-hidden=\"true\"\r\n  >\r\n  <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n     <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n           <h3 class=\"modal-title mb-0 text-center\">\r\n            Fees & Commision\r\n           </h3>\r\n           <button\r\n              type=\"button\"\r\n              class=\"close\"\r\n              data-dismiss=\"modal\"\r\n              aria-label=\"Close\"\r\n              >\r\n           <span aria-hidden=\"true\">&times;</span>\r\n           </button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n           <div class=\"modal-body-inner d-flex\">\r\n              <ol>\r\n              <li>There is a minimal network ‘dust’ fee to link each wallet to your account, none of which is retained by <a href=\"https://grisemetamoonverse.io/.\">https://grisemetamoonverse.io/.</a></li>\r\n               <li>There will be no cost to create an account or ongoing membership fee.</li>\r\n               <li>We charge 1.77% commission (min 1 ADA) on each successful NFT sale. This will be deducted from the sellers ADA amount.</li>\r\n               <li>In addition there are Cardano network transaction fees, which will vary over time, none of which are retained by <a href=\"https://grisemetamoonverse.io/.\">https://grisemetamoonverse.io/.</a>. These fees will also be deduced from the sellers ADA amount.</li>\r\n               <li>For any abortive transactions for any reason the seller will receive their ADA back minus the network TX fee. It is simply not possible to avoid this fee.</li>\r\n               <li>Part Of the transactional proceeding will be shared with Mythic NFT holders.</li>\r\n            </ol>\r\n            </div>\r\n           \r\n        </div>\r\n        <div class=\"modal-footer justify-content-center\">\r\n           <button\r\n           type=\"button\"\r\n           class=\"tab-button\"\r\n           data-dismiss=\"modal\"\r\n              aria-label=\"Close\"\r\n           >\r\n           OK\r\n           </button>\r\n        </div>\r\n     </div>\r\n  </div>\r\n</div>","import { Component, OnInit } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { NFTContentType } from \"src/app/models/nft-content-data\";\r\nimport {\r\n  NFTContentGroup,\r\n  NFTContentGroupData,\r\n  NftObjData,\r\n  BuyNftObjData\r\n} from \"src/app/models/nft-content-group-data\";\r\nimport { NFTsAPIServices } from \"../../services/nft.service\";\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { SpinnerService } from '../../helper/spinner/spinner.service';\r\nimport { environment as env } from '../../../environments/environment';\r\nimport Loader from '../../services/nami-loader.service';\r\nimport MintLoader from '../../services/nami-minting-243.service';\r\nimport { attr } from \"highcharts\";\r\ndeclare var $: any;\r\n@Component({\r\n  selector: \"app-nft\",\r\n  templateUrl: \"./nft.component.html\",\r\n  styleUrls: [\"./nft.component.scss\"],\r\n})\r\nexport class NFTComponent implements OnInit {\r\n  adminNamiWalletAddress = env.adminNamiWalletAddress;\r\n  ADMIN_ROYALITY = env.ADMIN_ROYALITY;\r\n  ASSET_TRANSFER_PRICE = env.ASSET_TRANSFER_PRICE;\r\n\r\n  [x: string]: any;\r\n  allNFTGroups: NFTContentGroupData[] = [];\r\n  // allMyNFTGroups: NFTContentGroupData[] = [];\r\n  mythicNFTsGroup: NFTContentGroupData[] = [];\r\n  rareNFTsGroup: NFTContentGroupData[] = [];\r\n  legendaryNFTsGroup: NFTContentGroupData[] = [];\r\n  commonNFTsGroup: NFTContentGroupData[] = [];\r\n  filterNFTGroups: NFTContentGroupData[] = [];\r\n  isOpen: boolean = false;\r\n\r\n\r\n\r\n\r\n  constructor(\r\n    private readonly APIServices: NFTsAPIServices,\r\n    private readonly router: Router,\r\n    private toastr: ToastrService,\r\n    private spinnerService: SpinnerService\r\n  ) { }\r\n\r\n  nextBox: boolean = false;\r\n  firstBox: boolean = true;\r\n  resultBox: boolean = false;\r\n  mergerButtons: boolean = false;\r\n  AllNftShow: boolean = true;\r\n  incubationText: boolean = false;\r\n  showsell: boolean = false;\r\n  mintHide: boolean = true;\r\n  myNftsshow: boolean = false;\r\n  action: any = '';\r\n  namiwallet: any = \"\";\r\n  custumid: any = \"\";\r\n  loading: boolean = false;\r\n  keyitem: any = {\r\n    src: '',\r\n    amount: ''\r\n  };\r\n  active: any = false;\r\n  keynfthide: boolean = false;\r\n  mintNftObj: NftObjData = {\r\n    _id: 'N/A',\r\n    assetName: 'N/A',\r\n    amount: 'N/A',\r\n    availableForSale: false,\r\n    owned_by: 'N/A',\r\n    quantity: 'N/A',\r\n    userNftId: 'N/A',\r\n    ownerAddr: 'ADMIN',\r\n    metadata: '',\r\n    assetKey: '',\r\n    imageUrl: '',\r\n    imageLink: ''\r\n  };\r\n  buyNftObj: BuyNftObjData = {\r\n    _id: 'N/A',\r\n    assetName: 'N/A',\r\n    // amount: 'N/A',\r\n    // availableForSale: false,\r\n    // owned_by: 'N/A',\r\n    // quantity: 'N/A',\r\n    // userNftId: 'N/A',\r\n    // ownerAddr: 'ADMIN',\r\n    userNftData: {\r\n      _id: '',\r\n      amount: 0,\r\n      userNftId: '',\r\n      userId: ''\r\n    }\r\n  };\r\n  isVerifiedWallet: any = false;\r\n  authUser: any = null;\r\n  disablebtn: any = false;\r\n  buydiable: any = false;\r\n  btnid = \"\";\r\n  buyid = \"\";\r\n  fundsbtn: boolean = false;\r\n  remainingNftsClaimBtn: boolean = false;\r\n  async ngOnInit() {\r\n    // if (!localStorage.getItem(\"mintMsg\")) {\r\n    //   this.toastr.info(\"Minting is now live\");\r\n    //   localStorage.setItem(\"mintMsg\", \"true\");\r\n    // }\r\n    this.namiwallet = await Loader.CardanoWalletAddress(); //localStorage.getItem(\"walletAddr\");\r\n    // console.log(this.namiwallet, \" <= this.namiwallet\")\r\n\r\n    this.initNFTContents();\r\n    // this.initMyNFTContents();\r\n    this.allNFTs();\r\n\r\n    // const userApiResp: any = await new Promise(async (resolve, reject) => {\r\n    //   const regUser = await this.APIServices.userRegister({\r\n    //     walletAddr: this.namiwallet,\r\n    //     // name: \"test\",\r\n    //   });\r\n    //   resolve(regUser)\r\n    // });\r\n    // if (userApiResp.status) {\r\n\r\n      this.APIServices.userLoginData$.subscribe((data) => {\r\n        console.log(data, 'Home component');\r\n        this.authUser = data;\r\n      })\r\n\r\n      // localStorage.setItem(\"token\", userApiResp.token);\r\n      // this.authUser = userApiResp.data.type;\r\n      // console.log(this.authUser, \"admin12345\")\r\n\r\n      this.fundsbtn = false;\r\n      this.remainingNftsClaimBtn = false;\r\n      if (this.authUser === 'admin') {\r\n        this.fundsbtn = true;\r\n      } else if (this.authUser === 'dev') {\r\n        this.remainingNftsClaimBtn = true;\r\n      }\r\n    // }\r\n  }\r\n\r\n  batchMinting = async () => {\r\n    if (!localStorage.getItem(\"batchMintScriptAddr\")) {\r\n      console.log(\"Address not found\");\r\n      return;\r\n    }\r\n    const MintNami = await MintLoader.Cardano();\r\n    const newPolicy = await MintLoader.createPolicy();\r\n    console.log(\"newPolicy \", JSON.stringify(newPolicy));\r\n\r\n    // const newPolicy = {\r\n    //   \"id\": \"f350de8ed1aa53522044ec6f74dee43c9a56b3a81aff32616352679f\",\r\n    //   \"script\": \"8201828200581c21b056ce32f9b7ce600eb736ed0d4ccb8a3ff4ff7c76dca11c34f14c82051a033cf43b\",\r\n    //   \"paymentKeyHash\": \"21b056ce32f9b7ce600eb736ed0d4ccb8a3ff4ff7c76dca11c34f14c\",\r\n    //   \"ttl\": 54326331\r\n    // }\r\n\r\n    // 3. Create POLICY_ID\r\n    const POLICY_ID = newPolicy.id;\r\n    const POLICY_SCRIPT = newPolicy.script;\r\n\r\n    const mintedAssets = [\r\n      {\r\n        \"assetName\": \"GRISEC12021\",\r\n        \"quantity\": \"28\",\r\n        \"policyId\": POLICY_ID,\r\n        \"policyScript\": POLICY_SCRIPT\r\n      },\r\n      {\r\n        \"assetName\": \"GRISEC22021\",\r\n        \"quantity\": \"28\",\r\n        \"policyId\": POLICY_ID,\r\n        \"policyScript\": POLICY_SCRIPT\r\n      },\r\n      {\r\n        \"assetName\": \"GRISEC32021\",\r\n        \"quantity\": \"28\",\r\n        \"policyId\": POLICY_ID,\r\n        \"policyScript\": POLICY_SCRIPT\r\n      },\r\n      {\r\n        \"assetName\": \"GRISEC42021\",\r\n        \"quantity\": \"28\",\r\n        \"policyId\": POLICY_ID,\r\n        \"policyScript\": POLICY_SCRIPT\r\n      },\r\n      {\r\n        \"assetName\": \"GRISEC52021\",\r\n        \"quantity\": \"28\",\r\n        \"policyId\": POLICY_ID,\r\n        \"policyScript\": POLICY_SCRIPT\r\n      },\r\n      {\r\n        \"assetName\": \"GRISEC62021\",\r\n        \"quantity\": \"28\",\r\n        \"policyId\": POLICY_ID,\r\n        \"policyScript\": POLICY_SCRIPT\r\n      },\r\n      {\r\n        \"assetName\": \"GRISEC72021\",\r\n        \"quantity\": \"27\",\r\n        \"policyId\": POLICY_ID,\r\n        \"policyScript\": POLICY_SCRIPT\r\n      },\r\n      {\r\n        \"assetName\": \"GRISEC82021\",\r\n        \"quantity\": \"27\",\r\n        \"policyId\": POLICY_ID,\r\n        \"policyScript\": POLICY_SCRIPT\r\n      },\r\n      {\r\n        \"assetName\": \"GRISER12021\",\r\n        \"quantity\": \"18\",\r\n        \"policyId\": POLICY_ID,\r\n        \"policyScript\": POLICY_SCRIPT\r\n      },\r\n      {\r\n        \"assetName\": \"GRISER22021\",\r\n        \"quantity\": \"18\",\r\n        \"policyId\": POLICY_ID,\r\n        \"policyScript\": POLICY_SCRIPT\r\n      },\r\n      {\r\n        \"assetName\": \"GRISER32021\",\r\n        \"quantity\": \"18\",\r\n        \"policyId\": POLICY_ID,\r\n        \"policyScript\": POLICY_SCRIPT\r\n      },\r\n      {\r\n        \"assetName\": \"GRISER42021\",\r\n        \"quantity\": \"18\",\r\n        \"policyId\": POLICY_ID,\r\n        \"policyScript\": POLICY_SCRIPT\r\n      },\r\n      {\r\n        \"assetName\": \"GRISER52021\",\r\n        \"quantity\": \"19\",\r\n        \"policyId\": POLICY_ID,\r\n        \"policyScript\": POLICY_SCRIPT\r\n      },\r\n      {\r\n        \"assetName\": \"GRISER62021\",\r\n        \"quantity\": \"19\",\r\n        \"policyId\": POLICY_ID,\r\n        \"policyScript\": POLICY_SCRIPT\r\n      },\r\n      {\r\n        \"assetName\": \"GRISEL12021\",\r\n        \"quantity\": \"14\",\r\n        \"policyId\": POLICY_ID,\r\n        \"policyScript\": POLICY_SCRIPT\r\n      },\r\n      {\r\n        \"assetName\": \"GRISEL22021\",\r\n        \"quantity\": \"14\",\r\n        \"policyId\": POLICY_ID,\r\n        \"policyScript\": POLICY_SCRIPT\r\n      },\r\n      {\r\n        \"assetName\": \"GRISEL32021\",\r\n        \"quantity\": \"14\",\r\n        \"policyId\": POLICY_ID,\r\n        \"policyScript\": POLICY_SCRIPT\r\n      },\r\n      {\r\n        \"assetName\": \"GRISEL42021\",\r\n        \"quantity\": \"13\",\r\n        \"policyId\": POLICY_ID,\r\n        \"policyScript\": POLICY_SCRIPT\r\n      },\r\n      {\r\n        \"assetName\": \"GRISEMYTHIC2021\",\r\n        \"quantity\": \"28\",\r\n        \"policyId\": POLICY_ID,\r\n        \"policyScript\": POLICY_SCRIPT\r\n      },\r\n      {\r\n        \"assetName\": \"GRISEKEY2021\",\r\n        \"quantity\": \"28\",\r\n        \"policyId\": POLICY_ID,\r\n        \"policyScript\": POLICY_SCRIPT\r\n      }\r\n    ];\r\n\r\n    const assetsData = [\r\n      {\r\n        \"assetKey\": \"GRISEC12021\",\r\n        \"assetName\": \"GRISE C-1-2021\",\r\n        \"imageUrl\": \"ipfs://QmRTSn3aaDrn3AMGpJofup5XNvBL7vdQ531TqGyuMu6AFx\",\r\n        \"metadata\": {}\r\n      },\r\n      {\r\n        \"assetKey\": \"GRISEC22021\",\r\n        \"assetName\": \"GRISE C-2-2021\",\r\n        \"imageUrl\": \"ipfs://QmW9rtRtjT3H8dVJjH6mBxdEqo8dN9H9NrrZaCJJHV46Nc\",\r\n        \"metadata\": {}\r\n      },\r\n      {\r\n        \"assetKey\": \"GRISEC32021\",\r\n        \"assetName\": \"GRISE C-3-2021\",\r\n        \"imageUrl\": \"ipfs://QmWGSKrXV2pyeEtQEpN5Vo9mc8gu1Z7ytBiTrWa7enFSyu\",\r\n        \"metadata\": {}\r\n      },\r\n      {\r\n        \"assetKey\": \"GRISEC42021\",\r\n        \"assetName\": \"GRISE C-4-2021\",\r\n        \"imageUrl\": \"ipfs://QmZUvx6T1X6ppnJVwhp9xbmQijTDgCAjfq9AkrbqBdNmUt\",\r\n        \"metadata\": {}\r\n      },\r\n      {\r\n        \"assetKey\": \"GRISEC52021\",\r\n        \"assetName\": \"GRISE C-5-2021\",\r\n        \"imageUrl\": \"ipfs://QmPYK7WakmUMHyLc72YK3URmyj5MRyb6FDhWCF23tX49NL\",\r\n        \"metadata\": {}\r\n      },\r\n      {\r\n        \"assetKey\": \"GRISEC62021\",\r\n        \"assetName\": \"GRISE C-6-2021\",\r\n        \"imageUrl\": \"ipfs://QmTsbnuFJUs987mtVJvxpsXQamRdxgPVdFX4ZmoAX6rp3p\",\r\n        \"metadata\": {}\r\n      },\r\n      {\r\n        \"assetKey\": \"GRISEC72021\",\r\n        \"assetName\": \"GRISE C-7-2021\",\r\n        \"imageUrl\": \"ipfs://QmP8f274nv8LEzimZTa792pAv9xxknpCwFDXrQ4X4bwpEY\",\r\n        \"metadata\": {}\r\n      },\r\n      {\r\n        \"assetKey\": \"GRISEC82021\",\r\n        \"assetName\": \"GRISE C-8-2021\",\r\n        \"imageUrl\": \"ipfs://QmU3PsxnPaKphfgx5zVazWo359ABroabVyCBKKRJVuxJ4W\",\r\n        \"metadata\": {}\r\n      },\r\n      {\r\n        \"assetKey\": \"GRISER12021\",\r\n        \"assetName\": \"GRISE R-1-2021\",\r\n        \"imageUrl\": \"ipfs://QmXvvcGGf2ptHdipdDPpgarsZYVDmrpwFekGAohejA9o2q\",\r\n        \"metadata\": {}\r\n      },\r\n      {\r\n        \"assetKey\": \"GRISER22021\",\r\n        \"assetName\": \"GRISE R-2-2021\",\r\n        \"imageUrl\": \"ipfs://QmZbnadfNKKae5YyJtWkw59Cj7KLw1xsYi1op6e9QqXAqF\",\r\n        \"metadata\": {}\r\n      },\r\n      {\r\n        \"assetKey\": \"GRISER32021\",\r\n        \"assetName\": \"GRISE R-3-2021\",\r\n        \"imageUrl\": \"ipfs://QmSBB54xgeUzESkWf3VzUBhn4981LcGgSfB9pCBJjqaXsj\",\r\n        \"metadata\": {}\r\n      },\r\n      {\r\n        \"assetKey\": \"GRISER42021\",\r\n        \"assetName\": \"GRISE R-4-2021\",\r\n        \"imageUrl\": \"ipfs://QmQwpRwha92Nc9j5ZqM2tdiYbwZCC2UmeBhsSEpZPbE3Vo\",\r\n        \"metadata\": {}\r\n      },\r\n      {\r\n        \"assetKey\": \"GRISER52021\",\r\n        \"assetName\": \"GRISE R-5-2021\",\r\n        \"imageUrl\": \"ipfs://QmSdvikU2N9ggR3UHkwZgGDirFvkUyDo9gvEHfUEcozMGb\",\r\n        \"metadata\": {}\r\n      },\r\n      {\r\n        \"assetKey\": \"GRISER62021\",\r\n        \"assetName\": \"GRISE R-6-2021\",\r\n        \"imageUrl\": \"ipfs://QmaotUK8BXdvidgYctMBcSBuvgrmbEj7EgjAShanyEHPXb\",\r\n        \"metadata\": {}\r\n      },\r\n      {\r\n        \"assetKey\": \"GRISEL12021\",\r\n        \"assetName\": \"GRISE L-1-2021\",\r\n        \"imageUrl\": \"ipfs://QmYuPnqxqEEF5k8TEe8dKP8GRuVnQcp1nWQo41sNp7E19X\",\r\n        \"metadata\": {}\r\n      },\r\n      {\r\n        \"assetKey\": \"GRISEL22021\",\r\n        \"assetName\": \"GRISE L-2-2021\",\r\n        \"imageUrl\": \"ipfs://QmNXGdoGq96zwWzZag1Yq1ZPGkiKS1muiKeunFBDRvpazX\",\r\n        \"metadata\": {}\r\n      },\r\n      {\r\n        \"assetKey\": \"GRISEL32021\",\r\n        \"assetName\": \"GRISE L-3-2021\",\r\n        \"imageUrl\": \"ipfs://QmcVJoPB8Zyfeh5FmMeX5LD9KehBXe4VDn7Jww5hMMWSYD\",\r\n        \"metadata\": {}\r\n      },\r\n      {\r\n        \"assetKey\": \"GRISEL42021\",\r\n        \"assetName\": \"GRISE L-4-2021\",\r\n        \"imageUrl\": \"ipfs://QmZtdJtNfYnSQx24dLxwex1RrDfLtbcxspx8urAcUPg7TB\",\r\n        \"metadata\": {}\r\n      },\r\n      {\r\n        \"assetKey\": \"GRISEMYTHIC2021\",\r\n        \"assetName\": \"GRISE MYTHIC-2021\",\r\n        \"imageUrl\": \"ipfs://QmehyozkKD9gdhAnU3cCrzRVmPFPYFhvCTL1KKwDDKKxty\",\r\n        \"metadata\": {}\r\n      },\r\n      {\r\n        \"assetKey\": \"GRISEKEY2021\",\r\n        \"assetName\": \"GRISE KEY-2021\",\r\n        \"imageUrl\": \"ipfs://QmSTRDjr6R4wAqbadga2gxWc92wfHwCEWbE4w2hHyuEz5K\",\r\n        \"metadata\": {}\r\n      }\r\n    ];\r\n\r\n    const batchRecipients = [\r\n      {\r\n        address: localStorage.getItem(\"batchMintScriptAddr\"),\r\n        mintedAssets\r\n      }\r\n    ];\r\n\r\n    const metadata_assets = assetsData.reduce((result, asset) => {\r\n\r\n      // 4. Define ASSET_NAME\r\n      const ASSET_NAME = asset.assetKey;\r\n\r\n      // 5. Create ASSET_ID\r\n      const ASSET_ID = POLICY_ID + \".\" + ASSET_NAME;\r\n\r\n      const asset_metadata = {\r\n        name: asset.assetName,\r\n        image: asset.imageUrl,\r\n        description: \"GRISE NFT Marketplace\",\r\n        authors: [\"GRISE\"]\r\n      }\r\n\r\n      asset.metadata = {\r\n        721: {\r\n          [POLICY_ID]: {\r\n            [ASSET_NAME]: asset_metadata\r\n          }\r\n        }\r\n      };\r\n\r\n      return {\r\n        ...result,\r\n        [ASSET_NAME]: asset_metadata\r\n      }\r\n    }, {})\r\n\r\n    // 6. Define metadata\r\n    const metadataMinting = {\r\n      721: {\r\n        [POLICY_ID]: {\r\n          ...metadata_assets\r\n        }\r\n      }\r\n    }\r\n\r\n    let txHash: any = '';\r\n    try { // T#1\r\n      console.log(\"======================= Start Tx ==========================\")\r\n      txHash = await MintLoader.buildFullTransactionBatchMinting(batchRecipients, metadataMinting);\r\n      // txHash = await MintLoader.buildFullTransaction(recipients, mintMetadata);\r\n      console.log(\"======================= End Tx ==========================\")\r\n\r\n      if (txHash && txHash.error) {\r\n        this.toastr.error(\"Transaction Failed\");\r\n        return\r\n      } else {\r\n        this.toastr.success(`TxHash is: ${txHash}`, \"Remaining NFTs minted successfully\");\r\n      }\r\n    } catch (err) {\r\n      console.log(\"err1: \", err);\r\n      if (err && err.info) {\r\n        // this.toastr.info(err.info);\r\n        return\r\n\r\n      } else {\r\n        this.toastr.error(\"Failed to batch minting\");\r\n      }\r\n    }\r\n  }\r\n  // initMyNFTContents() {\r\n  //   this.allMyNFTGroups = [];\r\n  //   this.mythicNFTsGroup = [];\r\n  //   this.rareNFTsGroup = [];\r\n  //   this.legendaryNFTsGroup = [];\r\n  //   this.commonNFTsGroup = [];\r\n  //   const walletAddr = localStorage.getItem(\"walletAddr\");\r\n  //   if (walletAddr) {\r\n  //     this.APIServices.myNftsList(walletAddr)\r\n  //       .then((res) => {\r\n\r\n  //         let userNftsList = res.data ? res.data : [];\r\n  //         this.allMyNFTGroups = [\r\n  //           {\r\n  //             id: 1,\r\n  //             contentGroup: NFTContentGroup.Mythic,\r\n  //             contentHeader: \"My NFTs\",\r\n  //             contentData: userNftsList.map((item: any) => {\r\n  //               const nft = item.nftId;\r\n  //               return {\r\n  //                 contentType: (nft && nft.nftType === \"mythic\") ? NFTContentType.Gif : NFTContentType.Image,\r\n  //                 contentPath: `assets/${nft && nft.nftType ? nft.nftType : 'type'}/${nft && nft.src ? nft.src : 'src'}`,\r\n  //                 availableForSale: item.availableForSale\r\n  //               }\r\n  //             }),\r\n  //           },\r\n  //         ];\r\n\r\n  //       })\r\n  //       .catch((err) => {\r\n  //         console.log(\"Error is: \", err);\r\n  //       });\r\n  //   }\r\n  // }\r\n\r\n  async initNFTContents() {\r\n    this.allNFTGroups = [];\r\n    this.mythicNFTsGroup = [];\r\n    this.rareNFTsGroup = [];\r\n    this.legendaryNFTsGroup = [];\r\n    this.commonNFTsGroup = [];\r\n    this.keynftGroup = [];\r\n    // this.spinnerService.show()\r\n\r\n    // await Loader.load()\r\n    // const Nami = await Loader.Cardano();\r\n    // let paymentAddr = await Nami.getAddress();\r\n\r\n    // const connectedWalletAddress = paymentAddr; // localStorage.getItem('walletAddr') ? localStorage.getItem('walletAddr') : null;\r\n\r\n    // const userApiResp: any = await new Promise(async (resolve, reject) => {\r\n    //   const regUser = await this.APIServices.userRegister({\r\n    //     walletAddr: this.namiwallet,\r\n    //     // name: \"test\",\r\n    //   });\r\n    //   resolve(regUser)\r\n    // });\r\n    // if (userApiResp.status) {\r\n    //   localStorage.setItem(\"token\", userApiResp.token);\r\n    //   this.authUser = userApiResp.data;\r\n    // }\r\n    this.APIServices.userLoginData$.subscribe((data) => {\r\n      console.log(data, 'NFT component');\r\n      this.authUser = data;\r\n    })\r\n\r\n    // console.log(\"userApiResp : \", userApiResp);\r\n\r\n    this.APIServices.nftsList(this.namiwallet)\r\n      .then((res) => {\r\n        // this.spinnerService.hide()\r\n\r\n        this.keyitem = this.keyNftshow(res.data);\r\n        this.keynfthide = true;\r\n        const mythicNfts = res.data.filter(\r\n          (item: any) => item.nftType === \"mythic\",\r\n        );\r\n        const rareNfts = res.data.filter(\r\n          (item: any) => item.nftType === \"rare\"\r\n        );\r\n        const legendaryNfts = res.data.filter(\r\n          (item: any) => item.nftType === \"legend\"\r\n        );\r\n        const commonNfts = res.data.filter(\r\n          (item: any) => item.nftType === \"common\"\r\n        );\r\n        const keyNfts = res.data.filter(\r\n          (item: any) => item.nftType === \"key\"\r\n        );\r\n        // console.log(\"keyNfts \", keyNfts);\r\n\r\n        this.mythicNFTsGroup = [\r\n          {\r\n            id: 1,\r\n            contentGroup: NFTContentGroup.Mythic,\r\n            contentHeader: \"Mythic\",\r\n            contentData: mythicNfts.map((nft: any) => {\r\n              return {\r\n                contentType: NFTContentType.Gif,\r\n                contentPath: `assets/mythic/${nft.src}`,\r\n                nftObj: nft,\r\n\r\n              };\r\n            }),\r\n          },\r\n        ];\r\n        console.log(this.btnid, \"nft\")\r\n        this.rareNFTsGroup = [\r\n          {\r\n            id: 2,\r\n            contentGroup: NFTContentGroup.Rare,\r\n            contentHeader: \"Rare\",\r\n            contentData: rareNfts.map((nft: any) => {\r\n              return {\r\n                contentType: NFTContentType.Image,\r\n                contentPath: `assets/rare/${nft.src}`,\r\n                nftObj: nft,\r\n\r\n              };\r\n            }),\r\n          },\r\n        ];\r\n\r\n        this.legendaryNFTsGroup = [\r\n          {\r\n            id: 3,\r\n            contentGroup: NFTContentGroup.Legendary,\r\n            contentHeader: \"Legendary\",\r\n            contentData: legendaryNfts.map((nft: any) => {\r\n              return {\r\n                contentType: NFTContentType.Image,\r\n                contentPath: `assets/legend/${nft.src}`,\r\n                nftObj: nft\r\n              };\r\n            }),\r\n          },\r\n        ];\r\n\r\n        this.commonNFTsGroup = [\r\n          {\r\n            id: 4,\r\n            contentGroup: NFTContentGroup.Common,\r\n            contentHeader: \"Common\",\r\n            contentData: commonNfts.map((nft: any) => {\r\n              return {\r\n                contentType: NFTContentType.Image,\r\n                contentPath: `assets/common/${nft.src}`,\r\n                nftObj: nft\r\n              };\r\n            }),\r\n          },\r\n        ];\r\n        // this.keynftGroup = [\r\n        //   {\r\n        //     id: 0,\r\n        //     contentGroup: NFTContentGroup.key,\r\n        //     contentHeader: \"Key\",\r\n        //     contentData: keyNfts.map((nft: any) => {\r\n        //       return {\r\n        //         contentType: NFTContentType.Gif,\r\n        //         contentPath: `assets/key/${nft.src}`,\r\n        //         nftObj: nft,\r\n        //       };\r\n        //     }),\r\n\r\n        //   },\r\n\r\n        // ];\r\n\r\n        this.allNFTGroups.push(\r\n          ...this.mythicNFTsGroup,\r\n          //...this.rareNFTsGroup,\r\n          //...this.legendaryNFTsGroup,\r\n          //...this.commonNFTsGroup,\r\n          //...this.keynftGroup,\r\n        );\r\n        console.log(this.allNFTGroups, \"show data\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error: response api =>  \", err);\r\n        // this.spinnerService.hide()\r\n      });\r\n  }\r\n\r\n  allNFTs() {\r\n    this.filterNFTGroups = this.allNFTGroups;\r\n    this.mergerButtons = false;\r\n    this.AllNftShow = true;\r\n    this.incubationText = false;\r\n    this.myNftsshow = false;\r\n    if (this.allNFTGroups) {\r\n      this.active = true;\r\n    } else {\r\n      this.active = false;\r\n    }\r\n  }\r\n\r\n  mythicNFTs() {\r\n    this.filterNFTGroups = this.mythicNFTsGroup;\r\n    this.mergerButtons = false;\r\n    this.AllNftShow = true;\r\n    this.incubationText = false;\r\n    this.myNftsshow = false;\r\n    if (this.filterNFTGroups = this.mythicNFTsGroup) {\r\n      this.active = true;\r\n    } else {\r\n      this.active = false;\r\n    }\r\n  }\r\n\r\n  rareNFTs() {\r\n    this.filterNFTGroups = this.rareNFTsGroup;\r\n    this.mergerButtons = false;\r\n    this.AllNftShow = true;\r\n    this.incubationText = false;\r\n    this.myNftsshow = false;\r\n  }\r\n\r\n  legendaryNFTs() {\r\n    this.filterNFTGroups = this.legendaryNFTsGroup;\r\n    this.mergerButtons = false;\r\n    this.AllNftShow = true;\r\n    this.incubationText = false;\r\n    this.myNftsshow = false;\r\n  }\r\n\r\n  commonNFTs() {\r\n    this.filterNFTGroups = this.commonNFTsGroup;\r\n    this.mergerButtons = false;\r\n    this.AllNftShow = true;\r\n    this.incubationText = false;\r\n    this.myNftsshow = false;\r\n  }\r\n  nextImagesBox() {\r\n    this.nextBox = true;\r\n    this.firstBox = false;\r\n  }\r\n  nextResultBox() {\r\n    this.nextBox = false;\r\n    this.resultBox = true;\r\n  }\r\n  redirectlandingPage(data: any) {\r\n    this.setSelectedNft(data);\r\n    // this.router.navigateByUrl(\"/landing\");\r\n  }\r\n\r\n  setSelectedNft(data: any) {\r\n    // localStorage.setItem(\"selectedNft\", JSON.stringify(data));\r\n    // this.APIServices.userLoginData$.next(data);\r\n  }\r\n\r\n  redirectform(data: any) {\r\n    // this.setSelectedNft(data);\r\n    // this.router.navigateByUrl(\"/form\");\r\n  }\r\n  mergerButtonsShow() {\r\n    this.filterNFTGroups = [];\r\n    this.mergerButtons = true;\r\n    this.AllNftShow = false;\r\n    this.incubationText = false;\r\n    this.myNftsshow = false;\r\n  }\r\n  incubationShow() {\r\n    this.filterNFTGroups = [];\r\n    this.incubationText = true;\r\n    this.mergerButtons = false;\r\n    this.AllNftShow = false;\r\n    this.myNftsshow = false;\r\n  }\r\n  resetMintNftObj() {\r\n    this.mintNftObj = {\r\n      _id: 'N/A',\r\n      assetName: 'N/A',\r\n      amount: 'N/A',\r\n      availableForSale: false,\r\n      owned_by: 'N/A',\r\n      quantity: 'N/A',\r\n      userNftId: 'N/A',\r\n      ownerAddr: 'ADMIN',\r\n      metadata: '',\r\n      assetKey: '',\r\n      imageUrl: '',\r\n      imageLink: ''\r\n    }\r\n  }\r\n\r\n  calcAdminRoyality = async (num: number, percentage: number) => {\r\n    try {\r\n      return num > 0 && percentage > 0 ? num * (percentage / 100) : 0 // parseInt(parseFloat(num * (percentage / 100)).toFixed(6)) : 0;\r\n    } catch (err) {\r\n      console.log(err);\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  clickMint = async () => {\r\n    console.log(this.mintNftObj, 'this.mintNftObjakldjfa;lksdjfas')\r\n    // ***\r\n    // verify wallet validations\r\n    // check availbele tokens for minting\r\n    // nami-wallet minting\r\n    // update db records\r\n    // ***\r\n    this.disablebtn = true;\r\n    try {\r\n\r\n      const tokenAmmount = Number(this.mintNftObj.amount)\r\n      const MintNami = await MintLoader.Cardano();\r\n\r\n      const checkWallet = await Loader.verifyWallet(tokenAmmount, this.authUser.type);\r\n      console.log(tokenAmmount, \"clickMint verifyWallet => \", checkWallet);\r\n\r\n      if (checkWallet !== true) {\r\n        this.toastr.warning(checkWallet)\r\n        return\r\n      }\r\n      if (this.namiwallet && checkWallet === true) {\r\n        const nftResp: any = await new Promise(async (resolve, reject) => {\r\n          const resp = await this.APIServices.verifyUserNft({\r\n            nftId: this.mintNftObj._id,\r\n            action: 'mint'\r\n          });\r\n          resolve(resp)\r\n        });\r\n        if (!nftResp.status) {\r\n          this.toastr.error(nftResp.msg);\r\n          return\r\n        }\r\n\r\n        const newPolicy = await MintLoader.createPolicy();\r\n        console.log(\"newPolicy \", JSON.stringify(newPolicy));\r\n        const recipients = [\r\n          { // mint nft against connected wallet\r\n            address: await MintNami.getAddress(),\r\n            amount: this.ASSET_TRANSFER_PRICE,\r\n            mintedAssets: [{\r\n              assetName: this.mintNftObj.assetKey, quantity: \"1\", policyId: newPolicy.id,\r\n              policyScript: newPolicy.script\r\n            }]\r\n          },\r\n          { // send nft amount to admin\r\n            address: this.adminNamiWalletAddress,\r\n            amount: tokenAmmount\r\n          }\r\n        ];\r\n\r\n        const mintMetadata: any = {\r\n          \"721\": {\r\n            [newPolicy.id]: {\r\n              [this.mintNftObj.assetKey]: {\r\n                name: this.mintNftObj.assetKey,\r\n                description: 'GRISE NFT Marketplace.', // `GRISE Metamoonverse NFT Marketplace. https://grisemetamoonverse.io/nft`,\r\n                image: this.mintNftObj.imageUrl,\r\n                authors: [\"GRISE\"] // GRISEMETAMOONVERSE\r\n              }\r\n            }\r\n          }\r\n        };\r\n        // console.log(\"mintMetadata => \", JSON.stringify(mintMetadata));\r\n        let txHash: any = '';\r\n        try { // T#1\r\n          console.log(\"======================= Start Tx ==========================\")\r\n          txHash = await MintLoader.buildFullTransaction(recipients, mintMetadata);\r\n          console.log(\"======================= End Tx ==========================\")\r\n\r\n          if (txHash && txHash.error) {\r\n            this.toastr.error(\"Transaction Failed\");\r\n            this.disablebtn = false;\r\n            return\r\n          }\r\n        } catch (err) {\r\n          console.log(\"err1: \", err);\r\n          if (err && err.info) {\r\n            // this.toastr.info(err.info);\r\n            this.disablebtn = false;\r\n            //console.log(err.info, \"error test\");\r\n            return\r\n\r\n          } else {\r\n\r\n            console.log(\"mintMetadata 1:: \", JSON.stringify(mintMetadata));\r\n            try { // T#2\r\n              delete mintMetadata[\"721\"][newPolicy.id][this.mintNftObj.assetKey].description;\r\n              txHash = await MintLoader.buildFullTransaction(recipients, mintMetadata);\r\n            } catch (err2) {\r\n              console.log(\"err2: \", err2);\r\n              try { // T#3\r\n                mintMetadata[\"721\"][newPolicy.id][this.mintNftObj.assetKey].image = this.mintNftObj.imageLink;\r\n                txHash = await MintLoader.buildFullTransaction(recipients, mintMetadata);\r\n              } catch (err3) {\r\n                console.log(\"err3: \", err3);\r\n                try { // T#4\r\n                  delete mintMetadata[\"721\"][newPolicy.id][this.mintNftObj.assetKey].image;\r\n                  // mintMetadata[\"721\"][newPolicy.script] = mintMetadata[\"721\"][newPolicy.id];\r\n                  // delete mintMetadata[\"721\"][newPolicy.id];\r\n                  // console.log(\"mintMetadata 3:: \", JSON.stringify(mintMetadata));\r\n                  txHash = await MintLoader.buildFullTransaction(recipients, mintMetadata);\r\n                } catch (err4) {\r\n                  console.log(\"err4: \", err4);\r\n                  txHash = await MintLoader.buildFullTransaction(recipients);\r\n                }\r\n              }\r\n\r\n            }\r\n          }\r\n        }\r\n        console.log(\"mintTransaction \", txHash);\r\n\r\n        // const txHash = await Nami.send({\r\n        //   address: this.adminNamiWalletAddress, // ADMIN ADDRESS\r\n        //   amount: tokenAmmount\r\n        // })\r\n        if (!txHash) {\r\n          this.toastr.error(\"Failed to mint NFT\");\r\n        } else {\r\n          const data = {\r\n            nftId: this.mintNftObj._id,\r\n            mintToken: `${newPolicy.id}.${this.mintNftObj.assetKey}`,\r\n            nftQuantity: 1\r\n          }\r\n\r\n          this.APIServices.mintNft(data)\r\n            .then((res) => {\r\n              this.btnid = \"\"\r\n              if (res.status) {\r\n                this.disablebtn = false;\r\n                this.mintNftObj.quantity = String(Number(this.mintNftObj.quantity) - 1);\r\n                this.toastr.success(`TxHash is: ${txHash}`, res.msg);\r\n              } else {\r\n                this.toastr.success(`TxHash is: ${txHash}`, \"NFT minted\");\r\n                this.toastr.error(res.msg);\r\n                this.disablebtn = false;\r\n              }\r\n            })\r\n            .catch((err) => {\r\n              this.toastr.success(`TxHash is: ${txHash}`, \"NFT minted\");\r\n              this.toastr.error(\"Something went wrong\");\r\n              console.log(\"Error is: \", err);\r\n              this.disablebtn = false;\r\n            });\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error :: \", error);\r\n      if (error && error.info) {\r\n        this.toastr.info(error.info);\r\n      } else {\r\n        this.toastr.error(\"Something went wrong\");\r\n      }\r\n    }\r\n  }\r\n\r\n  clickBuy = async () => {\r\n\r\n    // this.showsell = true;\r\n    // this.mintHide = false;\r\n    console.log(this.adminNamiWalletAddress, \"data is: \", this.buyNftObj);\r\n    // Calculate 12% royalty for admin\r\n    // const adminRoyality = await this.calcAdminRoyality(Number(this.mintNftObj.amount), this.ADMIN_ROYALITY); // func(250, 20) mean, 20 percent of 250\r\n    // console.log(\"adminRoyality :: \", (parseFloat(adminRoyality.toString()).toFixed(6)));\r\n\r\n    if (!this.buyNftObj || !this.buyNftObj.userNftData) {\r\n      return\r\n    }\r\n\r\n    const selectedNft = this.buyNftObj.userNftData;\r\n    const tokenAmmount = Number(selectedNft.amount) + this.ASSET_TRANSFER_PRICE;\r\n    console.log(\"tokenAmmount:: \", tokenAmmount);\r\n\r\n\r\n    this.buydiable = true;\r\n    // Transfer amount (royalty fee + Asset amount) from connected wallet's address to admin\r\n    try {\r\n      const Nami = await Loader.Cardano();\r\n\r\n      // ***\r\n      // Check wallet balance\r\n      // Royalty + Amount Transaction\r\n      // ***\r\n\r\n      const walletBalance = localStorage.getItem(\"lovelaces\") ? localStorage.getItem(\"lovelaces\") : 0;\r\n      console.log(\"check blnc cond: \", walletBalance, Number(walletBalance) / 1000000, tokenAmmount)\r\n      if (walletBalance && Number(walletBalance) / 1000000 > tokenAmmount + 1) {\r\n        const nftResp: any = await new Promise(async (resolve, reject) => {\r\n\r\n          const resp = await this.APIServices.verifyUserNft({\r\n            userNftId: selectedNft.userNftId,\r\n            action: 'buy'\r\n\r\n          });\r\n          resolve(resp)\r\n\r\n        });\r\n        if (!nftResp.status) {\r\n          this.buydiable = false;\r\n          this.toastr.error(nftResp.msg);\r\n          return;\r\n        }\r\n\r\n        // const nftOwnerAddress = this.mintNftObj.ownerAddr;\r\n        // const connectedUserWalletAddress = localStorage.getItem('walletAddr') ? localStorage.getItem('walletAddr') : null;\r\n\r\n        // const txHash = await Nami.sendMultiple({\r\n        //   recipients: [\r\n        //     {\r\n        //       address: this.adminNamiWalletAddress,\r\n        //       amount: adminRoyality + this.ASSET_TRANSFER_PRICE\r\n        //     },\r\n        //     {\r\n        //       address: nftOwnerAddress,\r\n        //       amount: Number(this.mintNftObj.amount)\r\n        //     }\r\n        //   ]\r\n        // })\r\n        const txHash = await Nami.send({\r\n          address: this.adminNamiWalletAddress, // ADMIN ADDRESS\r\n          amount: tokenAmmount\r\n        })\r\n        if (!txHash) {\r\n          this.toastr.error(\"Unable to pay asset amount to transfer\");\r\n          this.buydiable = false;\r\n        } else {\r\n\r\n          // console.log(\"txHash :: \", txHash)\r\n          // Mint NFT against admin address(server address) then transfer to user's wallet\r\n          this.spinnerService.show();\r\n          this.buydiable = false;\r\n          const data = {\r\n            userNftId: selectedNft.userNftId,\r\n            nftOwner: selectedNft.userId // nftOwnerAddress // receiver\r\n          }\r\n\r\n          this.APIServices.buyNft(data)\r\n            .then((res) => {\r\n              this.buyid = \"\"\r\n              this.buydiable = false;\r\n              this.spinnerService.hide();\r\n\r\n              if (res.status) {\r\n                this.buydiable = false;\r\n                this.toastr.success(res.msg);\r\n              } else {\r\n                this.toastr.error(res.msg);\r\n                this.buydiable = false;\r\n                console.log(res.msg, \"error msg\")\r\n              }\r\n            })\r\n            .catch((err) => {\r\n              this.spinnerService.hide();\r\n              this.buydiable = false;\r\n              this.toastr.error(\"Something went wrong\");\r\n              console.log(\"Error is: \", err);\r\n            });\r\n        }\r\n\r\n      } else {\r\n        this.toastr.error(\"Insufficient balance\");\r\n        this.buydiable = false;\r\n      }\r\n\r\n    } catch (error) {\r\n      console.log(\"Error :: \", error);\r\n      this.buydiable = false;\r\n      // this.toastr.error(\"Something went wrong\");\r\n    }\r\n  }\r\n  async getWalletBalance() {\r\n    //debugger;\r\n    try {\r\n      //console.log('=================== ngOnInit')\r\n      await Loader.load()\r\n      const cardanoSerialize = await Loader.CardanoSRL();\r\n      const S = cardanoSerialize;\r\n      const cardano = (window as any).cardano;\r\n\r\n      (window as any).global = window;\r\n      // @ts-ignore\r\n      window.Buffer = window.Buffer || require('buffer').Buffer;\r\n\r\n\r\n      // const buffer =  (window as any).Buffer;\r\n      //console.log('namiWallet loader', cardanoSerialize);\r\n      //console.log('cardano loader', cardano);\r\n      //console.log('cardano Get Balance :: ', await cardano.getBalance());\r\n\r\n      cardano.getBalance().then((res: any) => {\r\n        const balance = cardanoSerialize.Value.from_bytes(Buffer.from(res, 'hex'));\r\n        const lovelaces = balance.coin().to_str();\r\n        this.walletBalance = lovelaces;\r\n        localStorage.setItem(\"lovelaces\", lovelaces);\r\n        console.log(\"**  lovelaces  ** \", this.convertToADA(lovelaces));\r\n      })\r\n\r\n\r\n      // const paymentAddr = cardanoSerialize.Address.from_bytes(Buffer.from(await cardano.getChangeAddress(), 'hex')).to_bech32()\r\n      // console.log(\"paymentAddr :: \", paymentAddr);\r\n      // localStorage.setItem(\"address\", paymentAddr);\r\n      // this.walletAddr = `${paymentAddr.slice(0, 10)}...${paymentAddr.slice(paymentAddr.length - 5, paymentAddr.length)}`;\r\n      // let data = await this.nftService.namiRegister({\r\n      //   walletAddr: paymentAddr,\r\n      //   name: \"test\",\r\n\r\n      // });\r\n      // console.log(data, \"this is nami address\");\r\n\r\n    } catch (error) {\r\n      console.log('Something went wrong!')\r\n      console.log(error)\r\n    }\r\n  }\r\n  async handleMintNft(obj: any, action: any) {\r\n    //  if (this.authUser && (this.authUser.type === 'dev' || this.authUser.type === 'admin')) {\r\n\r\n    let nftAmount = 0;\r\n\r\n    if (obj.userNftData && action === 'buy') {\r\n      this.buyNftObj = obj;\r\n      nftAmount = obj.userNftData.amount;\r\n      this.buyid = obj.userNftData.userNftId;\r\n    } else {\r\n      this.mintNftObj = JSON.parse(JSON.stringify(obj));\r\n      nftAmount = obj.amount;\r\n    }\r\n    if (this.authUser.type === 'dev') this.toastr.info('Developer mode enabled');\r\n\r\n    const checkWallet = await Loader.verifyWallet(nftAmount, this.authUser.type);\r\n    console.log(nftAmount, \"Hi verifyWallet => \", checkWallet);\r\n    if (checkWallet !== true) this.toastr.warning(checkWallet);\r\n\r\n    if (this.namiwallet && checkWallet === true) {\r\n\r\n      this.action = action;\r\n      this.btnid = obj._id;\r\n      // this.isOpen = true;\r\n      $('#exampleModaltwo').modal('show');\r\n\r\n\r\n    }\r\n\r\n    // }else {\r\n    //   this.toastr.info('Minting will be live in 2 Hours');\r\n    // }\r\n  }\r\n  keyNftshow(keylist: any[]) {\r\n    let keyNft = keylist.find(item => item.nftType == \"key\");\r\n    // keyNft.src = `assets/key/${keyNft.src}`\r\n    return keyNft;\r\n  }\r\n\r\n}\r\n","<div style=\" height: 100%;\">\r\n\r\n  <!-- <div class=\"personal\"> -->\r\n    <!-- <h1 class=\"personal_title\">Staking Statistics</h1> -->\r\n  <!-- </div> -->\r\n\r\n\r\n  <div class=\"sub-end-part\">\r\n\r\n    <!-- <div style=\" border-bottom: 2px solid grey;margin-bottom: 40px;\"></div> -->\r\n\r\n    <div class=\"first\">\r\n      <div class=\"first_table\">\r\n        <div data-v-1c14e0d6=\"\" class=\"pa-0 ma-2 v-card v-sheet v-sheet--outlined  table_wid \"\r\n          style=\" background-color: grey; box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);padding: 17px; border-radius: 10px\">\r\n          <div class=\"title_box\" style=\"color: #d7d7d7;line-height:40px;\"> Stake Statistics </div>\r\n          <hr role=\"separator\" aria-orientation=\"horizontal\" class=\"mx-2 v-divider \">\r\n          <table style=\"width: -webkit-fill-available;\">\r\n            <tbody style=\"text-align: left;\">\r\n              <tr>\r\n                <td>Total staked</td>\r\n                <td class=\"text-right px-1\"> {{stakeCount?.totalStakeCount ? stakeCount?.totalStakeCount : '-' }} </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Short-term stake</td>\r\n                <td class=\"text-right px-1\"> {{stakeCount?.stStakeCount ? stakeCount?.stStakeCount : '-' }} </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Medium-term stake</td>\r\n                <td class=\"text-right px-1\">{{stakeCount?.mtStakeCount ? stakeCount?.mtStakeCount : '-' }}</td>\r\n              </tr>\r\n              <tr>\r\n                <td class=\"px-5\">3-Month</td>\r\n                <td class=\"text-right px-1\"> {{stakeCount?.mt3MonthStakeCount ? stakeCount?.mt3MonthStakeCount : '-' }} </td>\r\n              </tr>\r\n              <tr>\r\n                <td class=\"px-5\">6-Month</td>\r\n                <td class=\"text-right px-1\"> {{stakeCount?.mt6MonthStakeCount ? stakeCount?.mt6MonthStakeCount : '-' }} </td>\r\n              </tr>\r\n              <tr>\r\n                <td class=\"px-5\">9-Month</td>\r\n                <td class=\"text-right px-1\"> {{stakeCount?.mt9MonthStakeCount ? stakeCount?.mt9MonthStakeCount : '-' }} </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Long-term stake</td>\r\n                <td class=\"text-right px-1\"> {{stakeCount?.ltStakeCount ? stakeCount?.ltStakeCount : '-' }} </td>\r\n              </tr>\r\n\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n      <div class=\"first_graph\">\r\n        <div class=\"chart-wrapper\" *ngIf=\"stakeCount && stakeCount.totalStakeCount > 0\">\r\n          <canvas baseChart [data]=\"pieChartStakeCountData\" [labels]=\"pieChartLabels\" chartType=\"pie\"\r\n            [options]=\"pieChartOptions\">\r\n          </canvas>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <br>\r\n    <br>\r\n    <div class=\"second\">\r\n      <div class=\"second_table\">\r\n        <div class=\"pa-0  v-card v-sheet v-sheet--outlined table_wid\"\r\n          style=\" background-color: grey; box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);padding: 17px;border-radius: 10px\">\r\n          <div class=\" title_box  \" style=\"color: #d7d7d7;line-height:40px;\"> Staking Slot Availablity </div>\r\n          <hr role=\"separator\" aria-orientation=\"horizontal\" class=\"mx-2 v-divider \">\r\n          <table style=\"width: -webkit-fill-available;\">\r\n            <tbody style=\"text-align: left;\">\r\n\r\n              <tr>\r\n                <td>Short-term staking Slot</td>\r\n                <td class=\"text-right px-1\"> {{slotLeft?.stSlotLeft ? slotLeft?.stSlotLeft : '-' }} </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Medium-term staking Slot</td>\r\n                <td class=\"text-right px-1\">{{slotLeft?.mtSlotLeft ? slotLeft?.mtSlotLeft : '-' }}</td>\r\n              </tr>\r\n              <tr>\r\n                <td class=\"px-5\">3-Month</td>\r\n                <td class=\"text-right px-1\"> {{slotLeft?.mt3MonthSlotLeft ? slotLeft?.mt3MonthSlotLeft : '-' }} </td>\r\n              </tr>\r\n              <tr>\r\n                <td class=\"px-5\">6-Month</td>\r\n                <td class=\"text-right px-1\"> {{slotLeft?.mt6MonthSlotLeft ? slotLeft?.mt6MonthSlotLeft : '-' }} </td>\r\n              </tr>\r\n              <tr>\r\n                <td class=\"px-5\">9-Month</td>\r\n                <td class=\"text-right px-1\"> {{slotLeft?.mt9MonthSlotLeft ? slotLeft?.mt9MonthSlotLeft : '-' }} </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Long-term staking Slots</td>\r\n                <td class=\"text-right px-1\"> {{slotLeft?.ltSlotLeft ? slotLeft?.ltSlotLeft : '-' }} </td>\r\n              </tr>\r\n\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n      <div class=\"second_graph\">\r\n        <div class=\"chart-wrapper\" *ngIf=\"slotLeft\">\r\n          <canvas baseChart [data]=\"pieChartSlotLeftData\" [labels]=\"pieChartLabels\" chartType=\"pie\"\r\n            [options]=\"pieChartOptions\">\r\n          </canvas>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n\r\n  </div>\r\n\r\n\r\n  <div style=\"margin:40px 0px; padding-top: 60px;\"></div>\r\n\r\n</div>\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { ChartOptions } from 'chart.js';\r\nimport { Label, SingleDataSet } from 'ng2-charts';\r\nimport { StakingTokenContractService } from 'src/app/services/staking-token-contract.service';\r\nimport { StakeCountData } from '../../../models/stake-count-data';\r\nimport { StakeSlotLeftData } from '../../../models/stake-slot-left-data';\r\n\r\n@Component({\r\n  selector: 'app-staking',\r\n  templateUrl: './staking.component.html',\r\n  styleUrls: ['./staking.component.scss']\r\n})\r\nexport class StakingComponent implements OnInit, OnDestroy {\r\n\r\n  stakeCount: StakeCountData;\r\n  slotLeft: StakeSlotLeftData;\r\n\r\n  pieChartOptions: ChartOptions = {\r\n    responsive: true,\r\n    legend: { labels: { fontColor: 'white' } }\r\n  };\r\n  pieChartLabels: Label[] = ['Short-term stake', 'Medium-term stake', 'Long-term stake'];\r\n  pieChartStakeCountData: SingleDataSet = [0, 0, 0];\r\n  pieChartSlotLeftData: SingleDataSet = [0, 0, 0];\r\n\r\n  intervalId: any;\r\n\r\n  constructor(private stakingTokenContractService: StakingTokenContractService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.refreshData();\r\n    this.setRefreshDataTimer();\r\n  }\r\n\r\n  refreshData() {\r\n    this.getStakeCountData();\r\n    this.getStakeSlotsLeftData();\r\n  }\r\n\r\n  setRefreshDataTimer() {\r\n    this.intervalId = setInterval(() => {\r\n      this.refreshData();\r\n    }, 30000);\r\n  }\r\n\r\n  getStakeCountData() {\r\n    this.stakingTokenContractService.getStakeCountData().then(stakeCount => {\r\n      if (stakeCount) {\r\n        this.stakeCount = stakeCount;\r\n        this.pieChartStakeCountData = [this.stakeCount.stStakeCount, this.stakeCount.mtStakeCount, this.stakeCount.ltStakeCount];\r\n      }\r\n    });\r\n  }\r\n\r\n  getStakeSlotsLeftData() {\r\n    this.stakingTokenContractService.getStakeSlotsLeftData().then(slotLeft => {\r\n      if (slotLeft) {\r\n        this.slotLeft = slotLeft;\r\n        this.pieChartSlotLeftData = [this.slotLeft.stSlotLeft, this.slotLeft.mtSlotLeft, this.slotLeft.ltSlotLeft];\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    clearInterval(this.intervalId);\r\n  }\r\n}\r\n","<div *ngIf=\"allowed_user == true\">\r\n\r\n  <div class=\"container bg-color \">\r\n\r\n    <div class=\"row \">\r\n      <!-- introduction part -->\r\n      \r\n      <div class=\"col-lg-12 \" style=\"margin-top: 59px;\">\r\n  \r\n        <h1 class=\"headingAi_first\">Introduction AI Platform</h1>\r\n        <div class=\"tab\" style=\"text-align: justify;\">\r\n  \r\n  \r\n  <div class=\"row\">\r\n          <div class=\"col-lg-12\">\r\n           <h1> How to use Grise Token AI-Indices</h1>\r\n          </div>\r\n          <div class=\"col-lg-12 my-3\">\r\n            <h4 class=\"text-danger\">NOTE: Indices Rebalancing Times Are an Approximation.</h4>\r\n          </div>\r\n          <div class=\"col-lg-12 my-3\">\r\n            <div class=\"info-text\">\r\n            Sometimes we may update the indices when we make important updates or changes to technical details and\r\n            calculations for an index. For example, we recently added a requirement for all indices to only hold\r\n            cryptocurrencies with a daily trading volume greater than $500k. Each of these technical updates requires us\r\n            to re-do the index. This will apply with future technical updates to indices.\r\n            Furthermore, we have recently add features related to trading signal. This features is based on Deep Learning by which our stacker can take smart decision to avoid loss in trading. In AI-Price prediction algorithms we can see the future expected price up-to two months and take fast decision to in-out the market.\r\n            As a result, the days and times are an approximation and indices may take 1-4 hours to fully update or on\r\n            occasion be rebalanced more than their time-horizon to make important technical updates.\r\n          </div>\r\n        </div>\r\n        <div class=\"col-lg-12 my-3\">\r\n            <h4 class=\"text-danger\">DISCLAIMER\r\n            Indices of crypto investments, like all types of investment-related information, are subject to risk; they can\r\n            go down as well as up; and relying on such information can lead to losses as well as gains. Information about\r\n            past performance is not necessarily indicative of future performance.\r\n            </h4>\r\n        </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  \r\n    <h1 class=\"headingAi\">Sentiment Analysis </h1>\r\n  \r\n    <div class=\"card-div\">\r\n      <h4 class=\"text-danger\">\r\n        <span class=\"mr-3 text-danger\">Last Updated Date/Time:</span>  {{last_change_date}}\r\n      </h4>\r\n      <h2 for=\"ice-cream-choice\" class=\"mr-3\">Choose Coin:</h2>\r\n      <input class=\"inputcoinsearch mb-3 \" type=\"text\" list=\"productList\" name=\"product\" [(ngModel)]='currentProduct'\r\n        (change)=\"onProductChanged(currentProduct)\" />\r\n  \r\n      <datalist id=\"productList\">\r\n        <option *ngFor=\"let data_coin_name of coins_list_api;\" [value]=\"data_coin_name.id\">\r\n          {{data_coin_name.id}} ({{data_coin_name.symbol}})\r\n        </option>\r\n      </datalist>\r\n      <canvas baseChart [colors]=\"PieChartColor\" [data]=\"pieChartData\"\r\n        [options]=\"pieChartOptions\" [legend]=\"pieChartLegend\" [labels]=\"pieChartLabels\" [chartType]=\"pieChartType\">\r\n      </canvas>\r\n      <!-- <highcharts-chart class=\"custom-chart-styles\"\r\n        [Highcharts]=\"highcharts\"\r\n        [options]=\"pieChart\">\r\n      </highcharts-chart> -->\r\n      <!-- <div id=\"container\"></div> -->\r\n    </div>\r\n\r\n  </div>\r\n</div>\r\n\r\n<div *ngIf=\"allowed_user == false\">\r\n  <div style=\"font-size: 30px; margin-top: 21%; line-height: normal;\" class=\"text-center mb-5\">\r\n    AI will only be available to NFT holders.\r\n    <div>\r\n      <img class=\"sidebar-icon\" src=\"https://bnb-grise-assests.s3.us-west-2.amazonaws.com/assets/dashboard.png\" alt=\"dashboard\">\r\n      <br>\r\n      <!--<div class=\"d-flex justify-content-center access-btn-div\">\r\n        <span (click)=\"giveAccess()\" class=\"access-btn\">Access AI</span>\r\n      </div>-->\r\n    </div>\r\n  <!-- <div style=\"font-size: 30px; margin-top: 21%;\" class=\"text-center mb-5\">\r\n  Please hold grise NFT's to gain access\r\n  <div>\r\n    <a routerLinkActive=\"active\" routerLink=\"/dashboard\" queryParamsHandling=\"merge\" onclick=\"closeNav()\">\r\n      <img class=\"sidebar-icon\" src=\"https://bnb-grise-assests.s3.us-west-2.amazonaws.com/assets/dashboard.png\" alt=\"dashboard\">\r\n      <br>\r\n      <label class=\"mb-0 app-item-text\">Dashboard</label>\r\n    </a>\r\n  </div> -->\r\n</div>\r\n    \r\n<!-- <div class=\"row\">\r\n      graph index section\r\n      <div class=\"col-lg-12\">\r\n       \r\n        <div *ngIf=\"ld == 1\" id=\"loader\" class=\"loader\"></div>\r\n  \r\n        <div *ngIf=\"!loadData\" class=\"chart-wrapper\">\r\n          <h1 class=\"headingAi\">Indices Coin Predictions</h1>\r\n          <div class=\"tab\">\r\n          <canvas baseChart style=\" width: 400px !important; height: 400px !important;\"   [data]=\"pieChartData\" [labels]=\"pieChartLabels\"\r\n            [chartType]=\"pieChartType\" [colors]=\"PieChartColor\" [options]=\"pieChartOptions\" [plugins]=\"pieChartPlugins\" [legend]=\"pieChartLegend\">\r\n          </canvas>\r\n          </div>\r\n     \r\n      </div>\r\n  \r\n      </div>\r\n\r\n  </div>\r\n\r\n  <div class=\"row\">\r\n\r\n    price prediction\r\n    <div class=\"col-lg-12 \">\r\n      <h1 class=\"headingAi\">Sentiment Analysis </h1>\r\n\r\n      <div class=\"tab\">\r\n        <div class=\"row\">\r\n          <div class=\"col-lg-12\">\r\n          <p>Last Updated Date/Time: {{last_change_date}}</p>\r\n          <h4 class=\"text-danger\">\r\n            <span class=\"mr-3 text-danger\">Last Updated Date/Time:</span>  {{last_change_date}}\r\n          </h4>\r\n          <h2 for=\"ice-cream-choice\" class=\"mr-3\">Choose Coin:</h2>\r\n          <input class=\"inputcoinsearch mb-3 \" type=\"text\" list=\"productList\" name=\"product\" [(ngModel)]='currentProduct'\r\n            (change)=\"onProductChanged(currentProduct)\" />\r\n\r\n          <datalist id=\"productList\">\r\n            <option *ngFor=\"let data_coin_name of coins_list_api;\" [value]=\"data_coin_name.id\">\r\n              {{data_coin_name.id}} ({{data_coin_name.symbol}})\r\n            </option>\r\n          </datalist>\r\n        </div>\r\n        <div>\r\n        </div>\r\n          <div class=\"chartjs-container\">\r\n            <canvas baseChart height=\"800\" width=\"1200\" [datasets]=\"lineChartData\" [labels]=\"lineChartLabels\"\r\n              [options]=\"lineChartOptions\" [colors]=\"lineChartColors\" [legend]=\"lineChartLegend\" chartType=\"line\"\r\n              [plugins]=\"lineChartPlugins\">\r\n            </canvas>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n  </div>\r\n  \r\n</div> -->\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  ChangeDetectorRef\r\n} from '@angular/core';\r\nimport {\r\n  HttpClient,\r\n  HttpParams,\r\n  HttpHeaders\r\n} from '@angular/common/http';\r\nimport {\r\n  NgForm\r\n} from '@angular/forms';\r\nimport {\r\n  from,\r\n  Observable,\r\n  throwError\r\n} from 'rxjs';\r\nimport {\r\n  ChartDataSets,\r\n  ChartOptions,\r\n  ChartType\r\n} from 'chart.js';\r\nimport {\r\n  MultiDataSet,\r\n  Label,\r\n  SingleDataSet,\r\n  Color\r\n} from 'ng2-charts';\r\nimport {\r\n  MatPaginatorModule\r\n} from '@angular/material/paginator';\r\nimport {\r\n  color,\r\n  Dictionary\r\n} from 'highcharts';\r\nimport {\r\n  formatDate\r\n} from '@angular/common';\r\nimport * as StakingToken from '../../../abis/token/GriseToken.json';\r\nimport {\r\n  ContractService\r\n} from '../../services/contract.service';\r\nimport {\r\n  promise\r\n} from 'selenium-webdriver';\r\n\r\nimport * as Highcharts from 'highcharts';\r\n\r\ndeclare var require: any;\r\nconst More = require('highcharts/highcharts-more');\r\nMore(Highcharts);\r\n\r\nconst Exporting = require('highcharts/modules/exporting');\r\nExporting(Highcharts);\r\n\r\nconst ExportData = require('highcharts/modules/export-data');\r\nExportData(Highcharts);\r\n\r\nconst Accessibility = require('highcharts/modules/accessibility');\r\nAccessibility(Highcharts);\r\n\r\ndeclare let Web3: any;\r\ndeclare let window: any;\r\nconst web3 = window.web3;\r\n\r\n\r\n@Component({\r\n  selector: 'app-sentiment-analysis',\r\n  templateUrl: './sentiment-analysis.component.html',\r\n  styleUrls: ['./sentiment-analysis.component.scss']\r\n})\r\nexport class SentimentAnalysisComponent implements OnInit {\r\n  // contract\r\n  address: string;\r\n  public bar: any = [];\r\n\r\n  inv_type: string;\r\n  time_win: string;\r\n  time_frame: string;\r\n  min_cap: number;\r\n  max_cap: number;\r\n  limit: number;\r\n  url = `https://api.ethama.finance/get-best-coin`;\r\n  items: any = [];\r\n\r\n  highcharts = Highcharts;\r\n\r\n  // public pieChart: any = {\r\n  //   chart: {\r\n  //     type: 'pie',\r\n  //     backgroundColor: \"#3b4148\",\r\n  // },\r\n  // title: {\r\n  //     text: \"\",\r\n  //     style: {\r\n  //       color: '#fff',\r\n  //     }\r\n  // },\r\n  // tooltip: {\r\n  //     pointFormat: '{series.name}: {point.percentage:.1f}%'\r\n  // },\r\n  // accessibility: {\r\n  //     point: {\r\n  //         valueSuffix: '%'\r\n  //     }\r\n  // },\r\n  // plotOptions: {\r\n  //     pie: {\r\n  //         allowPointSelect: true,\r\n  //         cursor: 'pointer',\r\n  //         dataLabels: {\r\n  //             enabled: true,\r\n  //             format: '{point.name}: {point.percentage:.1f} %'\r\n  //         }\r\n  //     }\r\n  // },\r\n  // series: [{\r\n  //     name: 'Sentiment Analysis',\r\n  //     colorByPoint: true,\r\n  //     data: [{\r\n  //       name: 'Negative',\r\n  //       y: 0\r\n  //     }, {\r\n  //       name: 'Neutral',\r\n  //       y: 0\r\n  //     }, {\r\n  //       name: 'Positve',\r\n  //       y: 0\r\n  //     }]\r\n  // }]\r\n  // }\r\n\r\n  public pieChartOptions: any = {\r\n    responsive: true,\r\n    tooltips: {\r\n      backgroundColor: 'rgba(255,255,255,0.9)',\r\n      bodyFontColor: '#999',\r\n      borderColor: '#999',\r\n      titleFontColor: '#999',\r\n      titleFontSize: 20,\r\n      bodyFontSize: 20,\r\n      titleMarginBottom: 10,\r\n      xPadding: 15,\r\n      yPadding: 15,\r\n    },\r\n    legend: {\r\n      display: true,\r\n      fontSize: 20,\r\n      labels: {\r\n        fontColor: 'white',\r\n        fontSize: 20\r\n      }\r\n    }\r\n  };\r\n  public PieChartColor: Color[] = [{\r\n    backgroundColor: ['#2ecc71','#e74c3c','#f1c40f','#a05195','#d45087','#f95d6a','#ff7c43', '#ffa600', '#ca5300', '#aa2600']\r\n  }];\r\n  public pieChartLabels: Label[] = ['SciFi', 'Drama', 'Comedy'];\r\n  public pieChartData: SingleDataSet = [30, 50, 20];\r\n  public pieChartType: ChartType = 'pie';\r\n  public pieChartLegend = true;\r\n  public pieChartPlugins = [];\r\n  public loadData = true\r\n  public loadingstate: number;\r\n  public ld: number = 0;\r\n\r\n\r\n  public data_coins: any;\r\n  public trend_coins: any;\r\n\r\n\r\n\r\n  // Pagination\r\n  page_number: number;\r\n\r\n\r\n\r\n  // coin prediction line chart\r\n  // Array of different segments in chart\r\n  // public lineChartData: ChartDataSets[] = [];\r\n\r\n  // //Labels shown on the x-axis\r\n  // public lineChartLabels: any[] = [];\r\n\r\n  // // Define chart options\r\n  // lineChartOptions: ChartOptions = {\r\n  //   responsive: false,\r\n  //   tooltips: {\r\n  //     backgroundColor: 'rgba(255,255,255,0.9)',\r\n  //     bodyFontColor: '#999',\r\n  //     borderColor: '#999',\r\n  //     borderWidth: 1,\r\n  //     caretPadding: 15,\r\n  //     displayColors: false,\r\n  //     enabled: true,\r\n  //     intersect: true,\r\n  //     mode: 'x',\r\n  //     titleFontColor: '#999',\r\n  //     titleFontSize: 20,\r\n  //     bodyFontSize: 20,\r\n  //     titleMarginBottom: 10,\r\n  //     xPadding: 15,\r\n  //     yPadding: 15,\r\n  //   },\r\n  //   legend: {\r\n  //     labels: {\r\n  //       fontColor: 'white',\r\n  //       fontSize: 20\r\n  //     }\r\n  //   },\r\n  //   scales: {\r\n  //     xAxes: [{\r\n  //       ticks: {\r\n  //         fontColor: 'white',\r\n  //         fontSize: 20\r\n  //       },\r\n  //       gridLines: {\r\n  //         color: 'rgba(255,255,255,0.1)'\r\n  //       }\r\n  //     }],\r\n  //     yAxes: [{\r\n  //       ticks: {\r\n  //         fontColor: 'white',\r\n  //         fontSize: 20\r\n  //       },\r\n  //       gridLines: {\r\n  //         color: 'rgba(255,255,255,0.1)'\r\n  //       }\r\n  //     }]\r\n  //   }\r\n\r\n  // };\r\n\r\n  // // Define colors of chart segments\r\n  // lineChartColors: Color[] = [];\r\n\r\n  // // Set true to show legends\r\n  // lineChartLegend = true;\r\n\r\n  // // Define type of chart\r\n  // lineChartType = 'line';\r\n\r\n  // lineChartPlugins = [];\r\n\r\n\r\n  // coins_list_api\r\n  public coins_list_api: any = [];\r\n  // coin search dropdown\r\n  currentProduct: string = \"\";\r\n\r\n\r\n  // Last Change Date\r\n  public last_change_date: string;\r\n\r\n\r\n  // Trading Signal\r\n  // doughnutChartLabels: Label[] = ['Money IN-OUT', 'Largest Transaction', 'User Growth', 'Concentration On-Chain'];\r\n  // doughnutChartData: MultiDataSet = [];\r\n  // doughnutChartType: ChartType = 'doughnut';\r\n  // public doughnutChartColors: Color[] = [{\r\n  //   backgroundColor: ['#f1c40f', '#2ecc71', '#e74c3c', '#195EFF']\r\n  // }];\r\n\r\n  // DonOptions: ChartOptions = {\r\n  //   responsive: true,\r\n  //   tooltips: {\r\n  //     backgroundColor: 'rgba(255,255,255,0.9)',\r\n  //     bodyFontColor: '#999',\r\n  //     borderColor: '#999',\r\n  //     displayColors: false,\r\n  //     enabled: true,\r\n  //     intersect: true,\r\n  //     titleFontSize: 20,\r\n  //     bodyFontSize: 20,\r\n  //     titleMarginBottom: 10,\r\n  //     xPadding: 15,\r\n  //     yPadding: 15,\r\n  //   },\r\n  //   legend: {\r\n  //     labels: {\r\n  //       fontColor: 'white',\r\n  //       fontSize: 20\r\n  //     }\r\n  //   }\r\n  // }\r\n\r\n  // ai_decision_1: string;\r\n  // ai_decision_2: string;\r\n  // ai_decision_3: string;\r\n  // ai_decision_4: string;\r\n\r\n  // success_response: string;\r\n\r\n\r\n  // trade_coin_t: string;\r\n\r\n\r\n\r\n\r\n  constructor(private contractService: ContractService,\r\n    private http: HttpClient,\r\n  ) {\r\n    this.page_number = 1;\r\n\r\n  }\r\n\r\n  // signal Trading function\r\n  // coinListTrading(trade_coin: any) {\r\n  //   let final_coin_symbol = trade_coin.toUpperCase()\r\n  //   // console.log(final_coin_symbol)\r\n  //   let headers_trading = new HttpHeaders();\r\n  //   let params_trading = new HttpParams()\r\n  //     .set(\"fsym\", final_coin_symbol)\r\n  //     .set(\"api_key\", \"d00aa50b839f504c38e611fe15f168cb3f0361e4b192efb98e90dfc303acea7b\")\r\n  //   this.http.get(\"https://min-api.cryptocompare.com/data/tradingsignals/intotheblock/latest\", {\r\n  //     headers: headers_trading,\r\n  //     params: params_trading,\r\n  //     responseType: 'text'\r\n  //   }).toPromise().then(res_trading => {\r\n  //     let data_json_trading = JSON.parse(res_trading)\r\n\r\n  //     if (data_json_trading.Response != \"Error\") {\r\n  //       this.doughnutChartData = [data_json_trading.Data.inOutVar.score, data_json_trading.Data.largetxsVar.score, data_json_trading.Data.addressesNetGrowth.score, data_json_trading.Data.concentrationVar.score]\r\n  //       this.ai_decision_1 = data_json_trading.Data.inOutVar.sentiment\r\n  //       this.ai_decision_2 = data_json_trading.Data.largetxsVar.sentiment\r\n  //       this.ai_decision_3 = data_json_trading.Data.addressesNetGrowth.sentiment\r\n  //       this.ai_decision_4 = data_json_trading.Data.concentrationVar.sentiment\r\n\r\n  //       this.success_response = data_json_trading.Response + \" \" + data_json_trading.Message\r\n\r\n  //     } else {\r\n  //       this.doughnutChartData = []\r\n  //       this.ai_decision_1 = \"\"\r\n  //       this.ai_decision_2 = \"\"\r\n  //       this.ai_decision_3 = \"\"\r\n  //       this.ai_decision_4 = \"\"\r\n\r\n  //       this.success_response = data_json_trading.Response + \" \" + data_json_trading.Message\r\n\r\n\r\n  //     }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  //   })\r\n\r\n  // }\r\n\r\n  onProductChanged(productName: any) {\r\n    // console.log(productName);\r\n    // intial coin prediction graph\r\n    let headers = new HttpHeaders();\r\n    let params = new HttpParams()\r\n      .set(\"coin\", productName)\r\n    this.http.get('https://api.ethama.finance/get-sentiment-coin', {\r\n      headers: headers,\r\n      params: params,\r\n      responseType: 'text'\r\n    }).toPromise().then(Response => {\r\n      let coin_json = JSON.parse(Response);\r\n      let positive = Math.floor(coin_json.data.data.positive)\r\n      let Negative = Math.ceil(coin_json.data.data.negative)+1\r\n      let neutral = Math.floor(coin_json.data.data.neutral)\r\n      this.pieChartData = [positive,Negative,neutral]\r\n      this.pieChartLabels = ['Positive','Negative','Neutral']\r\n      // console.log(positive,Negative,neutral)\r\n      // this.pieChart = {\r\n      //   chart: {\r\n      //       type: 'pie',\r\n      //       backgroundColor: \"#3b4148\",\r\n      //   },\r\n      //   title: {\r\n      //       text: coin_json.data.data.coin_name,\r\n      //       style: {\r\n      //         color: '#fff',\r\n      //       }\r\n      //   },\r\n      //   tooltip: {\r\n      //       pointFormat: '{series.name}: {point.percentage:.1f}%'\r\n      //   },\r\n      //   accessibility: {\r\n      //       point: {\r\n      //           valueSuffix: '%'\r\n      //       }\r\n      //   },\r\n      //   plotOptions: {\r\n      //       pie: {\r\n      //           allowPointSelect: true,\r\n      //           cursor: 'pointer',\r\n      //           dataLabels: {\r\n      //               enabled: true,\r\n      //               format: '{point.name}: {point.percentage:.1f} %'\r\n      //           }\r\n      //       }\r\n      //   },\r\n      //   series: [{\r\n      //       name: 'Sentiment Analysis',\r\n      //       colorByPoint: true,\r\n      //       data: [{\r\n      //         name: 'Negative',\r\n      //         y: Negative,\r\n      //         color: '#e74c3c'\r\n      //       }, {\r\n      //         name: 'Neutral',\r\n      //         y: neutral,\r\n      //         color: '#f1c40f'\r\n      //       }, {\r\n      //         name: 'Positve',\r\n      //         y: positive,\r\n      //         color: '#2ecc71'\r\n      //       }]\r\n      //   }]\r\n      // }\r\n\r\n\r\n      // console.log(coin_json);\r\n      // let price: number[] = [];\r\n      // let time_stamp: string[] = [];\r\n\r\n      // console.log(coin_json)\r\n      // for (let data_coin of coin_json.data.predicted) {\r\n\r\n      //   let date = new Date(data_coin.ds)\r\n      //   let date_final: string = formatDate(date, 'yyyy/MM/dd', 'en');\r\n      //   price.push(data_coin.y)\r\n      //   time_stamp.push(date_final)\r\n\r\n\r\n      // }\r\n      // let price_past:number[]=[];\r\n      // let coin_timestamp_past:Date[]=[];\r\n\r\n      // for (let data_coin_past of coin_json.data.timeseries){\r\n\r\n      //   let date_past = new Date(data_coin_past.ds)\r\n      //   price_past.push(data_coin_past.y)\r\n      //   coin_timestamp_past.push(date_past)\r\n\r\n      // }\r\n\r\n      // console.log(coin_timestamp_past)\r\n\r\n      // this.lineChartData = [{\r\n      //   data: price,\r\n      //   label: \"Predicted Price\"\r\n      // }];\r\n      // this.lineChartLabels = time_stamp;\r\n\r\n\r\n      // console.log(this.trend_coins);\r\n    })\r\n\r\n  }\r\n\r\n  CustomOnInit(){\r\n    this.onProductChanged(\"bitcoin\")\r\n    // Highcharts.chart('container', this.pieChart);\r\n     // // get coin names for dropdown options\r\n    this.http.get('https://api.ethama.finance/get-coin-name').subscribe(Response => {\r\n      // console.log(Response);\r\n      let resSTR = JSON.stringify(Response);\r\n      let resJSON = JSON.parse(resSTR);\r\n      this.coins_list_api = resJSON.data.data;\r\n\r\n      // console.log(this.coins_list_api);\r\n    })\r\n\r\n\r\n    // // all coins api call\r\n    // this.http.get('https://api.ethama.finance/get-all-coin?page=' + this.page_number + '&per_page=10').subscribe(Response => {\r\n    //   // console.log(Response);\r\n    //   let resSTR = JSON.stringify(Response);\r\n    //   let resJSON = JSON.parse(resSTR);\r\n    //   this.data_coins = resJSON.data.data;\r\n    //   // console.log(data_coins);\r\n    // })\r\n\r\n    // // Trending coins api call\r\n    // this.http.get('https://api.ethama.finance/get-trending-coin').subscribe(Response => {\r\n    //   // console.log(Response);\r\n    //   let trendResSTR = JSON.stringify(Response);\r\n    //   let trendResJSON = JSON.parse(trendResSTR);\r\n    //   this.trend_coins = trendResJSON.data;\r\n    //   // console.log(this.trend_coins);\r\n    // })\r\n\r\n    // intial coin prediction graph\r\n    // let headers = new HttpHeaders();\r\n    // let params = new HttpParams()\r\n    //   .set(\"coin\", \"bitcoin\")\r\n    // this.http.get('https://api.ethama.finance/get-coin-predict', {\r\n    //   headers: headers,\r\n    //   params: params,\r\n    //   responseType: 'text'\r\n    // }).toPromise().then(Response => {\r\n    //   // console.log(Response);\r\n\r\n\r\n    //   let coin_json = JSON.parse(Response);\r\n    //   let price: number[] = [];\r\n    //   let time_stamp: string[] = [];\r\n\r\n    //   // last change date display\r\n    //   this.last_change_date = coin_json.data.last_updated_date\r\n    //   console.log(this.last_change_date)\r\n\r\n    //   // console.log(coin_json)\r\n    //   for (let data_coin of coin_json.data.predicted) {\r\n\r\n    //     let date = new Date(data_coin.ds)\r\n    //     let date_final: string = formatDate(date, 'yyyy/MM/dd', 'en');\r\n    //     price.push(data_coin.y)\r\n    //     time_stamp.push(date_final)\r\n\r\n\r\n    //   }\r\n    //   // let price_past:number[]=[];\r\n    //   // let coin_timestamp_past:Date[]=[];\r\n\r\n    //   // for (let data_coin_past of coin_json.data.timeseries){\r\n\r\n    //   //   let date_past = new Date(data_coin_past.ds)\r\n    //   //   price_past.push(data_coin_past.y)\r\n    //   //   coin_timestamp_past.push(date_past)\r\n\r\n    //   // }\r\n\r\n    //   // console.log(coin_timestamp_past)\r\n\r\n    //   this.lineChartData = [{\r\n    //     data: price,\r\n    //     label: \"Predicted Price\"\r\n    //   }];\r\n    //   this.lineChartLabels = time_stamp;\r\n\r\n\r\n    //   // console.log(this.trend_coins);\r\n    // })\r\n\r\n    // // Trading Signal\r\n    // let headers_trading = new HttpHeaders();\r\n    // let params_trading = new HttpParams()\r\n    //   .set(\"fsym\", \"BTC\")\r\n    //   .set(\"api_key\", \"d00aa50b839f504c38e611fe15f168cb3f0361e4b192efb98e90dfc303acea7b\")\r\n    // this.http.get(\"https://min-api.cryptocompare.com/data/tradingsignals/intotheblock/latest\", {\r\n    //   headers: headers_trading,\r\n    //   params: params_trading,\r\n    //   responseType: 'text'\r\n    // }).toPromise().then(res_trading => {\r\n    //   let data_json_trading = JSON.parse(res_trading)\r\n\r\n\r\n    //   if (data_json_trading.Response != \"Error\") {\r\n    //     this.doughnutChartData = [data_json_trading.Data.inOutVar.score, data_json_trading.Data.largetxsVar.score, data_json_trading.Data.addressesNetGrowth.score, data_json_trading.Data.concentrationVar.score]\r\n    //     this.ai_decision_1 = data_json_trading.Data.inOutVar.sentiment\r\n    //     this.ai_decision_2 = data_json_trading.Data.largetxsVar.sentiment\r\n    //     this.ai_decision_3 = data_json_trading.Data.addressesNetGrowth.sentiment\r\n    //     this.ai_decision_4 = data_json_trading.Data.concentrationVar.sentiment\r\n\r\n    //     this.success_response = data_json_trading.Response + \" \" + data_json_trading.Message\r\n\r\n    //   } else {\r\n    //     this.doughnutChartData = []\r\n    //     this.ai_decision_1 = \"\"\r\n    //     this.ai_decision_2 = \"\"\r\n    //     this.ai_decision_3 = \"\"\r\n    //     this.ai_decision_4 = \"\"\r\n\r\n    //     this.success_response = data_json_trading.Response + \" \" + data_json_trading.Message\r\n\r\n\r\n    //   }\r\n\r\n\r\n\r\n\r\n    // })\r\n  }\r\n\r\n  // f_address:string;\r\n  allowed_user: boolean = false;\r\n  staker_fuction() {\r\n    let lcladdress: string = '';\r\n    if (window.ethereum) {\r\n      let web3 = new Web3(window.ethereum);\r\n\r\n      try {\r\n        window.ethereum.enable().then(() => {\r\n          // User has allowed account access to DApp...\r\n          let promise = web3.eth.getAccounts(function (error: any, accounts: any[]) {\r\n\r\n            // console.log(accounts[0], 'current account on init');\r\n            lcladdress = accounts[0]\r\n            // console.log(lcladdress)\r\n            return accounts[0]\r\n          });\r\n\r\n\r\n          promise.then(async (account: any) => {\r\n            account = account;\r\n            this.address = account[0];\r\n\r\n            // console.log(this.address)\r\n\r\n            const stakingTokenContract = await this.contractService.getContractObject(StakingToken);\r\n            if (stakingTokenContract) {\r\n              const stakeCounts = await stakingTokenContract.methods.isStaker(this.address).call();\r\n              // console.log(stakeCounts)\r\n              this.allowed_user = stakeCounts;\r\n              this.CustomOnInit()\r\n            }\r\n          });\r\n        });\r\n      } catch (e) {\r\n        console.log('Please Connect MetaMsk !');\r\n        // User has denied account access to DApp...\r\n      }\r\n\r\n\r\n    } else {\r\n      console.log('You have to install MetaMask !');\r\n\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n  giveAccess(){\r\n    if(this.allowed_user){\r\n      this.allowed_user = false\r\n    }else{\r\n      this.allowed_user = true\r\n      this.CustomOnInit();\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // this.staker_fuction();\r\n    // this.CustomOnInit()\r\n  }\r\n\r\n  // function for pre_page pagination\r\n  // pre_page() {\r\n  //   // all coins api call\r\n  //   if (this.page_number > 1) {\r\n  //     this.page_number -= 1\r\n  //     this.http.get('https://api.ethama.finance/get-all-coin?page=' + this.page_number + '&per_page=10').subscribe(Response => {\r\n  //       // console.log(Response);\r\n  //       let resSTR = JSON.stringify(Response);\r\n  //       let resJSON = JSON.parse(resSTR);\r\n  //       this.data_coins = resJSON.data.data;\r\n  //       // console.log(data_coins);\r\n  //     })\r\n  //   } else {\r\n  //     this.http.get('https://api.ethama.finance/get-all-coin?page=' + this.page_number + '&per_page=10').subscribe(Response => {\r\n  //       // console.log(Response);\r\n  //       let resSTR = JSON.stringify(Response);\r\n  //       let resJSON = JSON.parse(resSTR);\r\n  //       this.data_coins = resJSON.data.data;\r\n  //       // console.log(data_coins);\r\n  //     })\r\n\r\n  //   }\r\n\r\n  // }\r\n  // // function for next_page pagination\r\n  // next_page() {\r\n  //   // all coins api call\r\n  //   if (this.page_number <= 900) {\r\n  //     this.page_number += 1\r\n  //     this.http.get('https://api.ethama.finance/get-all-coin?page=' + this.page_number + '&per_page=10').subscribe(Response => {\r\n  //       // console.log(Response);\r\n  //       let resSTR = JSON.stringify(Response);\r\n  //       let resJSON = JSON.parse(resSTR);\r\n  //       this.data_coins = resJSON.data.data;\r\n  //       // console.log(data_coins);\r\n  //     })\r\n  //   } else {\r\n  //     this.http.get('https://api.ethama.finance/get-all-coin?page=' + this.page_number + '&per_page=10').subscribe(Response => {\r\n  //       // console.log(Response);\r\n  //       let resSTR = JSON.stringify(Response);\r\n  //       let resJSON = JSON.parse(resSTR);\r\n  //       this.data_coins = resJSON.data.data;\r\n  //       // console.log(data_coins);\r\n  //     })\r\n\r\n  //   }\r\n\r\n  // }\r\n\r\n\r\n  // // on submit index api\r\n  // onSubmit(form: NgForm) {\r\n  //   // loading stop\r\n  //   this.ld = 1;\r\n  //   console.warn('your request has been submitted');\r\n  //   console.log(form.value);\r\n  //   // {inv_type: true, time_wind: true, : 'w'}\r\n  //   let form_json = form.value;\r\n  //   if (form_json.inv_type == true) {\r\n  //     this.inv_type = \"1\"\r\n  //   } else {\r\n  //     this.inv_type = \"0\"\r\n  //   }\r\n  //   if (form_json.time_wind == true) {\r\n  //     this.time_win = \"1\"\r\n  //   } else {\r\n  //     this.time_win = \"0\"\r\n  //   }\r\n  //   this.time_frame = form_json.exampleRadios\r\n  //   let headers = new HttpHeaders();\r\n  //   let params = new HttpParams()\r\n  //     .set(\"min_cap\", \"200\")\r\n  //     .set(\"max_cap\", \"947945765974\")\r\n  //     .set(\"inv_type\", this.inv_type)\r\n  //     .set(\"limit\", \"10\")\r\n  //     .set(\"time_frame\", this.time_frame)\r\n  //     .set(\"time_win\", this.time_win); //Create new HttpParams\r\n  //   this.http.get(this.url, {\r\n  //     headers: headers,\r\n  //     params: params,\r\n  //     responseType: 'text'\r\n  //   }).toPromise().then(data => {\r\n  //     let data_json = JSON.parse(data)\r\n  //     let coin_cap: number[] = [];\r\n  //     let coin_name: string[] = [];\r\n  //     for (let coin_data of data_json.data.data) {\r\n  //       coin_name.push(coin_data.id);\r\n  //       coin_cap.push(coin_data.market_cap_rank);\r\n  //     }\r\n  //     this.pieChartData = coin_cap;\r\n  //     this.pieChartLabels = coin_name;\r\n  //     console.log(this.pieChartLabels);\r\n  //     console.log(this.pieChartData);\r\n  //     this.loadData = false\r\n  //   });\r\n  //   setTimeout(() => { // <<<---using ()=> syntax\r\n  //     this.ld = 0;\r\n  //   }, 3000);\r\n  // }\r\n\r\n  // coin prediction function\r\n  predict_coin_price() {\r\n\r\n  }\r\n\r\n\r\n\r\n}\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment as env } from '../../environments/environment';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n// console.log(\"token is: \", localStorage.getItem('token'));\r\n// const tokenValue: any = new HttpHeaders({ authorization: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ3YWxsZXRBZGRyIjoiYWRkcl90ZXN0MXFxc21xNGt3eHR1bTBubnFwNm1uZG1nZGZuOWM1MGw1bGE3OGRoOXByczYwem56c3FnNW5qNXNtbmswNzNmYzZqeTR3dmNyanpqandseDY3enk5OWd0cmt4bG5zeGw0YTJ5IiwiaWF0IjoxNjM5MDgxNDEyLCJleHAiOjE2MzkxNjc4MTJ9.WwycHhpGT2aWBguLqnXpSTjlgOgzaDyY2s2fH1ueLqM' });\r\nconst authToken = localStorage.getItem('token')?.toString() || '';\r\nconst tokenValue: any = new HttpHeaders({ authorization: authToken });\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class NFTsAPIServices {\r\n  baseUrlAPI = env.baseUrlAPI;\r\n\r\n  AuthHeader: any;\r\n\r\n  // User Info\r\n  public userLoginData$: BehaviorSubject<any>;\r\n  // Auth Token\r\n  public userAuthToken$: BehaviorSubject<any>;\r\n  // Total Nami wallet's NFTs\r\n  public totalNamiWalletNFT$: BehaviorSubject<any>;\r\n  // Handle Claim button loading\r\n  public claimButtonLoading$: BehaviorSubject<any>;\r\n\r\n\r\n  public set loginData(_value: any) {\r\n    console.log(\"loginData :: =>> \", _value);\r\n    this.userLoginData$.next(_value.data);\r\n  }\r\n\r\n  public get loginData$() {\r\n    return this.userLoginData$.asObservable();\r\n  }\r\n  // End: User Info\r\n\r\n\r\n  // Auth Token\r\n  public set authToken(_value: any) {\r\n    console.log(\"authToken :: =>> \", _value);\r\n    this.userAuthToken$.next(_value.token);\r\n  }\r\n\r\n  public get authToken$() {\r\n    return this.userAuthToken$.asObservable();\r\n  }\r\n  // End: Auth Token\r\n\r\n\r\n  // Total Nami wallet's NFTs\r\n  public set totalNamiAssets(_value: any) {\r\n    console.log(\"totalNamiAssets :: =>> \", _value);\r\n    this.totalNamiWalletNFT$.next(_value.data);\r\n  }\r\n\r\n  public get totalNamiAssets$() {\r\n    return this.totalNamiWalletNFT$.asObservable();\r\n  }\r\n  // END: Total Nami wallet's NFTs\r\n\r\n  \r\n  // Handle Claim button loading\r\n  public set handleClaimBtnLoading(_value: any) {\r\n    console.log(\"handleClaimBtnLoading :: =>> \", _value);\r\n    this.claimButtonLoading$.next(_value.data);\r\n  }\r\n\r\n  public get handleClaimBtnLoading$() {\r\n    return this.claimButtonLoading$.asObservable();\r\n  }\r\n  // END: Handle Claim button loading\r\n\r\n  constructor(private readonly http: HttpClient) {\r\n    this.userLoginData$ = new BehaviorSubject<any>(false);\r\n    this.userAuthToken$ = new BehaviorSubject<any>(false);\r\n    this.totalNamiWalletNFT$ = new BehaviorSubject<any>(false);\r\n    this.claimButtonLoading$ = new BehaviorSubject<any>(false);\r\n    // Nothing\r\n  }\r\n\r\n\r\n\r\n  public async myNftsList(data) {\r\n    const resp: any = await new Promise(async (resolve, reject) => {\r\n      await this.userAuthToken$.subscribe(async (token) => {\r\n        const authTokenValue: any = new HttpHeaders({ authorization: token });\r\n        resolve(authTokenValue);\r\n      })\r\n    });\r\n\r\n    return this.http.post<any>(`${this.baseUrlAPI}/get-user-nfts-list`, data, { headers: resp }).toPromise();\r\n  }\r\n  public async trippyOwlList() {\r\n    return this.http.get<any>(`${this.baseUrlAPI}/trippy-owl-list`, { headers: tokenValue }).toPromise();\r\n  }\r\n  public async mintTrippyOwl(data: any) {\r\n    const resp: any = await new Promise(async (resolve, reject) => {\r\n      await this.userAuthToken$.subscribe(async (token) => {\r\n        const authTokenValue: any = new HttpHeaders({ authorization: token });\r\n        resolve(authTokenValue);\r\n      })\r\n    });\r\n\r\n    // console.log(\"check data on api: \", data);\r\n    return this.http.post<any>(`${this.baseUrlAPI}/trippy-mint`, data, { headers: resp }).toPromise();\r\n  }\r\n  public async verifyClaimedCollection(data: any) {\r\n    const resp: any = await new Promise(async (resolve, reject) => {\r\n      await this.userAuthToken$.subscribe(async (token) => {\r\n        const authTokenValue: any = new HttpHeaders({ authorization: token });\r\n        resolve(authTokenValue);\r\n      })\r\n    });\r\n\r\n    return this.http.post<any>(`${this.baseUrlAPI}/verify-trippy`, data, { headers: resp }).toPromise();\r\n  }\r\n\r\n  public async getGriseBalance() {\r\n    return this.http.get<any>(`${this.baseUrlAPI}/check-available-grise-ada`).toPromise();\r\n  }\r\n  public async sendGriseBalance(amount: any, walletAddress: any) {\r\n    const resp: any = await new Promise(async (resolve, reject) => {\r\n      await this.userAuthToken$.subscribe(async (token: any) => {\r\n        const authTokenValue: any = new HttpHeaders({ authorization: token });\r\n        resolve(authTokenValue);\r\n      })\r\n    });\r\n\r\n    return this.http.post<any>(`${this.baseUrlAPI}/withdraw-grise-ada`, { amount, walletAddress }, { headers: resp }).toPromise();\r\n  }\r\n\r\n  public async nftsList(data: any) {\r\n    return this.http.post<any>(`${this.baseUrlAPI}/nfts-list`, { data }).toPromise();\r\n  }\r\n\r\n  public async userRegister(data: any) {\r\n    // console.log(\"check data on api: \", data);\r\n    return this.http.post<any>(`${this.baseUrlAPI}/register-user`, data).toPromise();\r\n  }\r\n\r\n  public async mintNft(data: any) {\r\n    console.log(\"check data on api: \", data);\r\n    return this.http.post<any>(`${this.baseUrlAPI}/single-nft-mint`, data, { headers: tokenValue }).toPromise();\r\n  }\r\n\r\n  public async buyNft(data: any) {\r\n    console.log(\"check data on api: \", data);\r\n    return this.http.post<any>(`${this.baseUrlAPI}/buy-nft`, data, { headers: tokenValue }).toPromise();\r\n  }\r\n\r\n  public async verifyUserNft(data: any) {\r\n    console.log(\"check data on verifyUserNft api: \", data);\r\n    return this.http.post<any>(`${this.baseUrlAPI}/verify-nft`, data, { headers: tokenValue }).toPromise();\r\n  }\r\n\r\n  public async cancelUserNft(data: any) {\r\n    console.log(\"check data on api: \", data);\r\n    return this.http.post<any>(`${this.baseUrlAPI}/cancel-nft`, { data }, { headers: tokenValue }).toPromise();\r\n  }\r\n\r\n  public async setTokenPrice(data: any) {\r\n    console.log(\"check data on api: \", data);\r\n    return this.http.post<any>(`${this.baseUrlAPI}/set-nft-price`, data).toPromise();\r\n  }\r\n\r\n}","export enum SlotType {\r\n    Fixed = 1,\r\n    Random = 2\r\n}\r\n\r\nexport class SlotData {\r\n    id: number;\r\n    name: string;\r\n    type: SlotType;\r\n    color: string;\r\n    day?: number;\r\n    hours?: number;\r\n    startDate?: Date;\r\n    endDate?: Date;\r\n    option?: string;\r\n    slotLeft?: number;\r\n    totalInvest?: number;\r\n    myContribution?: number;\r\n    mySharePercent?: string;\r\n    timeLeft?: string;\r\n    progressDone?: number;\r\n    isSelected: boolean;\r\n    isExpired: boolean;\r\n    validationText?: string;\r\n    nftImg? : string;\r\n    nftDetail? : string;\r\n}\r\n","// my-loader.component.ts\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { LoaderService } from '../../services/loader.service';\r\n\r\n@Component({\r\n  selector: 'app-my-loader',\r\n  templateUrl: './my-loader.component.html',\r\n  styleUrls: ['./my-loader.component.scss']\r\n})\r\nexport class MyLoaderComponent implements OnInit {\r\n\r\n  loading: boolean;\r\n\r\n  constructor(private loaderService: LoaderService) {\r\n\r\n    this.loaderService.isLoading.subscribe((v) => {\r\n      this.loading = v;\r\n    });\r\n\r\n  }\r\n  ngOnInit() {\r\n  }\r\n\r\n}","<!-- my-loader.component.html -->\r\n<div class=\"progress-loader\" [hidden]=\"!loading\">\r\n    <div class=\"loading-spinner\">\r\n        <svg class=\"spinner\" viewBox=\"0 0 50 50\">\r\n            <circle class=\"path\" cx=\"25\" cy=\"25\" r=\"20\" fill=\"none\" stroke-width=\"5\"></circle>\r\n        </svg>\r\n        <span class=\"loading-message\">Please wait...</span>\r\n    </div>\r\n</div>","import { environment as env } from './../../environments/environment';\r\nimport { Injectable } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { SpinnerService } from '../helper/spinner/spinner.service';\r\n\r\ndeclare let Web3: any;\r\ndeclare let window: any;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ContractService {\r\n\r\n    isLogin = false;\r\n    accountNo = 0;\r\n    totalBalance = 0;\r\n    totalGriseBalance = 0;\r\n    referralAccountNo: string;\r\n    blankReferralAccountNo: string;\r\n    sponsorAccountNo: string;\r\n    liquidityAccountNo: string;\r\n    griseAccountNo: string;\r\n    isContractLoadOnNetwork: boolean;\r\n\r\n    constructor(private toastrService: ToastrService,\r\n        private spinnerService: SpinnerService) {\r\n        this.loadWeb3();\r\n        this.blankReferralAccountNo = '0x0000000000000000000000000000000000000000';\r\n    }\r\n\r\n    async loadWeb3() {\r\n        // if (window.ethereum) {\r\n        //     window.web3 = new Web3(window.ethereum);\r\n        //     await window.ethereum.enable();\r\n        // }\r\n        // else if (window.web3) {\r\n        //     window.web3 = new Web3(window.web3.currentProvider);\r\n        // }\r\n        //else {\r\n            //this.toastrService.error('Non-Ethereum browser detected. You should consider trying MetaMask!');\r\n            this.spinnerService.hide();\r\n        //}\r\n    }\r\n\r\n    async getContractObject(currentAbis: any): Promise<any> {\r\n        try {\r\n            const web3 = window.web3;\r\n\r\n            if (web3 != undefined && web3 != null) {\r\n                const networkId = await web3.eth.net.getId();\r\n                const networks: { [key: string]: any } = currentAbis.default.networks;\r\n                const contractData = networks[networkId];\r\n                if (contractData) {\r\n                    this.isContractLoadOnNetwork = true;\r\n                    return new web3.eth.Contract(currentAbis.default.abi, contractData.address);\r\n                    // setHomeContract(hdc);\r\n                } else {\r\n                    this.isContractLoadOnNetwork = false;\r\n                    const toastMessage = 'Contract not deployed on BSC mainnet, Please change network to BSC Testnet and refresh page.';\r\n                    if(toastMessage != this.toastrService.previousToastMessage)                    \r\n                        // this.toastrService.error(toastMessage);\r\n                    this.spinnerService.hide();\r\n                }\r\n            }\r\n        } catch (ex) {\r\n            // this.toastrService.error(ex);\r\n            this.spinnerService.hide();\r\n        }\r\n        return null;\r\n    }\r\n\r\n    convertAmountInBigUnit(smallUnit: number): number {\r\n        const web3 = window.web3;\r\n\r\n        if (web3 != undefined && web3 != null) {\r\n            return +web3.utils.fromWei(smallUnit, 'Ether');\r\n        }\r\n        return smallUnit;\r\n    }\r\n\r\n    convertAmountInSmallUnit(bigUnit: number) {\r\n        const web3 = window.web3;\r\n\r\n        if (web3 != undefined && web3 != null) {\r\n            return web3.utils.toWei(bigUnit.toString(), 'Ether');\r\n        }\r\n        return bigUnit;\r\n    }\r\n\r\n    async getAccountInfo() {\r\n        try {\r\n            const web3 = window.web3;\r\n\r\n            if (web3 != undefined && web3 != null) {\r\n                const acc = await web3.eth.getAccounts();\r\n                const balance = await web3.eth.getBalance(acc[0]);\r\n                this.accountNo = acc[0];\r\n                this.totalBalance = +await web3.utils.fromWei(balance);\r\n                return true;\r\n            }\r\n        } catch (ex) { }\r\n        return false;\r\n    }\r\n\r\n    async getAccountBalance(accountNo: string) {\r\n        try {\r\n            const web3 = window.web3;\r\n\r\n            if (web3 != undefined && web3 != null) {\r\n                let balance = await web3.eth.getBalance(accountNo);\r\n                balance = await web3.utils.fromWei(balance);\r\n                return +balance;\r\n            }\r\n        } catch (ex) { }\r\n        return 0;\r\n    }\r\n\r\n    async connectToWallet() {\r\n        this.isLogin = await this.getAccountInfo();\r\n    }\r\n}\r\n","import { ContractService } from './../../../services/contract.service';\r\nimport { Component, Input, OnChanges, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { LocalDataUpdateService } from 'src/app/services/local-data-update.service';\r\nimport { ClipboardService } from 'ngx-clipboard';\r\n\r\n@Component({\r\n  selector: 'app-referral-link-dialog',\r\n  templateUrl: './referral-link-dialog.component.html',\r\n  styleUrls: ['./referral-link-dialog.component.scss']\r\n})\r\nexport class ReferralLinkDialogComponent implements OnInit {\r\n\r\n  referralUrl: string;\r\n  urlCopied = false;\r\n    \r\n  constructor(\r\n    //public dialogRef: MatDialogRef<ReferralLinkDialogComponent>,\r\n    private contractService: ContractService,\r\n    private localDataUpdateService: LocalDataUpdateService,\r\n    private _clipboardService: ClipboardService) { }\r\n\r\n  ngOnInit() {\r\n    this.localDataUpdateService.isDialogDataUpdated.subscribe((state) => {\r\n      if (state) {\r\n        this.generateReferralUrl();\r\n      }\r\n    });\r\n  }\r\n\r\n  generateReferralUrl() {\r\n    const parsedUrl = new URL(window.location.href);\r\n    const baseUrl = parsedUrl.origin;\r\n    this.referralUrl = baseUrl + '?referralCode=' + this.contractService.accountNo;\r\n    this.urlCopied = false;\r\n  }\r\n\r\n  copyUrl() {\r\n    document.execCommand(this.referralUrl);\r\n    //this._clipboardService.copy(this.referralUrl);\r\n    this.urlCopied = true;\r\n  }\r\n\r\n  onClose() {\r\n    //this.dialogRef.close();\r\n    //this.urlCopied = false;\r\n  }\r\n  \r\n}\r\n","<!-- <div class=\"dialog-container\">\r\n    <h2 mat-dialog-title>Referral Link</h2>\r\n    <a class=\"btn-close\" href=\"javascript:void(0)\" (click)=\"onClose()\">X</a>\r\n    <div mat-dialog-content>\r\n        <h3 class=\"header-text\">Your Referral Link:</h3>\r\n        <input type=\"text\" class=\"referralUrl\" disabled [value]=\"referralUrl\">\r\n    </div>\r\n    <div mat-dialog-actions>\r\n        <button class=\"btn btn-primary tab-button\" [cdkCopyToClipboard]=\"referralUrl\" (click)=\"copyUrl()\">{{ urlCopied ?\r\n            'Copied Referral Link' : 'Copy Referral Link' }}</button>\r\n    </div>\r\n</div> -->\r\n\r\n<div style=\"color: black;\" class=\"modal fade\" id=\"referralModal\" data-backdrop=\"static\" data-keyboard=\"true\"\r\n    tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"referralModalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-dialog-centered modal-md\" role=\"document\">\r\n        <div class=\"modal-content dialog-container\">\r\n            <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\" id=\"referralModalLabel\">\r\n                    Referral Link</h5>\r\n                <a class=\"btn-close\" href=\"javascript:void(0)\" data-dismiss=\"modal\" (click)=\"onClose()\">X</a>\r\n            </div>\r\n            <div class=\"modal-body\" #container>\r\n                <h3 class=\"header-text\">Your Referral Link:</h3>\r\n                <input type=\"text\" class=\"referralUrl\" disabled [value]=\"referralUrl\">\r\n            </div>\r\n            <div class=\"modal-footer\" style=\"padding:0; margin:0\">\r\n                <button class=\"btn btn-primary tab-button\" ngxClipboard [container]=\"container\" [cbContent]=\"referralUrl\" (click)=\"copyUrl()\">{{\r\n                    urlCopied ? 'Copied Referral Link' : 'Copy Referral Link' }}</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","<div class=\"container-fluid bg-color px-0 video-part\">\r\n    <div class=\"content_video ml-auto\">\r\n      <div class=\"row h_custom_100\">\r\n        <div class=\"w-100 h_custom_100 position-relative\">\r\n          \r\n         <div class=\"leftsidebar position-relative d-none\" [ngClass]=\"{'width-0': zeroWidth}\">\r\n           <a  class=\"sidebar-button\" (click)=\"hideSideBar()\">\r\n             <div *ngIf=\"!hideArrow\">\r\n              <i class=\"fas fa-chevron-left\"></i>\r\n             </div>\r\n             <div *ngIf=\"hideArrow\">\r\n              <i class=\"fas fa-chevron-right\"></i>\r\n             </div>\r\n            \r\n           </a>\r\n          <div class=\"leftsidebar-container\" *ngIf=\"hideleftside\">\r\n              <div class=\"\">\r\n                <div class=\"leftsidr-bar-top d-flex justify-content-between  align-items-center w-100\">\r\n                  <h4 class=\"mb-0\">Map</h4>\r\n                  <a href=\"javascript:void(0);\">Clear</a>\r\n                </div>\r\n\r\n                <div class=\"check-box-map d-flex align-items-start flex-column border-top\">\r\n                  <div class=\"form-check\">\r\n                    <input class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"forSale\">\r\n                    <label class=\"form-check-label\" for=\"forSale\">\r\n                      For Sale\r\n                    </label>\r\n                  </div>\r\n                  <div class=\"form-check\">\r\n                    <input class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"premium\">\r\n                    <label class=\"form-check-label\" for=\"premium\">\r\n                      Premium\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n\r\n\r\n                <div class=\"check-box-map d-flex align-items-start flex-column border-top\">\r\n                  <h4 class=\"text-white mb-2\">Find Land on <a href=\"https://cnft.io/\" target=\"_blank\">cnft.io</a></h4>\r\n                  <div class=\"form-check\">\r\n                    <input class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"radio1\">\r\n                    <label class=\"form-check-label\" for=\"radio1\">\r\n                      1 x 1\r\n                    </label>\r\n                  </div>\r\n\r\n                  <div class=\"form-check\">\r\n                    <input class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"radio2\">\r\n                    <label class=\"form-check-label\" for=\"radio2\">\r\n                      3 x 3\r\n                    </label>\r\n                  </div>\r\n\r\n                  <div class=\"form-check\">\r\n                    <input class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"radio3\">\r\n                    <label class=\"form-check-label\" for=\"radio3\">\r\n                      6 x 6\r\n                    </label>\r\n                  </div>\r\n\r\n                  <div class=\"form-check\">\r\n                    <input class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"radio4\">\r\n                    <label class=\"form-check-label\" for=\"radio4\">\r\n                      12 x 12\r\n                    </label>\r\n                  </div>\r\n\r\n                  <div class=\"form-check\">\r\n                    <input class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"radio5\">\r\n                    <label class=\"form-check-label\" for=\"radio5\">\r\n                      24 x 24\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"check-box-map d-flex align-items-start flex-column border-top\">\r\n                  <h4 class=\"text-white mb-2 d-flex justify-content-between w-100\">Coordinates <span data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" title=\"Filters all lands between min(x,y) and max(x,y). Min must be lesser than max one. \"><i class=\"fas fa-info-circle\"></i></span></h4>\r\n                  <div class=\"coordinates-input\">\r\n                    <div>\r\n                      <label>Min (X,Y)</label>\r\n                      <input type=\"text\" placeholder=\"\" class=\"form-control\" placeholder=\"0, 0\" disabled/>\r\n                    </div>\r\n                    <div>\r\n                      <label>Max (X,Y)</label>\r\n                      <input type=\"text\" placeholder=\"\" class=\"form-control\" placeholder=\"0, 0\" disabled/>\r\n                    </div>\r\n                  </div>\r\n                  <button>Apply</button>\r\n                </div>\r\n\r\n                <div class=\"check-box-map d-flex align-items-start flex-column border-top\">\r\n                  <h4 class=\"text-white mb-2 d-flex justify-content-between w-100\">Wallet </h4>\r\n                  <div class=\"coordinates-input\">\r\n                    \r\n                      <input type=\"text\" placeholder=\"\" class=\"form-control w-100\" placeholder=\"ex: addr2b323567...........\" disabled/>\r\n                    \r\n                  </div>\r\n                </div>\r\n              </div>\r\n          </div>\r\n         </div>\r\n          \r\n          <div class=\"moonmapbg position-relative \">\r\n            <div class=\"loader-box\" [ngClass]=\"{'pl-3': zeroWidth}\">\r\n              <div style=\"font-size: 30px; margin-top: 21%; line-height: normal; padding:0px 10px;\" class=\"text-center mb-5\">\r\n                coming soon\r\n                <div>\r\n                  <img class=\"sidebar-icon\" src=\"https://bnb-grise-assests.s3.us-west-2.amazonaws.com/assets/dashboard.png\" alt=\"dashboard\">\r\n                  <br>\r\n                  <div class=\"d-flex justify-content-center access-btn-div\">\r\n                 \r\n                  </div>\r\n                </div>\r\n              \r\n            </div>\r\n              \r\n            </div>\r\n          </div>\r\n          \r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  \r\n  ","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-moonverse',\r\n  templateUrl: './moonverse.component.html',\r\n  styleUrls: ['./moonverse.component.scss']\r\n})\r\nexport class MoonverseComponent implements OnInit {\r\n  \r\n  constructor() { }\r\n  hideleftside :boolean= true;\r\n  zeroWidth : boolean = false;\r\n  hideArrow : boolean = false;\r\n  ngOnInit(): void {\r\n  }\r\n  hideSideBar(){\r\n    this.hideleftside = !this.hideleftside;\r\n    this.zeroWidth = !this.zeroWidth;\r\n    this.hideArrow = !this.hideArrow;\r\n  }\r\n\r\n}\r\n","import { environment as env } from './../../environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class GraphDataService {\r\n\r\n    graphAPIBaseUrl = env.graphAPIBaseUrl;\r\n\r\n    constructor(private httpClient: HttpClient) { }\r\n\r\n    getTableData(): Observable<any> {\r\n        return this.httpClient.get(this.graphAPIBaseUrl);\r\n    }\r\n\r\n    getGraphHistoryData(): Observable<any> {\r\n        return this.httpClient.get(this.graphAPIBaseUrl + '/history');\r\n    }\r\n\r\n    // getEthPrice(): Observable<any> {\r\n    //     return this.httpClient.post(this.graphAPIBaseUrl,\r\n    //         {\r\n    //             query: `{ bundle(id: 1) { ethPrice }}`\r\n    //         });\r\n    // }\r\n\r\n    // getTotalLiquidity(address: string): Observable<any> {\r\n    //     return this.httpClient.post(this.graphAPIBaseUrl,\r\n    //         {\r\n    //             query: `{ token(id: \\\"${address}\\\") { derivedETH totalLiquidity } }`\r\n    //         });\r\n    // }\r\n\r\n    // getTokenInititalDayDatas(address: string, fromDate: number): Observable<any> {\r\n    //     return this.httpClient.post(this.graphAPIBaseUrl,\r\n    //         {\r\n    //             query: `{ tokenDayDatas(where: { token: \\\"${address}\\\", date: ${fromDate} }) { date priceUSD } }`\r\n    //         });\r\n    // }\r\n\r\n    // getTokenDayDatas(address: string, fromDate: number): Observable<any> {\r\n    //     return this.httpClient.post(this.graphAPIBaseUrl,\r\n    //         {\r\n    //             query: `{ tokenDayDatas(where: { token: \\\"${address}\\\", date_gt: ${fromDate} }) { date priceUSD token{derivedETH} } }`\r\n    //         });\r\n    // }\r\n\r\n    // getMarketCapData(address: string): Observable<any> {\r\n    //     return this.httpClient.post(this.graphAPIBaseUrl,\r\n    //         {\r\n    //             query: `{ pairs(where: { id: \\\"${address}\\\" }) { id totalSupply reserve0 reserve1 token0{name,totalSupply} token1{name} } }`\r\n    //         });\r\n    // }\r\n}\r\n","import { NFTContentData } from \"./nft-content-data\";\r\n\r\nexport enum NFTContentGroup {\r\n    Mythic = 1,\r\n    Rare = 2,\r\n    Legendary = 3,\r\n    Common = 4,\r\n    key = 0,\r\n}\r\n\r\nexport class NFTContentGroupData {\r\n    id: number;\r\n    contentGroup: NFTContentGroup;\r\n    contentHeader: string;\r\n    contentData: NFTContentData[];\r\n}\r\n\r\nexport class NftObjData {\r\n    _id: string;\r\n    assetName: string;\r\n    availableForSale: boolean;\r\n    amount: string;\r\n    owned_by: string;\r\n    quantity: string;\r\n    userNftId: string;\r\n    ownerAddr: string;\r\n    metadata: any;\r\n    assetKey: string;\r\n    imageUrl: string;\r\n    imageLink: string;\r\n}\r\n\r\nclass userNftData {\r\n    _id: string;\r\n    amount: number;\r\n    userNftId: string;\r\n    userId: string;\r\n}\r\n\r\nexport class BuyNftObjData {\r\n    _id: string;\r\n    assetName: string;\r\n    // availableForSale: boolean;\r\n    // amount: string;\r\n    // owned_by: string;\r\n    // quantity: string;\r\n    // userNftId: string;\r\n    // ownerAddr: string;\r\n    userNftData: userNftData\r\n}","export class PersonalPeriodStakeSetup {\r\n    periodType: string;\r\n    additionalValue: string;\r\n    stakeStep: number;\r\n    slotLeft: number;\r\n}\r\n","import { ClipboardModule } from \"@angular/cdk/clipboard\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { MatTabsModule } from \"@angular/material/tabs\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { DashboardComponent } from \"./components/dashboard/dashboard.component\";\r\nimport { LiquidityComponent } from \"./components/dashboard/liquidity/liquidity.component\";\r\nimport { PersonalComponent } from \"./components/dashboard/personal/personal.component\";\r\nimport { ReferralsComponent } from \"./components/dashboard/referrals/referrals.component\";\r\nimport { RefundHistoryComponent } from \"./components/dashboard/refund-history/refund-history.component\";\r\nimport { RewardComponent } from \"./components/dashboard/reward/reward.component\";\r\nimport { DialogComponent } from \"./components/dialog/dialog.component\";\r\nimport { HomeComponent } from \"./components/home/home.component\";\r\nimport { ReservationComponent } from \"./components/reservation/reservation.component\";\r\nimport { ReferralLinkDialogComponent } from \"./components/tokeninfo/referral-link-dialog/referral-link-dialog.component\";\r\nimport { TokeninfoComponent } from \"./components/tokeninfo/tokeninfo.component\";\r\nimport { StakingComponent } from \"./components/tokenstats/staking/staking.component\";\r\nimport { TokenstatsComponent } from \"./components/tokenstats/tokenstats.component\";\r\nimport { ConfirmDialogComponent } from \"./helper/confirm-dialog/confirm-dialog.component\";\r\nimport { SpinnerComponent } from \"./helper/spinner/spinner.component\";\r\nimport { MatTooltipModule } from \"@angular/material/tooltip\";\r\nimport { NFTComponent } from \"./components/nft/nft.component\";\r\nimport { TokenMetrixComponent } from \"./components/token-metrix/token-metrix.component\";\r\nimport { LaunchTimerDialogComponent } from \"./components/launch-timer-dialog/launch-timer-dialog.component\";\r\nimport { TokenDataComponent } from \"./components/tokenstats/token-data/token-data.component\";\r\nimport { LandingPageComponent } from \"./components/landing-page/landing-page.component\";\r\nimport { SellFormComponent } from \"./components/sell-form/sell-form.component\";\r\nimport { MergepopupComponent } from \"./components/mergepopup/mergepopup.component\";\r\nimport { RoadmapComponent } from \"./components/roadmap/roadmap.component\";\r\nimport { InfoComponent } from \"./components/info/info.component\";\r\nimport { LoginComponent } from \"./components/login/login.component\";\r\nimport { ComingSoonComponent } from \"./components/coming-soon/coming-soon.component\";\r\nimport { NftCollectionComponent } from \"./components/nft-collection/nft-collection.component\";\r\nimport { MyNftsComponent } from \"./components/my-nfts/my-nfts.component\";\r\nimport { MoonverseComponent } from \"./components/moonverse/moonverse.component\";\r\nimport { OwlybirdComponent } from \"./components/owly-bird/owly-bird.component\";\r\nimport { TrippyOwlDetailComponent } from \"./components/trippy-owl-detail/trippy-owl-detail.component\";\r\nimport { SentimentAnalysisComponent } from './components/sentiment-analysis/sentiment-analysis.component';\r\nimport { CoinDetailsComponent } from './components/coin-details/coin-details.component';\r\nimport { CoinSummaryComponent } from './components/coin-details/coin-summary/coin-summary.component';\r\nimport { CoinMarketComponent } from './components/coin-details/coin-market/coin-market.component';\r\nimport { CoinPredictionComponent } from './components/coin-details/coin-prediction/coin-prediction.component';\r\nimport { CoinTweetsComponent } from './components/coin-details/coin-tweets/coin-tweets.component';\r\nimport { CoinTechnicalAnalysisComponent } from './components/coin-details/coin-technical-analysis/coin-technical-analysis.component';\r\nimport { CoinCorelationComponent } from './components/coin-details/coin-corelation/coin-corelation.component';\r\nimport { GoogleTrendsComponent } from './components/coin-details/google-trends/google-trends.component'\r\nimport { AdminpanelComponent } from \"./components/adminpanel/adminpanel.component\";\r\n\r\nconst material = [MatTabsModule, ClipboardModule, MatTooltipModule];\r\nconst routes: Routes = [\r\n  //{ path: \"\", redirectTo: \"dashboard\", pathMatch: \"full\" },\r\n  { path: \"home\", component: HomeComponent },\r\n  { path: \"\", redirectTo: \"home\", pathMatch: \"full\" },\r\n  { path: \"reservation\", component: ReservationComponent },\r\n  {\r\n    path: \"dashboard\",\r\n    component: DashboardComponent,\r\n    children: [\r\n      { path: \"\", redirectTo: \"personal\", pathMatch: \"full\" },\r\n      { path: \"personal\", component: PersonalComponent },\r\n      { path: \"liquidity\", component: LiquidityComponent },\r\n      { path: \"referrals\", component: ReferralsComponent },\r\n      { path: \"refundhistory\", component: RefundHistoryComponent },\r\n      { path: \"reward\", component: RewardComponent },\r\n    ],\r\n  },\r\n  {\r\n    path: 'coin-details', component: CoinDetailsComponent, children: [\r\n      { path: '', redirectTo: 'summary', pathMatch: 'full' },\r\n      { path: 'summary', component: CoinSummaryComponent },\r\n      { path: 'market', component: CoinMarketComponent },\r\n      { path: 'prediction', component: CoinPredictionComponent },\r\n      { path: 'google-trend', component: GoogleTrendsComponent },\r\n      { path: 'tweets', component: CoinTweetsComponent },\r\n      { path: 'technical-analysis', component: CoinTechnicalAnalysisComponent },\r\n      { path: 'correlation', component: CoinCorelationComponent }\r\n    ]\r\n  },\r\n  {\r\n    path: \"tokenstats\",\r\n    component: TokenstatsComponent,\r\n    children: [\r\n      { path: \"\", redirectTo: \"tokendata\", pathMatch: \"full\" },\r\n      { path: \"tokendata\", component: TokenDataComponent },\r\n      { path: \"staking\", component: StakingComponent },\r\n    ],\r\n  },\r\n  { path: 'sentiment-analysis', component: SentimentAnalysisComponent },\r\n  { path: \"tokeninfo\", component: TokeninfoComponent },\r\n  { path: \"nft\", component: NFTComponent },\r\n  { path: \"AI\", component: TokenMetrixComponent },\r\n  { path: \"vaultz\", component: TokenMetrixComponent },\r\n  { path: \"landing\", component: LandingPageComponent },\r\n  { path: \"form\", component: SellFormComponent },\r\n  { path: \"merge\", component: MergepopupComponent },\r\n  { path: \"roadmap\", component: RoadmapComponent },\r\n  { path: \"info\", component: InfoComponent },\r\n  { path: \"login\", component: LoginComponent },\r\n  { path: \"comingsoon\", component: ComingSoonComponent },\r\n  { path: \"nft-collection\", component: NftCollectionComponent },\r\n  { path: \"my-nfts\", component: MyNftsComponent },\r\n  { path: \"moonverse\", component: MoonverseComponent },\r\n  { path: \"owly-bird\", component: OwlybirdComponent },\r\n  { path: \"trippy-owl-listing\", component: TrippyOwlDetailComponent },\r\n  { path: \"adminpanel\", component: AdminpanelComponent },\r\n  { path: \"**\", redirectTo: \"dashboard\", pathMatch: \"full\" },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes,{useHash : true})],\r\n  exports: [RouterModule, material],\r\n})\r\nexport class AppRoutingModule {}\r\nexport const routingmod = [\r\n  HomeComponent,\r\n  DialogComponent,\r\n  StakingComponent,\r\n  ReservationComponent,\r\n  DashboardComponent,\r\n  LiquidityComponent,\r\n  PersonalComponent,\r\n  ReferralsComponent,\r\n  RefundHistoryComponent,\r\n  TokenstatsComponent,\r\n  TokeninfoComponent,\r\n  RewardComponent,\r\n  SpinnerComponent,\r\n  ConfirmDialogComponent,\r\n  ReferralLinkDialogComponent,\r\n  LaunchTimerDialogComponent,\r\n  NFTComponent,\r\n  TokenMetrixComponent,\r\n  TokenDataComponent,\r\n  SentimentAnalysisComponent,\r\n  CoinDetailsComponent,\r\n  CoinSummaryComponent\r\n];\r\n","class Loader {\r\n  async load() {\r\n    if (this._wasm) return;\r\n    /**\r\n     * @private\r\n     */\r\n    this._wasm = await import(\"@emurgo/cardano-serialization-lib-browser/\");\r\n  }\r\n\r\n  get Cardano() {\r\n    return this._wasm;\r\n  }\r\n}\r\n\r\nexport default new Loader();","\r\n\r\n<button class=\"w3-button w3-round-xlarge Connect-wallet accNO\" *ngIf=\"!isLogin\" (click)=\"connectWithCardanoWallet()\">Connect to Wallet</button>\r\n<div style=\"\" *ngIf=\"isLogin\">\r\n    <div\r\n      class=\"w3-button w3-round-xlarge Connect-wallet accNO\"\r\n    >\r\n      <a\r\n        class=\"hello w3-button w3-round-xlarge Connect-wallet without-accno\" \r\n        mat-button\r\n        style=\"padding-left: 0\"\r\n        (click)=\"refetchBalance()\"\r\n      >\r\n        <span style=\"width: 100%\">{{ accountNo | formattedAccountNo }}</span>\r\n      </a>\r\n      <span class=\"truncate\" style=\"width: 30px\" (click)=\"logout()\">\r\n        <i class=\"fas fa-sign-out-alt logout\" aria-hidden=\"true\"></i>\r\n      </span>\r\n    </div>\r\n    </div>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ContractService } from 'src/app/services/contract.service';\r\nimport { GriseTokenContractService } from 'src/app/services/grise-token-contract.service';\r\nimport { LiquidityContractService } from 'src/app/services/liquidity-contract.service';\r\nimport { LocalDataUpdateService } from 'src/app/services/local-data-update.service';\r\nimport { MinAbiDataContractService } from 'src/app/services/minabi-data-contract.service';\r\nimport { SharedService } from 'src/app/services/shared.service';\r\nimport Loader from '../../services/nami-loader.service'\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { environment as env } from \"../../../environments/environment\";\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { GraphDataService } from 'src/app/services/graph-data.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-mata-mask-button',\r\n  templateUrl: './mata-mask-button.component.html',\r\n  styleUrls: ['./mata-mask-button.component.scss']\r\n})\r\nexport class MataMaskButtonComponent implements OnInit {\r\n\r\n  isLogin = false;\r\n  accountNo = 0;\r\n  totalBalance = 0;\r\n  refAccountNo = \"\";\r\n  griseBalance = 0;\r\n  currentLPDay = 0;\r\n  launchOn = env.launchTimeStamp;\r\n  showLaunchTimerDialog = false;\r\n  totalGriseSupply: number;\r\n  priceData: any;\r\n  marketCapValue: number;\r\n  walletAddr: string;\r\n  walletBalance: any;\r\n  coinsData: any;\r\n  coinsDataList = [];\r\n  public btc: number;\r\n  public ada: number;\r\n  public eth: number;\r\n  public dot: number;\r\n\r\n  constructor(\r\n    public dialog: MatDialog,\r\n    private contractService: ContractService,\r\n    private sharedService: SharedService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private griseTokenContractService: GriseTokenContractService,\r\n    private localDataUpdateService: LocalDataUpdateService,\r\n    private router: Router,\r\n    private minAbiDataContractService: MinAbiDataContractService,\r\n    private liquidityContractService: LiquidityContractService,\r\n    private toastrService: ToastrService,\r\n    private http: HttpClient,\r\n    private graphDataService: GraphDataService\r\n  ) { }\r\n\r\n  async ngOnInit() {\r\n    //this.testFunc();\r\n    // this.connectWithCardanoWallet();\r\n\r\n\r\n    //    cardano.getChangeAddress().then((res: any) => {\r\n    //      console.log(\"address: \", res);\r\n    //     const balance = cardanoSerialize.Value.from_bytes(Buffer.from(res, 'hex'));\r\n    //     const lovelaces = balance.coin().to_str();\r\n\r\n    //     localStorage.setItem(\"Address\", lovelaces);\r\n    //     console.log(balance, \"**  Address  ** \",lovelaces);\r\n    //  })\r\n\r\n    // const value = cardanoSerialize.Value.from_bytes() // your value\r\n    // const lovelace = value.coin().to_str();\r\n    // if (value.multiasset()) {\r\n    // const multiAssets = value.multiasset().keys();\r\n    // for (let j = 0; j < multiAssets.len(); j++) {\r\n    //   const policy = multiAssets.get(j);\r\n    //   const policyAssets = value.multiasset().get(policy);\r\n    //   const assetNames = policyAssets.keys();\r\n    //   for (let k = 0; k < assetNames.len(); k++) {\r\n    //     const assetPolicy = Buffer.from(policy.to_bytes()).toString(\"hex\"); // hex encoded policy\r\n    //     const assetName = Buffer.from(assetNames.get(k).name(),\"hex\").toString(); // utf8 encoded asset name\r\n    //     const quantity = policyAssets.get(policyAsset).to_str(); // asset's quantity\r\n\r\n    //     // your code here\r\n\r\n    //   }\r\n    // }\r\n\r\n    //     const value = CSL.Value.from_bytes(...) // your value\r\n    // const lovelace = value.coin().to_str();\r\n\r\n    this.showLaunchDialog();\r\n    this.assignContractAccounts();\r\n    this.minAbiDataContractService.setChainId();\r\n    this.sharedService.initPersonalPeriodStakes();\r\n    this.connectToWallet();\r\n    this.getTokenData();\r\n    let header = new HttpHeaders().set(\"Access-Control-Allow-Origin\", \"*\");\r\n    this.http\r\n      .get(\"https://api.ethama.finance/get-top-coin-grise\")\r\n      .subscribe((Response) => {\r\n        // console.log(Response);\r\n        let resSTR = JSON.stringify(Response);\r\n        let resJSON = JSON.parse(resSTR);\r\n\r\n        this.btc = resJSON.data.BTC;\r\n        this.dot = resJSON.data.DOT;\r\n        this.ada = resJSON.data.ADA;\r\n        this.eth = resJSON.data.ETH;\r\n\r\n        // this.coinsDataList = resJSON.data;\r\n        // console.log(this.coinsDataList);\r\n      });\r\n\r\n    this.localDataUpdateService.isInitSlotsReservationDataUpdated.subscribe(\r\n      (isUpdated) => {\r\n        if (isUpdated) {\r\n          this.sharedService.initSlots();\r\n          this.localDataUpdateService.forceUpdateSlotsReservationData(true);\r\n        }\r\n      }\r\n    );\r\n\r\n    this.localDataUpdateService.isWalletBalanceDataUpdated.subscribe(\r\n      (value) => {\r\n        if (value && this.isLogin) {\r\n          this.refetchBalance();\r\n        }\r\n      }\r\n    );\r\n\r\n    this.liquidityContractService.getCurrentLPDay().then((lpDay) => {\r\n      if (lpDay) {\r\n        this.currentLPDay = lpDay;\r\n      }\r\n    });\r\n\r\n    this.activatedRoute.queryParams.subscribe((params) => {\r\n      this.contractService.referralAccountNo = params.referralCode;\r\n      if (this.contractService.referralAccountNo == null) {\r\n        this.contractService.referralAccountNo =\r\n          this.contractService.blankReferralAccountNo;\r\n      }\r\n      this.refAccountNo = this.contractService.referralAccountNo;\r\n    });\r\n  }\r\n\r\n\r\n\r\n  async connectWithCardanoWallet() {\r\n    try {\r\n      //console.log('=================== ngOnInit')\r\n      await Loader.load()\r\n      const cardanoSerialize = await Loader.Cardano();\r\n      const S = cardanoSerialize;\r\n      const cardano = (window as any).cardano;\r\n\r\n      (window as any).global = window;\r\n      // @ts-ignore\r\n      window.Buffer = window.Buffer || require('buffer').Buffer;\r\n\r\n\r\n      // const buffer =  (window as any).Buffer;\r\n      //console.log('namiWallet loader', cardanoSerialize);\r\n      //console.log('cardano loader', cardano);\r\n      //console.log('cardano Get Balance :: ', await cardano.getBalance());\r\n\r\n      cardano.getBalance().then((res: any) => {\r\n        const balance = cardanoSerialize.Value.from_bytes(Buffer.from(res, 'hex'));\r\n        const lovelaces = balance.coin().to_str();\r\n\r\n        localStorage.setItem(\"lovelaces\", lovelaces);\r\n        //console.log(\"**  lovelaces  ** \", lovelaces);\r\n      })\r\n\r\n      const paymentAddr = cardanoSerialize.Address.from_bytes(Buffer.from(await cardano.getChangeAddress(), 'hex')).to_bech32()\r\n      //console.log(\"paymentAddr :: \", paymentAddr);\r\n      localStorage.setItem(\"address\", paymentAddr);\r\n      this.walletAddr = `${paymentAddr.slice(0, 10)}...${paymentAddr.slice(paymentAddr.length - 5, paymentAddr.length)}`;\r\n      console.log('test nami')\r\n\r\n    } catch (error) {\r\n      //console.log('Something went wrong!')\r\n      //console.log(error)\r\n    }\r\n  }\r\n\r\n  openDialog() {\r\n    this.localDataUpdateService.forceUpdateDialogData(true);\r\n    //this.dialog.open(DialogComponent);\r\n  }\r\n\r\n  openReferralLinkDialog() {\r\n    this.localDataUpdateService.forceUpdateDialogData(true);\r\n    \r\n  }\r\n\r\n  logout() {\r\n    this.contractService.isLogin = false;\r\n    this.contractService.accountNo = 0;\r\n    this.contractService.totalBalance = 0;\r\n    this.contractService.totalGriseBalance = 0;\r\n    this.contractService.isContractLoadOnNetwork = false;\r\n    this.assignGlobalValues();\r\n    \r\n    this.toastrService.success(\"Sucessfully logout.\");\r\n    this.router.navigate([\"/\"]);\r\n  }\r\n\r\n  assignGlobalValues() {\r\n    this.isLogin = this.contractService.isLogin;\r\n    //console.log(this.isLogin , '@this.isLoginapp')\r\n    this.accountNo = this.contractService.accountNo;\r\n    console.log(this.accountNo , '@this.this.accountNo')\r\n    this.totalBalance = this.contractService.totalBalance;\r\n    this.griseBalance = this.contractService.totalGriseBalance;\r\n  }\r\n\r\n  async assignContractAccounts() {\r\n    await this.liquidityContractService.assignLiquidityAccountNo();\r\n    await this.griseTokenContractService.assignGriseAccountNo();\r\n  }\r\n\r\n  async connectToWallet() {\r\n    await this.refetchBalance();\r\n    await this.afterConnectToWallet();\r\n  }\r\n\r\n  async refetchBalance() {\r\n    await this.contractService.connectToWallet();\r\n    await this.griseTokenContractService.getGriseBalance();\r\n    this.assignGlobalValues();\r\n  }\r\n\r\n  async afterConnectToWallet() {\r\n    this.localDataUpdateService.forceUpdateStakeTransactionsData(true);\r\n    this.localDataUpdateService.forceUpdateExchangeRateData(true);\r\n  }\r\n\r\n  showLaunchDialog() {\r\n    const currentTime = new Date().getTime();\r\n    if (this.launchOn >= currentTime) {\r\n      this.showLaunchTimerDialog = true;\r\n    }\r\n  }\r\n\r\n  getTokenData() {\r\n    this.griseTokenContractService.getTotalSupply().then((totalSupply) => {\r\n      this.totalGriseSupply = totalSupply;\r\n      this.calcMarketCap();\r\n    });\r\n    this.graphDataService.getTableData().subscribe((priceData) => {\r\n      this.priceData = priceData;\r\n      this.calcMarketCap();\r\n    });\r\n  }\r\n\r\n  calcMarketCap() {\r\n    this.marketCapValue = this.totalGriseSupply * this.priceData?.priceUSD;\r\n  }\r\n  handleDelegate() {\r\n    var pool_id = '00c3598b7df81a8c175d67412bf4a20eb76edd62fe47a5b39c08bec6'\r\n    var blockfrost_project_id = 'testnetoDpQfEbg0OWdAWO4NYGbUQiEnSPJl50K'\r\n    var link = 'https://armada-alliance.com/delegation-widget?pool_id=' + pool_id + '&blockfrost_project_id=' + blockfrost_project_id\r\n    var width = 600\r\n    var windowOuterHeight = window.outerHeight;\r\n    var windowOuterWidth = window.outerWidth;\r\n    var height = Math.min(800, windowOuterHeight);\r\n    var left = (windowOuterWidth / 2) - (width / 2);\r\n    var top = (windowOuterHeight - height) / 2;\r\n    window.open(link, 'Delegate', 'width=' + width + ',height=' + height + ',toolbar=0,menubar=0,location=0,status=0,scrollbars=1,resizable=1,left=' + left + ',top=' + top);\r\n\r\n    // console.log(left, top, height);\r\n    //var left = (parseInt(windowOuterWidth, 10) / 2) - (width / 2)\r\n    //var top = (parseInt(windowOuterHeight, 10) - height) / 2\r\n    //window.open(link, 'Delegate', 'width=' + width + ',height=' + height + ',toolbar=0,menubar=0,location=0,status=0,scrollbars=1,resizable=1,left=' + left + ',top=' + top);\r\n    // }\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"container-fluid bg-color\">\r\n  <div class=\"row content\">\r\n    <div class=\"col-md-5\">\r\n      <div class=\"landing-image-box\">\r\n        <div class=\"landing-top-heart\">\r\n          <a href=\"javascript:void(0);\"\r\n            ><span\r\n              class=\"material-icons mr-2\"\r\n              tooltip=\"Favorite\"\r\n              containerClass=\"tooltipStyle\"\r\n              triggers=\"click\"\r\n            >\r\n              favorite_border </span\r\n            >5</a\r\n          >\r\n        </div>\r\n        <div class=\"landing-large-img\">\r\n          <!-- <img src=\"assets/mythic/mythic.gif\" /> -->\r\n          <!-- <img src=\"nftImg\" /> -->\r\n          <img [src]=\"nftImg\" class=\"img-fluid\" />\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"tabsec3 accordian-style\">\r\n        <div class=\"card firstaccrd\">\r\n          <div class=\"card-header\">\r\n            <h5 class=\"mb-0\">\r\n              <button class=\"btn btn-link\">\r\n                <span class=\"material-icons\"> subject </span>\r\n                Description\r\n              </button>\r\n            </h5>\r\n          </div>\r\n          <div class=\"collapse show\">\r\n            <div class=\"card-body\">\r\n              <p class=\"mb-0\">Created by <a href=\"#\">F3FD9C</a></p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div id=\"accordion3\">\r\n          <div class=\"card\">\r\n            <div class=\"card-header\" id=\"properties\">\r\n              <h5 class=\"mb-0\">\r\n                <button\r\n                  class=\"btn btn-link collapsed\"\r\n                  data-toggle=\"collapse\"\r\n                  data-target=\"#collapseproperties\"\r\n                  aria-expanded=\"false\"\r\n                  aria-controls=\"collapseproperties\"\r\n                >\r\n                  <span class=\"material-icons\"> label </span>\r\n                  Properties\r\n                </button>\r\n              </h5>\r\n            </div>\r\n            <div\r\n              id=\"collapseproperties\"\r\n              class=\"collapse\"\r\n              aria-labelledby=\"properties\"\r\n              data-parent=\"#accordion3\"\r\n            >\r\n              <div class=\"card-body\">\r\n                <div class=\"propeties-main\">\r\n                  <a href=\"#\" class=\"propeties-box\">\r\n                    <span class=\"span1\">Allowed Breeding Count</span>\r\n                    <span class=\"span2\">2</span>\r\n                    <span class=\"span3\">81% have this trait</span>\r\n                  </a>\r\n                  <a href=\"#\" class=\"propeties-box\">\r\n                    <span class=\"span1\">CBD</span>\r\n                    <span class=\"span2\">47</span>\r\n                    <span class=\"span3\">1% have this trait</span>\r\n                  </a>\r\n                  <a href=\"#\" class=\"propeties-box\">\r\n                    <span class=\"span1\">Certified Strain</span>\r\n                    <span class=\"span2\">No</span>\r\n                    <span class=\"span3\">100% have this trait</span>\r\n                  </a>\r\n                  <a href=\"#\" class=\"propeties-box\">\r\n                    <span class=\"span1\">Allowed Breeding Count</span>\r\n                    <span class=\"span2\">2</span>\r\n                    <span class=\"span3\">81% have this trait</span>\r\n                  </a>\r\n                  <a href=\"#\" class=\"propeties-box\">\r\n                    <span class=\"span1\">Allowed Breeding Count</span>\r\n                    <span class=\"span2\">2</span>\r\n                    <span class=\"span3\">81% have this trait</span>\r\n                  </a>\r\n                  <a href=\"#\" class=\"propeties-box\">\r\n                    <span class=\"span1\">Allowed Breeding Count</span>\r\n                    <span class=\"span2\">2</span>\r\n                    <span class=\"span3\">81% have this trait</span>\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"card\">\r\n            <div class=\"card-header\" id=\"about\">\r\n              <h5 class=\"mb-0\">\r\n                <button\r\n                  class=\"btn btn-link collapsed\"\r\n                  data-toggle=\"collapse\"\r\n                  data-target=\"#collapseabout\"\r\n                  aria-expanded=\"false\"\r\n                  aria-controls=\"collapseabout\"\r\n                >\r\n                  <span class=\"material-icons\"> vertical_split </span>\r\n                  About NFT\r\n                </button>\r\n              </h5>\r\n            </div>\r\n            <div\r\n              id=\"collapseabout\"\r\n              class=\"collapse\"\r\n              aria-labelledby=\"about\"\r\n              data-parent=\"#accordion3\"\r\n            >\r\n              <div class=\"card-body\">\r\n                <div class=\"about-details text-left\">\r\n                  <div class=\"d-flex align-items-center text-left mb-3\">\r\n                    <div class=\"about-details-img mr-3\">\r\n                      <img src=\"assets/mythic/mythic.gif\" />\r\n                    </div>\r\n                    <p>\r\n                      MonsterBuds™ is a cannabis-inspired NFT game. That\r\n                      originally minted 10,420 Gen 1 uniquely hand drawn NFTs to\r\n                      buy, sell, trade, breed, and smoke all on the\r\n                      <a href=\"#\">MonsterBuds</a>\r\n                      platform. Please Read This Page\r\n                    </p>\r\n                  </div>\r\n                  <p>This collection incudes:</p>\r\n                  <p>\r\n                    <a href=\"#\">Puff Puff Pass </a>- MonsterBud Utility Token\r\n                  </p>\r\n                  <p><a href=\"#\">Gen 1 Buds</a></p>\r\n                  <p>All Future Generation Buds</p>\r\n                  <p>Check <a href=\"#\">Monsterbuds.io</a> for breed count</p>\r\n                  <p>Token id breakdown:</p>\r\n                  <p>1-865 = Puff Puff Pass</p>\r\n                  <p>866-10420 = Gen 1 Buds</p>\r\n                  <p>10420 + = All Gen Buds</p>\r\n                </div>\r\n                <div class=\"d-flex align-items-center mt-5\">\r\n                  <ul class=\"ul-boxes\">\r\n                    <li>\r\n                      <a href=\"javascript:void(0);\">\r\n                        <span class=\"material-icons\"> playlist_play</span>\r\n                      </a>\r\n                    </li>\r\n                    <li>\r\n                      <a href=\"javascript:void(0);\">\r\n                        <svg\r\n                          class=\"\"\r\n                          fill=\"#fff\"\r\n                          viewBox=\"0 0 20 16\"\r\n                          style=\"height: 20px; width: 20px\"\r\n                        >\r\n                          <path\r\n                            d=\"M17.569.5H2.43C1.39.5.548 1.344.548 2.375l-.01 11.25A1.89 1.89 0 002.43 15.5H17.57a1.89 1.89 0 001.892-1.875V2.375A1.89 1.89 0 0017.57.5zm-4.73 13.125H2.43v-3.75h10.408v3.75zm0-4.688H2.43v-3.75h10.408v3.75zm4.73 4.688h-3.785V5.187h3.785v8.438z\"\r\n                          ></path>\r\n                        </svg>\r\n                      </a>\r\n                    </li>\r\n                    <li>\r\n                      <a href=\"javascript:void(0);\">\r\n                        <svg\r\n                          class=\"\"\r\n                          fill=\"#fff\"\r\n                          viewBox=\"0 0 22 16\"\r\n                          style=\"height: 20px; width: 20px\"\r\n                        >\r\n                          <path\r\n                            d=\"M8.11.5c-.28.002-2.574.067-4.996 1.873 0 0-2.584 4.665-2.584 10.408 0 0 1.507 2.593 5.473 2.719 0 0 .664-.792 1.202-1.477-2.278-.685-3.14-2.108-3.14-2.108s.18.126.502.307c.018 0 .035.019.07.036.055.035.108.054.162.09.448.252.896.45 1.31.611.736.307 1.615.576 2.639.774 1.346.252 2.925.342 4.646.019a12.954 12.954 0 002.603-.774 10.118 10.118 0 002.062-1.063s-.896 1.458-3.247 2.125c.538.666 1.185 1.439 1.185 1.439 3.965-.126 5.473-2.72 5.473-2.7 0-5.746-2.584-10.409-2.584-10.409C16.32.446 13.861.5 13.861.5l-.251.288c3.05.918 4.468 2.27 4.468 2.27a14.856 14.856 0 00-5.4-1.711 15.048 15.048 0 00-3.626.036c-.107 0-.197.019-.306.035-.628.072-2.153.288-4.073 1.135-.663.288-1.059.505-1.059.505S5.088 1.635 8.317.717L8.137.5h-.028zm-.457 6.645c1.022 0 1.849.882 1.83 1.981 0 1.1-.808 1.982-1.83 1.982-1.005 0-1.83-.883-1.83-1.982s.806-1.981 1.83-1.981zm6.55 0c1.004 0 1.83.882 1.83 1.981 0 1.1-.809 1.982-1.83 1.982-1.006 0-1.83-.883-1.83-1.982s.806-1.981 1.83-1.981z\"\r\n                          ></path>\r\n                        </svg>\r\n                      </a>\r\n                    </li>\r\n                    <li>\r\n                      <a href=\"javascript:void(0);\">\r\n                        <div class=\"dropdown\">\r\n                          <a href=\"javascript:void(0);\">\r\n                            <svg\r\n                              class=\"\"\r\n                              fill=\"#fff\"\r\n                              viewBox=\"0 0 24 24\"\r\n                              style=\"height: 20px; width: 20px\"\r\n                            >\r\n                              <path\r\n                                d=\"M15.75 2H8.25C4.79875 2 2 4.79875 2 8.25V15.75C2 19.2012 4.79875 22 8.25 22H15.75C19.2012 22 22 19.2012 22 15.75V8.25C22 4.79875 19.2012 2 15.75 2ZM20.125 15.75C20.125 18.1625 18.1625 20.125 15.75 20.125H8.25C5.8375 20.125 3.875 18.1625 3.875 15.75V8.25C3.875 5.8375 5.8375 3.875 8.25 3.875H15.75C18.1625 3.875 20.125 5.8375 20.125 8.25V15.75Z\"\r\n                              ></path>\r\n                              <path\r\n                                d=\"M12 7C9.23875 7 7 9.23875 7 12C7 14.7613 9.23875 17 12 17C14.7613 17 17 14.7613 17 12C17 9.23875 14.7613 7 12 7ZM12 15.125C10.2775 15.125 8.875 13.7225 8.875 12C8.875 10.2763 10.2775 8.875 12 8.875C13.7225 8.875 15.125 10.2763 15.125 12C15.125 13.7225 13.7225 15.125 12 15.125Z\"\r\n                              ></path>\r\n                              <path\r\n                                d=\"M17.375 7.29124C17.743 7.29124 18.0413 6.99295 18.0413 6.62499C18.0413 6.25703 17.743 5.95874 17.375 5.95874C17.0071 5.95874 16.7088 6.25703 16.7088 6.62499C16.7088 6.99295 17.0071 7.29124 17.375 7.29124Z\"\r\n                              ></path>\r\n                            </svg>\r\n                          </a>\r\n                        </div>\r\n                      </a>\r\n                    </li>\r\n                    <li>\r\n                      <a href=\"javascript:void(0);\">\r\n                        <svg\r\n                          class=\"\"\r\n                          fill=\"#fff\"\r\n                          viewBox=\"0 0 18 16\"\r\n                          style=\"height: 20px; width: 20px\"\r\n                        >\r\n                          <path\r\n                            d=\"M.09 13.791c1.992.14 3.728-.344 5.327-1.571-.816-.098-1.527-.311-2.127-.786-.584-.466-1.032-1.047-1.272-1.841h1.48c.008-.033.016-.066.024-.107-.816-.237-1.512-.663-2.032-1.342-.52-.67-.775-1.448-.8-2.3.52.148 1.016.295 1.52.434.016-.033.04-.065.056-.098-.72-.606-1.24-1.334-1.431-2.275a3.92 3.92 0 01.391-2.7c2 2.389 4.511 3.715 7.598 3.936-.096-.778-.104-1.498.16-2.202.912-2.463 3.983-3.249 5.894-1.481.216.196.4.229.632.147.632-.229 1.255-.474 1.903-.72-.248.81-.784 1.408-1.415 1.989.615-.164 1.231-.336 1.839-.5.024.025.048.041.072.066-.464.491-.912 1.007-1.415 1.449-.272.237-.36.458-.376.818-.144 4.01-1.752 7.25-5.175 9.289-3.487 2.07-7.077 1.947-10.612-.025-.064-.04-.12-.09-.24-.18z\"\r\n                          ></path>\r\n                        </svg>\r\n                      </a>\r\n                    </li>\r\n                    <li class=\"\">\r\n                      <div class=\"dropdown\">\r\n                        <a\r\n                          href=\"#\"\r\n                          id=\"dropdownMenuButton\"\r\n                          data-toggle=\"dropdown\"\r\n                          aria-haspopup=\"true\"\r\n                          aria-expanded=\"false\"\r\n                        >\r\n                          <span class=\"material-icons\"> more_vert </span>\r\n                        </a>\r\n                        <div\r\n                          class=\"dropdown-menu\"\r\n                          aria-labelledby=\"dropdownMenuButton\"\r\n                        >\r\n                          <a class=\"dropdown-item\" href=\"#\"\r\n                            ><span class=\"material-icons\"> flag </span>Report</a\r\n                          >\r\n                        </div>\r\n                      </div>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"card\">\r\n            <div class=\"card-header\" id=\"details\">\r\n              <h5 class=\"mb-0\">\r\n                <button\r\n                  class=\"btn btn-link collapsed\"\r\n                  data-toggle=\"collapse\"\r\n                  data-target=\"#collapsedetails\"\r\n                  aria-expanded=\"false\"\r\n                  aria-controls=\"collapsedetails\"\r\n                >\r\n                  <span class=\"material-icons\"> ballot </span>\r\n                  Details\r\n                </button>\r\n              </h5>\r\n            </div>\r\n            <div\r\n              id=\"collapsedetails\"\r\n              class=\"collapse\"\r\n              aria-labelledby=\"details\"\r\n              data-parent=\"#accordion3\"\r\n            >\r\n              <div class=\"card-body\">\r\n                <div class=\"d-flex flex-column\">\r\n                  <div class=\"d-flex justify-content-between mb-2\">\r\n                    <p class=\"mb-0\">Contract Address</p>\r\n                    <a href=\"#\">0x6317...0082</a>\r\n                  </div>\r\n                  <div class=\"d-flex justify-content-between mb-2\">\r\n                    <p class=\"mb-0\">Token ID</p>\r\n                    <p class=\"mb-0\">6085</p>\r\n                  </div>\r\n                  <div class=\"d-flex justify-content-between mb-2\">\r\n                    <p class=\"mb-0\">Token Standard</p>\r\n                    <p class=\"mb-0\">ERC-721</p>\r\n                  </div>\r\n                  <div class=\"d-flex justify-content-between mb-2\">\r\n                    <p class=\"mb-0\">Blockchain</p>\r\n                    <p class=\"mb-0\">Ethereum</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-7\">\r\n      <div class=\"landing-right-sec\">\r\n        <div class=\"d-flex justify-content-between align-items-center mb-5\">\r\n          <a\r\n            href=\"javascript:void(0);\"\r\n            class=\"d-flex text-white align-items-center text-decoration-none\"\r\n            style=\"font-size: 16px\"\r\n          >\r\n            SampleHere\r\n            <span class=\"material-icons ml-2\"> verified </span>\r\n          </a>\r\n          <ul class=\"ul-boxes\">\r\n            <li>\r\n              <a href=\"javascript:void(0);\">\r\n                <span class=\"material-icons\"> refresh </span>\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href=\"javascript:void(0);\">\r\n                <span class=\"material-icons\"> open_in_new </span>\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href=\"javascript:void(0);\">\r\n                <div class=\"dropdown\">\r\n                  <a\r\n                    href=\"javascript:void(0);\"\r\n                    id=\"dropdownMenuButton\"\r\n                    data-toggle=\"dropdown\"\r\n                    aria-haspopup=\"true\"\r\n                    aria-expanded=\"false\"\r\n                  >\r\n                    <span class=\"material-icons\"> share </span>\r\n                  </a>\r\n                  <div\r\n                    class=\"dropdown-menu\"\r\n                    aria-labelledby=\"dropdownMenuButton\"\r\n                  >\r\n                    <a class=\"dropdown-item\" href=\"javascript:void(0);\"\r\n                      ><span class=\"material-icons\"> content_copy </span>Copy\r\n                      Link</a\r\n                    >\r\n                    <a class=\"dropdown-item\" href=\"javascript:void(0);\"\r\n                      >Share on Facebook</a\r\n                    >\r\n                    <a class=\"dropdown-item\" href=\"javascript:void(0);\"\r\n                      >Share on Twitter</a\r\n                    >\r\n                    <a class=\"dropdown-item\" href=\"javascript:void(0);\"\r\n                      ><span class=\"material-icons\"> code </span>Embed Assets</a\r\n                    >\r\n                  </div>\r\n                </div>\r\n              </a>\r\n            </li>\r\n            <li class=\"\">\r\n              <div class=\"dropdown\">\r\n                <a\r\n                  href=\"#\"\r\n                  id=\"dropdownMenuButton\"\r\n                  data-toggle=\"dropdown\"\r\n                  aria-haspopup=\"true\"\r\n                  aria-expanded=\"false\"\r\n                >\r\n                  <span class=\"material-icons\"> more_vert </span>\r\n                </a>\r\n                <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n                  <a class=\"dropdown-item\" href=\"#\"\r\n                    ><span class=\"material-icons\"> flag </span>Report</a\r\n                  >\r\n                </div>\r\n              </div>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div class=\"landing-title\">\r\n          <h1 class=\"text-left text-white\">NFT Sample</h1>\r\n          <div class=\"owner-view-favourte\">\r\n            <ul>\r\n              <li>\r\n                Owned by<a href=\"javascript:void(0);\" class=\"ml-2\">\r\n                  ThunderShrike</a\r\n                >\r\n              </li>\r\n              <li>\r\n                <span class=\"material-icons mr-2\"> visibility </span> 60 Views\r\n              </li>\r\n              <li>\r\n                <a\r\n                  href=\"javascript:void(0);\"\r\n                  class=\"text-white\"\r\n                  data-toggle=\"modal\"\r\n                  data-target=\"#exampleModalCenter\"\r\n                  ><span class=\"material-icons mr-2\"> favorite </span>4\r\n                  favorites</a\r\n                >\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"land-offer-box\">\r\n          <!-- <h5>Higest Offer</h5> -->\r\n          <div class=\"offer-box-inner\">\r\n            <span><img src=\"/assets/cardano-white.png\" width=\"50px\" height=\"50px\"/>{{nftamount}} ADA</span>\r\n            <!-- <span class=\"smallfont\">($381.57)</span> -->\r\n          </div>\r\n          <div class=\"offer-btn d-flex\">\r\n            <button class=\"tab-button notallowed\" disabled>\r\n              <span class=\"material-icons mr-3\"> local_offer </span>Make Offer\r\n            </button>\r\n            <button class=\"tab-button\" *ngIf=\"!mintstatus\" (click)=\"handleMintNft(selectedNft, 'mint')\" data-toggle=\"modal\"\r\n            data-target=\"#exampleModaltwo\">\r\n              <span class=\"material-icons mr-3\"> local_offer </span>Mint\r\n            </button>\r\n            <button class=\"tab-button\" (click)=\"goToForm()\" *ngIf=\"mintstatus\">\r\n              <span class=\"material-icons mr-3\"> local_offer </span>Sell\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"tabsec1 accordian-style\">\r\n          <div id=\"accordion\">\r\n            <div class=\"card\">\r\n              <div class=\"card-header\" id=\"headingOne\">\r\n                <h5 class=\"mb-0\">\r\n                  <button\r\n                    class=\"btn btn-link\"\r\n                    data-toggle=\"collapse\"\r\n                    data-target=\"#collapseOne\"\r\n                    aria-expanded=\"true\"\r\n                    aria-controls=\"collapseOne\"\r\n                  >\r\n                    <span class=\"material-icons\"> timeline </span>\r\n                    Price History\r\n                  </button>\r\n                </h5>\r\n              </div>\r\n\r\n              <div\r\n                id=\"collapseOne\"\r\n                class=\"collapse show\"\r\n                aria-labelledby=\"headingOne\"\r\n                data-parent=\"#accordion\"\r\n              >\r\n                <div class=\"card-body\">\r\n                  <div class=\"d-flex align-items-center mb-4\">\r\n                    <div class=\"d-flex flex-column select-setting\">\r\n                      <mat-select placeholder=\"All Time\" class=\"mat-dropdown\">\r\n                        <mat-option [value]=\"2\">Last 7 Days </mat-option>\r\n                        <mat-option [value]=\"3\">Last 14 Days </mat-option>\r\n                        <mat-option [value]=\"4\">Last 30 Days </mat-option>\r\n                        <mat-option [value]=\"5\">Last 60 Days </mat-option>\r\n                        <mat-option [value]=\"6\">Last 90 Days </mat-option>\r\n                        <mat-option [value]=\"7\">Last Year </mat-option>\r\n                      </mat-select>\r\n                    </div>\r\n                    <div class=\"ml-4\">\r\n                      <p class=\"mb-0\">All Time Avg. Price</p>\r\n                      <p class=\"mb-0 text-left colorsample\">Ξ0.125</p>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div>\r\n                    <canvas\r\n                      baseChart\r\n                      [datasets]=\"bubbleChartData\"\r\n                      [options]=\"bubbleChartOptions\"\r\n                      [colors]=\"bubbleChartColors\"\r\n                      [legend]=\"bubbleChartLegend\"\r\n                      [chartType]=\"bubbleChartType\"\r\n                    >\r\n                    </canvas>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"card tablescroll\">\r\n              <div class=\"card-header\" id=\"headingTwo\">\r\n                <h5 class=\"mb-0\">\r\n                  <button\r\n                    class=\"btn btn-link collapsed\"\r\n                    data-toggle=\"collapse\"\r\n                    data-target=\"#collapseTwo\"\r\n                    aria-expanded=\"false\"\r\n                    aria-controls=\"collapseTwo\"\r\n                  >\r\n                    <span class=\"material-icons\"> local_offer </span>\r\n                    Listings\r\n                  </button>\r\n                </h5>\r\n              </div>\r\n              <div\r\n                id=\"collapseTwo\"\r\n                class=\"collapse\"\r\n                aria-labelledby=\"headingTwo\"\r\n                data-parent=\"#accordion\"\r\n              >\r\n                <div class=\"card-body\">\r\n                  <table class=\"table table-striped\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th scope=\"col\" class=\"border-0\">Price</th>\r\n                        <th scope=\"col\" class=\"border-0\">USD Price</th>\r\n                        <th scope=\"col\" class=\"border-0\">Floor difference</th>\r\n                        <th scope=\"col\" class=\"border-0\">Expiration</th>\r\n                        <th scope=\"col\" class=\"border-0\">From</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      <tr>\r\n                        <th>\r\n                          <img src=\"/assets/icon1.svg\" class=\"imgWidth\" />0.11\r\n                          WETH\r\n                        </th>\r\n                        <td>$381.57</td>\r\n                        <td>15.8% above</td>\r\n                        <td>in 5 days</td>\r\n                        <td><a href=\"#\">Sample</a></td>\r\n                      </tr>\r\n                      <tr>\r\n                        <th>\r\n                          <img src=\"/assets/icon1.svg\" class=\"imgWidth\" />0.11\r\n                          WETH\r\n                        </th>\r\n                        <td>$381.57</td>\r\n                        <td>15.8% above</td>\r\n                        <td>in 5 days</td>\r\n                        <td><a href=\"#\">Sample</a></td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"card tablescroll\">\r\n              <div class=\"card-header\" id=\"headingThree\">\r\n                <h5 class=\"mb-0\">\r\n                  <button\r\n                    class=\"btn btn-link collapsed\"\r\n                    data-toggle=\"collapse\"\r\n                    data-target=\"#collapseThree\"\r\n                    aria-expanded=\"false\"\r\n                    aria-controls=\"collapseThree\"\r\n                  >\r\n                    <span class=\"material-icons\"> toc </span>\r\n                    Offers\r\n                  </button>\r\n                </h5>\r\n              </div>\r\n              <div\r\n                id=\"collapseThree\"\r\n                class=\"collapse\"\r\n                aria-labelledby=\"headingThree\"\r\n                data-parent=\"#accordion\"\r\n              >\r\n                <div class=\"card-body\">\r\n                  <!-- <table class=\"table table-striped\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th scope=\"col\" class=\"border-0\">Price</th>\r\n                        <th scope=\"col\" class=\"border-0\">USD Price</th>\r\n                        <th scope=\"col\" class=\"border-0\">Floor difference</th>\r\n                        <th scope=\"col\" class=\"border-0\">Expiration</th>\r\n                        <th scope=\"col\" class=\"border-0\">From</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      <tr>\r\n                        <th>\r\n                          <img src=\"/assets/icon1.svg\" class=\"imgWidth\" />0.11\r\n                          WETH\r\n                        </th>\r\n                        <td>$381.57</td>\r\n                        <td>15.8% above</td>\r\n                        <td>in 5 days</td>\r\n                        <td><a href=\"#\">Sample</a></td>\r\n                      </tr>\r\n                      <tr>\r\n                        <th>\r\n                          <img src=\"/assets/icon1.svg\" class=\"imgWidth\" />0.11\r\n                          WETH\r\n                        </th>\r\n                        <td>$381.57</td>\r\n                        <td>15.8% above</td>\r\n                        <td>in 5 days</td>\r\n                        <td><a href=\"#\">Sample</a></td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table> -->\r\n                  <img src=\"/assets/empty-bids.svg\" class=\"svg-setting\" />\r\n                  <h3>No offer yet</h3>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col-md-12\">\r\n      <div class=\"tabsec1 accordian-style\">\r\n        <div id=\"accordion2\">\r\n          <div class=\"card tablescroll\">\r\n            <div class=\"card-header\" id=\"trading\">\r\n              <h5 class=\"mb-0\">\r\n                <button\r\n                  class=\"btn btn-link collapsed\"\r\n                  data-toggle=\"collapse\"\r\n                  data-target=\"#collapseTrading\"\r\n                  aria-expanded=\"false\"\r\n                  aria-controls=\"collapseTrading\"\r\n                >\r\n                  <span class=\"material-icons\"> swap_vert </span>\r\n                  Trading History\r\n                </button>\r\n              </h5>\r\n            </div>\r\n            <div\r\n              id=\"collapseTrading\"\r\n              class=\"collapse\"\r\n              aria-labelledby=\"trading\"\r\n              data-parent=\"#accordion2\"\r\n            >\r\n              <div class=\"card-body p-0\">\r\n                <ng-multiselect-dropdown\r\n                  [placeholder]=\"'Filter'\"\r\n                  [settings]=\"dropdownSettings\"\r\n                  [data]=\"dropdownList\"\r\n                  [(ngModel)]=\"selectedItems\"\r\n                  (onSelect)=\"onItemSelect($event)\"\r\n                  (onSelectAll)=\"onSelectAll($event)\"\r\n                >\r\n                </ng-multiselect-dropdown>\r\n                <table class=\"table table-striped\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th class=\"border-0 text-left\">Event</th>\r\n                      <th class=\"border-0 text-left\">Price</th>\r\n                      <th class=\"border-0 text-left\">From</th>\r\n                      <th class=\"border-0 text-left\">To</th>\r\n                      <th class=\"border-0 text-left\">Date</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td class=\"text-left\">\r\n                        <span class=\"material-icons table-icon\">\r\n                          shopping_cart </span\r\n                        >Sale\r\n                      </td>\r\n                      <td class=\"text-left\">\r\n                        <img\r\n                          src=\"/assets/blackicon2.svg\"\r\n                          class=\"imgWidth\"\r\n                        />0.125\r\n                      </td>\r\n                      <td class=\"text-left\"><a href=\"#\">sampletexthere</a></td>\r\n                      <td class=\"text-left\"><a href=\"#\">heretextsample</a></td>\r\n                      <td class=\"text-left\">\r\n                        <a href=\"#\"\r\n                          >2 days Ago<span class=\"material-icons days-icons\"\r\n                            >open_in_new</span\r\n                          ></a\r\n                        >\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td class=\"text-left\">\r\n                        <span class=\"material-icons table-icon\">\r\n                          swap_horiz </span\r\n                        >Transfer\r\n                      </td>\r\n                      <td class=\"text-left\">\r\n                        <img\r\n                          src=\"/assets/blackicon2.svg\"\r\n                          class=\"imgWidth\"\r\n                        />0.125\r\n                      </td>\r\n                      <td class=\"text-left\"><a href=\"#\">sampletexthere</a></td>\r\n                      <td class=\"text-left\"><a href=\"#\">heretextsample</a></td>\r\n                      <td class=\"text-left\">\r\n                        <a href=\"#\"\r\n                          >2 days Ago<span class=\"material-icons days-icons\"\r\n                            >open_in_new</span\r\n                          ></a\r\n                        >\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td class=\"text-left\">\r\n                        <span class=\"material-icons table-icon\">\r\n                          local_offer</span\r\n                        >List\r\n                      </td>\r\n                      <td class=\"text-left\">\r\n                        <img\r\n                          src=\"/assets/blackicon2.svg\"\r\n                          class=\"imgWidth\"\r\n                        />0.125\r\n                      </td>\r\n                      <td class=\"text-left\"><a href=\"#\">sampletexthere</a></td>\r\n                      <td class=\"text-left\"><a href=\"#\">heretextsample</a></td>\r\n                      <td class=\"text-left\">\r\n                        <a href=\"#\"\r\n                          >2 days Ago<span class=\"material-icons days-icons\"\r\n                            >open_in_new</span\r\n                          ></a\r\n                        >\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td class=\"text-left\">\r\n                        <span class=\"material-icons table-icon\"> pan_tool </span\r\n                        >Offer\r\n                      </td>\r\n                      <td class=\"text-left\">\r\n                        <img\r\n                          src=\"/assets/blackicon2.svg\"\r\n                          class=\"imgWidth\"\r\n                        />0.125\r\n                      </td>\r\n                      <td class=\"text-left\"><a href=\"#\">sampletexthere</a></td>\r\n                      <td class=\"text-left\"><a href=\"#\">heretextsample</a></td>\r\n                      <td class=\"text-left\">\r\n                        <a href=\"#\"\r\n                          >2 days Ago<span class=\"material-icons days-icons\"\r\n                            >open_in_new</span\r\n                          ></a\r\n                        >\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td class=\"text-left\">\r\n                        <span class=\"material-icons table-icon\">\r\n                          swap_horiz </span\r\n                        >Transfer\r\n                      </td>\r\n                      <td class=\"text-left\">\r\n                        <img\r\n                          src=\"/assets/blackicon2.svg\"\r\n                          class=\"imgWidth\"\r\n                        />0.125\r\n                      </td>\r\n                      <td class=\"text-left\"><a href=\"#\">sampletexthere</a></td>\r\n                      <td class=\"text-left\"><a href=\"#\">heretextsample</a></td>\r\n                      <td class=\"text-left\">\r\n                        <a href=\"#\"\r\n                          >2 days Ago<span class=\"material-icons days-icons\"\r\n                            >open_in_new</span\r\n                          ></a\r\n                        >\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td class=\"text-left\">\r\n                        <span class=\"material-icons table-icon\">\r\n                          shopping_cart </span\r\n                        >Sale\r\n                      </td>\r\n                      <td class=\"text-left\">\r\n                        <img\r\n                          src=\"/assets/blackicon2.svg\"\r\n                          class=\"imgWidth\"\r\n                        />0.125\r\n                      </td>\r\n                      <td class=\"text-left\"><a href=\"#\">sampletexthere</a></td>\r\n                      <td class=\"text-left\"><a href=\"#\">heretextsample</a></td>\r\n                      <td class=\"text-left\">\r\n                        <a href=\"#\"\r\n                          >2 days Ago<span class=\"material-icons days-icons\"\r\n                            >open_in_new</span\r\n                          ></a\r\n                        >\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td class=\"text-left\">\r\n                        <span class=\"material-icons table-icon\">\r\n                          swap_horiz </span\r\n                        >Transfer\r\n                      </td>\r\n                      <td class=\"text-left\">\r\n                        <img\r\n                          src=\"/assets/blackicon2.svg\"\r\n                          class=\"imgWidth\"\r\n                        />0.125\r\n                      </td>\r\n                      <td class=\"text-left\"><a href=\"#\">sampletexthere</a></td>\r\n                      <td class=\"text-left\"><a href=\"#\">heretextsample</a></td>\r\n                      <td class=\"text-left\">\r\n                        <a href=\"#\"\r\n                          >2 days Ago<span class=\"material-icons days-icons\"\r\n                            >open_in_new</span\r\n                          ></a\r\n                        >\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td class=\"text-left\">\r\n                        <span class=\"material-icons table-icon\">\r\n                          local_offer</span\r\n                        >List\r\n                      </td>\r\n                      <td class=\"text-left\">\r\n                        <img\r\n                          src=\"/assets/blackicon2.svg\"\r\n                          class=\"imgWidth\"\r\n                        />0.125\r\n                      </td>\r\n                      <td class=\"text-left\"><a href=\"#\">sampletexthere</a></td>\r\n                      <td class=\"text-left\"><a href=\"#\">heretextsample</a></td>\r\n                      <td class=\"text-left\">\r\n                        <a href=\"#\"\r\n                          >2 days Ago<span class=\"material-icons days-icons\"\r\n                            >open_in_new</span\r\n                          ></a\r\n                        >\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td class=\"text-left\">\r\n                        <span class=\"material-icons table-icon\"> pan_tool </span\r\n                        >Offer\r\n                      </td>\r\n                      <td class=\"text-left\">\r\n                        <img\r\n                          src=\"/assets/blackicon2.svg\"\r\n                          class=\"imgWidth\"\r\n                        />0.125\r\n                      </td>\r\n                      <td class=\"text-left\"><a href=\"#\">sampletexthere</a></td>\r\n                      <td class=\"text-left\"><a href=\"#\">heretextsample</a></td>\r\n                      <td class=\"text-left\">\r\n                        <a href=\"#\"\r\n                          >2 days Ago<span class=\"material-icons days-icons\"\r\n                            >open_in_new</span\r\n                          ></a\r\n                        >\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td class=\"text-left\">\r\n                        <span class=\"material-icons table-icon\">\r\n                          swap_horiz </span\r\n                        >Transfer\r\n                      </td>\r\n                      <td class=\"text-left\">\r\n                        <img\r\n                          src=\"/assets/blackicon2.svg\"\r\n                          class=\"imgWidth\"\r\n                        />0.125\r\n                      </td>\r\n                      <td class=\"text-left\"><a href=\"#\">sampletexthere</a></td>\r\n                      <td class=\"text-left\"><a href=\"#\">heretextsample</a></td>\r\n                      <td class=\"text-left\">\r\n                        <a href=\"#\"\r\n                          >2 days Ago<span class=\"material-icons days-icons\"\r\n                            >open_in_new</span\r\n                          ></a\r\n                        >\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"card\">\r\n            <div class=\"card-header\" id=\"collection\">\r\n              <h5 class=\"mb-0\">\r\n                <button\r\n                  class=\"btn btn-link collapsed\"\r\n                  data-toggle=\"collapse\"\r\n                  data-target=\"#collapseCollection\"\r\n                  aria-expanded=\"false\"\r\n                  aria-controls=\"collapseCollection\"\r\n                >\r\n                  <span class=\"material-icons\"> view_module </span>\r\n                  More from this collection\r\n                </button>\r\n              </h5>\r\n            </div>\r\n            <div\r\n              id=\"collapseCollection\"\r\n              class=\"collapse\"\r\n              aria-labelledby=\"collection\"\r\n              data-parent=\"#accordion2\"\r\n            >\r\n              <div class=\"card-body\">\r\n                <div class=\"scrollboxes\">\r\n                  <div class=\"d-inline-flex\">\r\n                    <a href=\"#\" class=\"collection-box\">\r\n                      <div class=\"collection-box-top\">\r\n                        <img src=\"/assets/rare/r1.png\" />\r\n                      </div>\r\n                      <div class=\"collection-box-bottom\">\r\n                        <div class=\"collection-box-row\">\r\n                          <p class=\"first-p\">\r\n                            NFtBirds\r\n                            <span class=\"material-icons ml-2\"> verified </span>\r\n                          </p>\r\n                          <p class=\"first-p\">Price</p>\r\n                        </div>\r\n                        <div class=\"collection-box-row\">\r\n                          <p class=\"second-p\">SampleTEXThere</p>\r\n                          <p class=\"second-p\">\r\n                            <span> <img src=\"/assets/blackicon2.svg\" /> </span\r\n                            >0.155\r\n                          </p>\r\n                        </div>\r\n                        <div class=\"collection-box-row\">\r\n                          <p class=\"second-p\">Tiddles</p>\r\n                          <p class=\"third-p\">\r\n                            <span>Last</span>\r\n                            <span class=\"mx-1\">\r\n                              <img src=\"/assets/blackicon2.svg\" /> </span\r\n                            >0.27\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"landing-top-heart justify-content-between\">\r\n                        <span class=\"colorbuy\">Buy Now</span>\r\n                        <a href=\"javascript:void(0);\"\r\n                          ><span class=\"material-icons mr-2\">\r\n                            favorite_border </span\r\n                          >5</a\r\n                        >\r\n                      </div>\r\n                    </a>\r\n\r\n                    <a href=\"#\" class=\"collection-box\">\r\n                      <div class=\"collection-box-top\">\r\n                        <img src=\"/assets/rare/r2.png\" />\r\n                      </div>\r\n                      <div class=\"collection-box-bottom\">\r\n                        <div class=\"collection-box-row\">\r\n                          <p class=\"first-p\">\r\n                            NFtBirds\r\n                            <span class=\"material-icons ml-2\"> verified </span>\r\n                          </p>\r\n                          <p class=\"first-p\">Price</p>\r\n                        </div>\r\n                        <div class=\"collection-box-row\">\r\n                          <p class=\"second-p\">SampleTEXThere</p>\r\n                          <p class=\"second-p\">\r\n                            <span> <img src=\"/assets/blackicon2.svg\" /> </span\r\n                            >0.155\r\n                          </p>\r\n                        </div>\r\n                        <div class=\"collection-box-row\">\r\n                          <p class=\"second-p\">Tiddles</p>\r\n                          <p class=\"third-p\">\r\n                            <span>Last</span>\r\n                            <span class=\"mx-1\">\r\n                              <img src=\"/assets/blackicon2.svg\" /> </span\r\n                            >0.27\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"landing-top-heart justify-content-between\">\r\n                        <span class=\"colorbuy\">Buy Now</span>\r\n                        <a href=\"javascript:void(0);\"\r\n                          ><span class=\"material-icons mr-2\">\r\n                            favorite_border </span\r\n                          >5</a\r\n                        >\r\n                      </div>\r\n                    </a>\r\n\r\n                    <a href=\"#\" class=\"collection-box\">\r\n                      <div class=\"collection-box-top\">\r\n                        <img src=\"/assets/rare/r3.png\" />\r\n                      </div>\r\n                      <div class=\"collection-box-bottom\">\r\n                        <div class=\"collection-box-row\">\r\n                          <p class=\"first-p\">\r\n                            NFtBirds\r\n                            <span class=\"material-icons ml-2\"> verified </span>\r\n                          </p>\r\n                          <p class=\"first-p\">Price</p>\r\n                        </div>\r\n                        <div class=\"collection-box-row\">\r\n                          <p class=\"second-p\">SampleTEXThere</p>\r\n                          <p class=\"second-p\">\r\n                            <span> <img src=\"/assets/blackicon2.svg\" /> </span\r\n                            >0.155\r\n                          </p>\r\n                        </div>\r\n                        <div class=\"collection-box-row\">\r\n                          <p class=\"second-p\">Tiddles</p>\r\n                          <p class=\"third-p\">\r\n                            <span>Last</span>\r\n                            <span class=\"mx-1\">\r\n                              <img src=\"/assets/blackicon2.svg\" /> </span\r\n                            >0.27\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"landing-top-heart justify-content-between\">\r\n                        <span class=\"colorbuy\">Buy Now</span>\r\n                        <a href=\"javascript:void(0);\"\r\n                          ><span class=\"material-icons mr-2\">\r\n                            favorite_border </span\r\n                          >5</a\r\n                        >\r\n                      </div>\r\n                    </a>\r\n\r\n                    <a href=\"#\" class=\"collection-box\">\r\n                      <div class=\"collection-box-top\">\r\n                        <img src=\"/assets/rare/r4.png\" />\r\n                      </div>\r\n                      <div class=\"collection-box-bottom\">\r\n                        <div class=\"collection-box-row\">\r\n                          <p class=\"first-p\">\r\n                            NFtBirds\r\n                            <span class=\"material-icons ml-2\"> verified </span>\r\n                          </p>\r\n                          <p class=\"first-p\">Price</p>\r\n                        </div>\r\n                        <div class=\"collection-box-row\">\r\n                          <p class=\"second-p\">SampleTEXThere</p>\r\n                          <p class=\"second-p\">\r\n                            <span> <img src=\"/assets/blackicon2.svg\" /> </span\r\n                            >0.155\r\n                          </p>\r\n                        </div>\r\n                        <div class=\"collection-box-row\">\r\n                          <p class=\"second-p\">Tiddles</p>\r\n                          <p class=\"third-p\">\r\n                            <span>Last</span>\r\n                            <span class=\"mx-1\">\r\n                              <img src=\"/assets/blackicon2.svg\" /> </span\r\n                            >0.27\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"landing-top-heart justify-content-between\">\r\n                        <span class=\"colorbuy\">Buy Now</span>\r\n                        <a href=\"javascript:void(0);\"\r\n                          ><span class=\"material-icons mr-2\">\r\n                            favorite_border </span\r\n                          >5</a\r\n                        >\r\n                      </div>\r\n                    </a>\r\n                    <a href=\"#\" class=\"collection-box\">\r\n                      <div class=\"collection-box-top\">\r\n                        <img src=\"/assets/rare/r1.png\" />\r\n                      </div>\r\n                      <div class=\"collection-box-bottom\">\r\n                        <div class=\"collection-box-row\">\r\n                          <p class=\"first-p\">\r\n                            NFtBirds\r\n                            <span class=\"material-icons ml-2\"> verified </span>\r\n                          </p>\r\n                          <p class=\"first-p\">Price</p>\r\n                        </div>\r\n                        <div class=\"collection-box-row\">\r\n                          <p class=\"second-p\">SampleTEXThere</p>\r\n                          <p class=\"second-p\">\r\n                            <span> <img src=\"/assets/blackicon2.svg\" /> </span\r\n                            >0.155\r\n                          </p>\r\n                        </div>\r\n                        <div class=\"collection-box-row\">\r\n                          <p class=\"second-p\">Tiddles</p>\r\n                          <p class=\"third-p\">\r\n                            <span>Last</span>\r\n                            <span class=\"mx-1\">\r\n                              <img src=\"/assets/blackicon2.svg\" /> </span\r\n                            >0.27\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"landing-top-heart justify-content-between\">\r\n                        <span class=\"colorbuy\">Buy Now</span>\r\n                        <a href=\"javascript:void(0);\"\r\n                          ><span class=\"material-icons mr-2\">\r\n                            favorite_border </span\r\n                          >5</a\r\n                        >\r\n                      </div>\r\n                    </a>\r\n\r\n                    <a href=\"#\" class=\"collection-box\">\r\n                      <div class=\"collection-box-top\">\r\n                        <img src=\"/assets/rare/r2.png\" />\r\n                      </div>\r\n                      <div class=\"collection-box-bottom\">\r\n                        <div class=\"collection-box-row\">\r\n                          <p class=\"first-p\">\r\n                            NFtBirds\r\n                            <span class=\"material-icons ml-2\"> verified </span>\r\n                          </p>\r\n                          <p class=\"first-p\">Price</p>\r\n                        </div>\r\n                        <div class=\"collection-box-row\">\r\n                          <p class=\"second-p\">SampleTEXThere</p>\r\n                          <p class=\"second-p\">\r\n                            <span> <img src=\"/assets/blackicon2.svg\" /> </span\r\n                            >0.155\r\n                          </p>\r\n                        </div>\r\n                        <div class=\"collection-box-row\">\r\n                          <p class=\"second-p\">Tiddles</p>\r\n                          <p class=\"third-p\">\r\n                            <span>Last</span>\r\n                            <span class=\"mx-1\">\r\n                              <img src=\"/assets/blackicon2.svg\" /> </span\r\n                            >0.27\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"landing-top-heart justify-content-between\">\r\n                        <span class=\"colorbuy\">Buy Now</span>\r\n                        <a href=\"javascript:void(0);\"\r\n                          ><span class=\"material-icons mr-2\">\r\n                            favorite_border </span\r\n                          >5</a\r\n                        >\r\n                      </div>\r\n                    </a>\r\n\r\n                    <a href=\"#\" class=\"collection-box\">\r\n                      <div class=\"collection-box-top\">\r\n                        <img src=\"/assets/rare/r3.png\" />\r\n                      </div>\r\n                      <div class=\"collection-box-bottom\">\r\n                        <div class=\"collection-box-row\">\r\n                          <p class=\"first-p\">\r\n                            NFtBirds\r\n                            <span class=\"material-icons ml-2\"> verified </span>\r\n                          </p>\r\n                          <p class=\"first-p\">Price</p>\r\n                        </div>\r\n                        <div class=\"collection-box-row\">\r\n                          <p class=\"second-p\">SampleTEXThere</p>\r\n                          <p class=\"second-p\">\r\n                            <span> <img src=\"/assets/blackicon2.svg\" /> </span\r\n                            >0.155\r\n                          </p>\r\n                        </div>\r\n                        <div class=\"collection-box-row\">\r\n                          <p class=\"second-p\">Tiddles</p>\r\n                          <p class=\"third-p\">\r\n                            <span>Last</span>\r\n                            <span class=\"mx-1\">\r\n                              <img src=\"/assets/blackicon2.svg\" /> </span\r\n                            >0.27\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"landing-top-heart justify-content-between\">\r\n                        <span class=\"colorbuy\">Buy Now</span>\r\n                        <a href=\"javascript:void(0);\"\r\n                          ><span class=\"material-icons mr-2\">\r\n                            favorite_border </span\r\n                          >5</a\r\n                        >\r\n                      </div>\r\n                    </a>\r\n\r\n                    <a href=\"#\" class=\"collection-box\">\r\n                      <div class=\"collection-box-top\">\r\n                        <img src=\"/assets/rare/r4.png\" />\r\n                      </div>\r\n                      <div class=\"collection-box-bottom\">\r\n                        <div class=\"collection-box-row\">\r\n                          <p class=\"first-p\">\r\n                            NFtBirds\r\n                            <span class=\"material-icons ml-2\"> verified </span>\r\n                          </p>\r\n                          <p class=\"first-p\">Price</p>\r\n                        </div>\r\n                        <div class=\"collection-box-row\">\r\n                          <p class=\"second-p\">SampleTEXThere</p>\r\n                          <p class=\"second-p\">\r\n                            <span> <img src=\"/assets/blackicon2.svg\" /> </span\r\n                            >0.155\r\n                          </p>\r\n                        </div>\r\n                        <div class=\"collection-box-row\">\r\n                          <p class=\"second-p\">Tiddles</p>\r\n                          <p class=\"third-p\">\r\n                            <span>Last</span>\r\n                            <span class=\"mx-1\">\r\n                              <img src=\"/assets/blackicon2.svg\" /> </span\r\n                            >0.27\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"landing-top-heart justify-content-between\">\r\n                        <span class=\"colorbuy\">Buy Now</span>\r\n                        <a href=\"javascript:void(0);\"\r\n                          ><span class=\"material-icons mr-2\">\r\n                            favorite_border </span\r\n                          >5</a\r\n                        >\r\n                      </div>\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n                <div\r\n                  class=\"\r\n                    d-flex\r\n                    align-items-center\r\n                    justify-content-center\r\n                    view-collection-box\r\n                  \"\r\n                >\r\n                  <button class=\"tab-button text-white\">View Collection</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div\r\n  class=\"modal fade\"\r\n  id=\"exampleModalCenter\"\r\n  tabindex=\"-1\"\r\n  role=\"dialog\"\r\n  aria-labelledby=\"exampleModalCenterTitle\"\r\n  aria-hidden=\"true\"\r\n>\r\n  <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h3 class=\"modal-title text-center mb-0\" id=\"exampleModalLongTitle\">\r\n          Favorited by\r\n        </h3>\r\n        <button\r\n          type=\"button\"\r\n          class=\"close\"\r\n          data-dismiss=\"modal\"\r\n          aria-label=\"Close\"\r\n        >\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body p-0\">\r\n        <div class=\"favourite-model\">\r\n          <a\r\n            href=\"javascript:void(0);\"\r\n            class=\"favourite-model-row d-flex align-items-center\"\r\n          >\r\n            <div\r\n              class=\"favourite-model-profile\"\r\n              style=\"background-image: url('../../../assets/rare/r1.png')\"\r\n            ></div>\r\n            <div class=\"d-flex flex-column ml-5\">\r\n              <h4 class=\"mb-0 text-left\">NFT Name</h4>\r\n              <span>0x180c...3e21</span>\r\n            </div>\r\n          </a>\r\n          <a\r\n            href=\"javascript:void(0);\"\r\n            class=\"favourite-model-row d-flex align-items-center\"\r\n          >\r\n            <div\r\n              class=\"favourite-model-profile\"\r\n              style=\"background-image: url('../../../assets/rare/r2.png')\"\r\n            ></div>\r\n            <div class=\"d-flex flex-column ml-5\">\r\n              <h4 class=\"mb-0 text-left\">NFT Name2</h4>\r\n              <span>0x180c...3e21</span>\r\n            </div>\r\n          </a>\r\n          <a\r\n            href=\"javascript:void(0);\"\r\n            class=\"favourite-model-row d-flex align-items-center\"\r\n          >\r\n            <div\r\n              class=\"favourite-model-profile\"\r\n              style=\"background-image: url('../../../assets/rare/r3.png')\"\r\n            ></div>\r\n            <div class=\"d-flex flex-column ml-5\">\r\n              <h4 class=\"mb-0 text-left\">NFT Name3</h4>\r\n              <span>0x180c...3e21</span>\r\n            </div>\r\n          </a>\r\n          <a\r\n            href=\"javascript:void(0);\"\r\n            class=\"favourite-model-row d-flex align-items-center\"\r\n          >\r\n            <div\r\n              class=\"favourite-model-profile\"\r\n              style=\"background-image: url('../../../assets/rare/r4.png')\"\r\n            ></div>\r\n            <div class=\"d-flex flex-column ml-5\">\r\n              <h4 class=\"mb-0 text-left\">NFT Name</h4>\r\n              <span>0x180c...3e21</span>\r\n            </div>\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- conformation modal -->\r\n<div\r\n  class=\"modal fade mintmodal\"\r\n  id=\"exampleModaltwo\"\r\n  tabindex=\"-1\"\r\n  role=\"dialog\"\r\n  aria-labelledby=\"exampleModaltwo\"\r\n  aria-hidden=\"true\"\r\n  >\r\n  <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n     <div class=\"modal-content\">\r\n        <div class=\"modal-header border-0\">\r\n           <h3 class=\"modal-title mb-0\">\r\n            Are you sure you want to {{ action === 'mint' ? 'mint' : 'buy'}} <b>({{ mintNftObj.assetName }}) NFT ?</b>\r\n           </h3>\r\n           \r\n           <!-- <button\r\n              type=\"button\"\r\n              class=\"close\"\r\n              data-dismiss=\"modal\"\r\n              aria-label=\"Close\"\r\n              (click)=\"resetMintNftObj()\"\r\n              >\r\n           <span aria-hidden=\"true\">&times;</span>\r\n           </button> -->\r\n        </div>\r\n        <!-- <div class=\"modal-body\">\r\n           <div class=\"modal-body-inner d-flex\">\r\n              <span>Quantity:</span>\r\n              <span>1</span>\r\n           </div>\r\n           <div class=\"modal-body-inner d-flex\">\r\n              <span>Available Assets:</span>\r\n              <span>{{ mintNftObj.quantity }}</span>\r\n           </div>\r\n           <div class=\"modal-body-inner d-flex\">\r\n              <span>Owned by:</span>\r\n              <span>{{ mintNftObj.owned_by }}</span>\r\n              </div>\r\n           <div class=\"modal-body-inner d-flex\">\r\n              <span>Price:</span>\r\n              <span>{{ mintNftObj.amount }} ADA</span>\r\n           </div>\r\n        </div> -->\r\n        <div class=\"modal-footer d-flex border-0\">\r\n           <button\r\n              type=\"button\"\r\n              class=\"tab-button\"\r\n              data-dismiss=\"modal\"\r\n              aria-label=\"Close\"\r\n              >\r\n           Cancel\r\n           </button>\r\n           <button\r\n              type=\"button\"\r\n              class=\"tab-button\"\r\n              (click)=\"action === 'mint' ? clickMint() : clickBuy()\"\r\n              data-dismiss=\"modal\"\r\n              aria-label=\"Close\"\r\n              >\r\n           Confirm\r\n           </button>\r\n        </div>\r\n     </div>\r\n  </div>\r\n</div>","import { Component, OnInit } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { ChartDataSets, ChartOptions, ChartType } from \"chart.js\";\r\nimport { Color } from \"ng2-charts\";\r\nimport { environment as env } from '../../../environments/environment';\r\n\r\nimport Loader from '../../services/nami-loader.service';\r\n\r\n@Component({\r\n  selector: \"app-landing-page\",\r\n  templateUrl: \"./landing-page.component.html\",\r\n  styleUrls: [\"./landing-page.component.scss\"],\r\n})\r\nexport class LandingPageComponent implements OnInit {\r\n  spinnerService: any;\r\n  toastr: any;\r\n  APIServices: any;\r\n  \r\n  adminNamiWalletAddress = env.adminNamiWalletAddress;\r\n  ADMIN_ROYALITY = env.ADMIN_ROYALITY;\r\n  ASSET_TRANSFER_PRICE = env.ASSET_TRANSFER_PRICE;\r\n  mintNftObj: any;\r\n\r\n  selectedNft: any;\r\n  nftImg: any;\r\n  nftamount:any;\r\n  mintstatus : any;\r\n  dropdownList: any = [];\r\n  selectedItems: any = [];\r\n  dropdownSettings: any = {};\r\n  action: any;\r\n  ngOnInit() {\r\n    this.router.navigateByUrl(\"/nft\");\r\n    const data: any = localStorage.getItem(\"selectedNft\");\r\n    this.selectedNft = JSON.parse(data);\r\n    this.nftImg = `assets/${this.selectedNft.nftType}/${this.selectedNft.src}`;\r\n    this.mintstatus = this.selectedNft.isMinted;\r\n    this.nftamount = this.selectedNft.amount;\r\n    console.log(\"value: \", this.nftImg)\r\n    console.log(this.mintstatus, \"mint\")\r\n    this.dropdownList = [\r\n      { item_id: 1, item_text: \"Listing\" },\r\n      { item_id: 2, item_text: \"Sales\" },\r\n      { item_id: 3, item_text: \"Bids\" },\r\n      { item_id: 4, item_text: \"Transfer\" },\r\n    ];\r\n\r\n    this.dropdownSettings = {\r\n      singleSelection: false,\r\n      idField: \"item_id\",\r\n      textField: \"item_text\",\r\n      selectAllText: \"Select All\",\r\n      unSelectAllText: \"UnSelect All\",\r\n      itemsShowLimit: 4,\r\n      allowSearchFilter: false,\r\n      enableCheckAll: false,\r\n    };\r\n  }\r\n  onItemSelect(item: any) {\r\n    console.log(item);\r\n  }\r\n  onSelectAll(items: any) {\r\n    console.log(items);\r\n  }\r\n  constructor(private router: Router) {}\r\n\r\n  goToForm() {\r\n    this.router.navigateByUrl(\"/form\");\r\n  }\r\n\r\n  public bubbleChartOptions: ChartOptions = {\r\n    responsive: true,\r\n    scales: {\r\n      xAxes: [\r\n        {\r\n          ticks: {\r\n            min: 0,\r\n            max: 0.03,\r\n            fontColor: \"white\",\r\n            display: false,\r\n          },\r\n          gridLines: {\r\n            color: \"#fff\", // grid line color (can be removed or changed)\r\n            display: false,\r\n            drawBorder: false,\r\n          },\r\n        },\r\n      ],\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            min: 0,\r\n            max: 0.03,\r\n            fontColor: \"white\",\r\n            // callback: function (value, index) {\r\n            //   if (index == 0) return 0.1;\r\n            //   else if (index == 1) return 0.2;\r\n            //   else if (index == 2) return 0.3;\r\n            //   return \"\";\r\n            // },\r\n          },\r\n          gridLines: {\r\n            color: \"#fff\", // grid line color (can be removed or changed)\r\n          },\r\n        },\r\n      ],\r\n    },\r\n    legend: { labels: { fontColor: \"white\" } },\r\n  };\r\n  public bubbleChartType: ChartType = \"bubble\";\r\n  public bubbleChartLegend = true;\r\n\r\n  public bubbleChartData: ChartDataSets[] = [\r\n    {\r\n      data: [{ x: 0.015, y: 0.015, r: 10 }],\r\n      label: \"Price History\",\r\n      backgroundColor: \"white\",\r\n      borderColor: \"white\",\r\n    },\r\n  ];\r\n  public bubbleChartColors: Color[] = [\r\n    {\r\n      borderColor: \"rgb(255, 255, 255)\",\r\n      backgroundColor: \"grey\",\r\n      borderWidth: 2,\r\n    },\r\n  ];\r\n\r\n  // events\r\n  public chartClicked({\r\n    event,\r\n    active,\r\n  }: {\r\n    event: MouseEvent;\r\n    active: {}[];\r\n  }): void {\r\n    console.log(event, active);\r\n  }\r\n\r\n  public chartHovered({\r\n    event,\r\n    active,\r\n  }: {\r\n    event: MouseEvent;\r\n    active: {}[];\r\n  }): void {\r\n    console.log(event, active);\r\n  }\r\n\r\n  private rand(max: number): number {\r\n    return Math.trunc(Math.random() * max);\r\n  }\r\n\r\n  private randomPoint(maxCoordinate: number): {\r\n    r: number;\r\n    x: number;\r\n    y: number;\r\n  } {\r\n    const x = this.rand(maxCoordinate);\r\n    const y = this.rand(maxCoordinate);\r\n    const r = this.rand(30) + 5;\r\n    return { x, y, r };\r\n  }\r\n  options: {\r\n    legend: {\r\n      display: false;\r\n    };\r\n  };\r\n\r\n  calcAdminRoyality = async (num: number, percentage: number) => {\r\n    try {\r\n      return num > 0 && percentage > 0 ? num * (percentage / 100) : 0 // parseInt(parseFloat(num * (percentage / 100)).toFixed(6)) : 0;\r\n    } catch (err) {\r\n      console.log(err);\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  clickMint = async () => {\r\n    // this.showsell = true;\r\n    // this.mintHide = false;\r\n    console.log(this.adminNamiWalletAddress, \"data is: \", this.mintNftObj.amount);\r\n\r\n    // Calculate 12% royalty for admin\r\n    const adminRoyality = await this.calcAdminRoyality(Number(this.mintNftObj.amount), this.ADMIN_ROYALITY); // func(250, 20) mean, 20 percent of 250\r\n    console.log(\"adminRoyality :: \", (parseFloat(adminRoyality.toString()).toFixed(6)));\r\n\r\n    const tokenAmmount = this.mintNftObj.amount + adminRoyality;\r\n    console.log(\"tokenAmmount:: \", tokenAmmount);\r\n\r\n\r\n\r\n    // Transfer amount (royalty fee + Asset amount) from connected wallet's address to admin\r\n    try {\r\n      const Nami = await Loader.Cardano();\r\n\r\n      // ***\r\n      // Check wallet balance\r\n      // Royalty + Amount Transaction\r\n      // ***\r\n\r\n      const walletBalance = localStorage.getItem(\"lovelaces\") ? localStorage.getItem(\"lovelaces\") : 0;\r\n      if (walletBalance && Number(walletBalance) / 1000000 > Number(tokenAmmount)) {\r\n        const txHash = await Nami.send({\r\n          address: this.adminNamiWalletAddress, // ADMIN ADDRESS\r\n          amount: tokenAmmount\r\n        })\r\n        if (!txHash) {\r\n          this.toastr.error(\"Unable to pay asset amount to mint\");\r\n        } else {\r\n\r\n          console.log(\"txHash :: \", txHash)\r\n          // Mint NFT against admin address(server address) then transfer to user's wallet\r\n          this.spinnerService.show();\r\n          const receiver = localStorage.getItem('walletAddr') ? localStorage.getItem('walletAddr') : null;\r\n          const data = {\r\n            nftId: this.mintNftObj._id,\r\n            receiverAddr: receiver\r\n          }\r\n\r\n          this.APIServices.mintNft(data)\r\n            .then((res: { status: any; msg: any; }) => {\r\n              this.spinnerService.hide();\r\n\r\n              if (res.status) {\r\n                this.toastr.success(res.msg);\r\n              } else {\r\n                this.toastr.error(res.msg);\r\n              }\r\n            })\r\n            .catch((err: any) => {\r\n              this.spinnerService.hide();\r\n              this.toastr.error(\"Something went wrong\");\r\n              console.log(\"Error is: \", err);\r\n            });\r\n        }\r\n\r\n      } else {\r\n        this.toastr.error(\"Insufficient balance\");\r\n      }\r\n\r\n    } catch (error) {\r\n      console.log(\"Error :: \", error);\r\n      // this.toastr.error(\"Something went wrong\");\r\n    }\r\n  }\r\n\r\n  clickBuy = async () => {\r\n    // this.showsell = true;\r\n    // this.mintHide = false;\r\n    console.log(this.adminNamiWalletAddress, \"data is: \", this.mintNftObj);\r\n\r\n    // Calculate 12% royalty for admin\r\n    const adminRoyality = await this.calcAdminRoyality(Number(this.mintNftObj.amount), this.ADMIN_ROYALITY); // func(250, 20) mean, 20 percent of 250\r\n    console.log(\"adminRoyality :: \", (parseFloat(adminRoyality.toString()).toFixed(6)));\r\n\r\n    const tokenAmmount = this.mintNftObj.amount // + adminRoyality;\r\n    console.log(\"tokenAmmount:: \", tokenAmmount);\r\n\r\n\r\n\r\n    // Transfer amount (royalty fee + Asset amount) from connected wallet's address to admin\r\n    try {\r\n      const Nami = await Loader.Cardano();\r\n\r\n      // ***\r\n      // Check wallet balance\r\n      // Royalty + Amount Transaction\r\n      // ***\r\n\r\n      const walletBalance = localStorage.getItem(\"lovelaces\") ? localStorage.getItem(\"lovelaces\") : 0;\r\n      if (walletBalance && Number(walletBalance) / 1000000 > Number(tokenAmmount)) {\r\n\r\n        const nftOwnerAddress = this.mintNftObj.ownerAddr;\r\n        // const connectedUserWalletAddress = localStorage.getItem('walletAddr') ? localStorage.getItem('walletAddr') : null;\r\n\r\n        const txHash = await Nami.sendMultiple({\r\n          recipients: [\r\n            {\r\n              address: this.adminNamiWalletAddress,\r\n              amount: adminRoyality\r\n            },\r\n            {\r\n              address: nftOwnerAddress,\r\n              amount: tokenAmmount\r\n            }\r\n          ]\r\n        })\r\n        // const txHash = await Nami.send({\r\n        //   address: this.adminNamiWalletAddress, // ADMIN ADDRESS\r\n        //   amount: adminRoyality\r\n        // })\r\n        if (!txHash) {\r\n          this.toastr.error(\"Unable to pay asset amount to transfer\");\r\n        } else {\r\n\r\n          // console.log(\"txHash :: \", txHash)\r\n          // Mint NFT against admin address(server address) then transfer to user's wallet\r\n          this.spinnerService.show();\r\n\r\n          const data = {\r\n            userNftId: this.mintNftObj.userNftId,\r\n            receiverAddr: this.mintNftObj.ownerAddr // receiver\r\n          }\r\n\r\n          this.APIServices.buyNft(data)\r\n            .then((res:any) => {\r\n              this.spinnerService.hide();\r\n\r\n              if (res.status) {\r\n                this.toastr.success(res.msg);\r\n              } else {\r\n                this.toastr.error(res.msg);\r\n              }\r\n            })\r\n            .catch((err:any) => {\r\n              this.spinnerService.hide();\r\n              this.toastr.error(\"Something went wrong\");\r\n              console.log(\"Error is: \", err);\r\n            });\r\n        }\r\n\r\n      } else {\r\n        this.toastr.error(\"Insufficient balance\");\r\n      }\r\n\r\n    } catch (error) {\r\n      console.log(\"Error :: \", error);\r\n      // this.toastr.error(\"Something went wrong\");\r\n    }\r\n  }\r\n\r\n  handleMintNft(obj: any, action: any) {\r\n    // obj[\"owned_by\"] = \"ADMIN\";\r\n    console.log('handleMintNft ', obj);\r\n    this.action = action;\r\n    this.mintNftObj = obj;\r\n  }\r\n  resetMintNftObj() {\r\n    this.mintNftObj = {\r\n      _id: 'N/A',\r\n      assetName: 'N/A',\r\n      amount: 'N/A',\r\n      availableForSale: false,\r\n      owned_by: 'N/A',\r\n      quantity: 'N/A',\r\n      userNftId: 'N/A',\r\n      ownerAddr: 'ADMIN'\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport * as RefundSponsor from '../../abis/liquidity/RefundSponsor.json';\r\nimport { SpinnerService } from '../helper/spinner/spinner.service';\r\nimport { RefundHistoryData } from '../models/refund-history-data';\r\nimport { ContractService } from './contract.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class RefundContractService {\r\n\r\n    private claimGasFeeRefundUpdate = new BehaviorSubject<boolean>(false);\r\n    isClaimGasFeeRefundUpdated = this.claimGasFeeRefundUpdate.asObservable();\r\n\r\n    constructor(private contractService: ContractService,\r\n                private toastr: ToastrService,\r\n                private spinnerService: SpinnerService) { }\r\n\r\n    async getRefundHistoryData() {\r\n        try {\r\n            const refundSponsorContract = await this.contractService.getContractObject(RefundSponsor);\r\n            if (refundSponsorContract) {\r\n                // let sponsoredAmount = await refundSponsorContract.methods.sponsoredAmount(refundSponsorContract._address).call();\r\n                const sponsoredAmount = await this.contractService.getAccountBalance(refundSponsorContract._address);\r\n                let myRefundAmount = await refundSponsorContract.methods.myRefundAmount().call({ from: this.contractService.accountNo });\r\n\r\n                myRefundAmount = this.contractService.convertAmountInBigUnit(myRefundAmount);\r\n\r\n                const griseReservationData: RefundHistoryData = {\r\n                    sponsoredAmount,\r\n                    myRefundAmount\r\n                };\r\n                return griseReservationData;\r\n            }\r\n        } catch (ex) { }\r\n        return null;\r\n    }\r\n\r\n    async claimGasFeeRefund() {\r\n        try {\r\n            const refundSponsorContract = await this.contractService.getContractObject(RefundSponsor);\r\n            if (refundSponsorContract) {\r\n                this.spinnerService.show();\r\n                refundSponsorContract.methods.requestGasRefund()\r\n                    .send({ from: this.contractService.accountNo })\r\n                    .then((response: any) => {\r\n                        // console.log(\"transaction successful.\", response);\r\n                        this.claimGasFeeRefundUpdate.next(true);\r\n                        this.toastr.success('Transaction successful.');\r\n                        this.spinnerService.hide();\r\n                    })\r\n                    .catch((error: any) => {\r\n                        // console.log(\"error\", error);\r\n                        this.toastr.error('Transaction failed. Try again!');\r\n                        this.spinnerService.hide();\r\n                    });\r\n            }\r\n        } catch (ex) { }\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { PersonalReferralData } from 'src/app/models/personal-referral-data';\r\nimport { LiquidityContractService } from 'src/app/services/liquidity-contract.service';\r\n\r\n@Component({\r\n  selector: 'app-referrals',\r\n  templateUrl: './referrals.component.html',\r\n  styleUrls: ['./referrals.component.scss']\r\n})\r\nexport class ReferralsComponent implements OnInit {\r\n\r\n  personalReferralData: PersonalReferralData;\r\n\r\n  constructor(private liquidityContractService: LiquidityContractService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.liquidityContractService.getPersonalReferralData().then(value => this.personalReferralData = value!);\r\n  }\r\n\r\n}\r\n","<div style=\"background-color: rgb(59, 65, 72);\">\r\n\r\n\r\n  <div class=\"personal header_div\">\r\n    <i class=\"fas fa-user-friends personal_icon header_icon\"></i>\r\n    <label class=\"personal_title header_title\">Personal Referrals</label>\r\n\r\n  </div>\r\n\r\n  <div class=\"sub-end-part\">\r\n    \r\n    <div>\r\n\r\n\r\n      <div class=\"row maintab\">\r\n        <div class=\"col-xl-6 col-md-12 col-xs-12 tab\">\r\n          <span style=\"padding-left:10%\">\r\n            <h1 style=\"color: white\" class=\"h1_span\">\r\n              Referral Amount :\r\n              {{personalReferralData?.referralAmount | number:'1.0-5'}} BNB\r\n              <!-- {{accountNo}} -->\r\n            </h1>\r\n          </span>\r\n        </div>\r\n\r\n\r\n\r\n        <div class=\"extra_spc\" style=\"display: none;\"></div>\r\n\r\n        <div class=\"col-xl-6 col-md-12 col-xs-12 tab\">\r\n          <span style=\"padding-left:10%\">\r\n            <h1 style=\"color: white\" class=\"h1_span\">\r\n              Rewards  \r\n              <span class=\"tooltip-question\" mat-raised-button #tooltip=\"matTooltip\"\r\n                      matTooltip=\"Reward will be calculated after liquidity event.\"\r\n                      matTooltipPosition=\"below\"><i class=\"fas fa-question-circle\" style=\"font-size: 16px;\"></i></span> \r\n              \r\n              :\r\n              {{personalReferralData?.referralTokens | number:'1.0-2'}} Grise\r\n            </h1>\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n\r\n     \r\n    </div>\r\n\r\n  </div>","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";","import { LocalDataUpdateService } from './local-data-update.service';\r\nimport { Injectable } from '@angular/core';\r\nimport * as moment from 'moment';\r\nimport { PersonalPeriodStakeSetup } from '../models/personal-period-stake-setup';\r\nimport { SlotData } from '../models/slot-data';\r\nimport { SlotType } from './../models/slot-data';\r\nimport { GriseTokenContractService } from './grise-token-contract.service';\r\nimport { LiquidityContractService } from './liquidity-contract.service';\r\nimport { StakingTokenContractService } from './staking-token-contract.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class SharedService {\r\n    // startTimeJS = new Date('Mar 12, 2021 08:00:00').getTime();\r\n    launchTime = 0;\r\n    startTime = 0;\r\n    endTime = 0;\r\n    allSlots: SlotData[];\r\n    intervalId: any;\r\n    allPersonalPeriodStakes: PersonalPeriodStakeSetup[];\r\n\r\n    constructor(private liquidityContractService: LiquidityContractService,\r\n        private stakingTokenContractService: StakingTokenContractService,\r\n        private griseTokenContractService: GriseTokenContractService,\r\n        private localDataUpdateService: LocalDataUpdateService) {\r\n        this.getLaunchTime();\r\n    }\r\n\r\n    getLaunchTime() {\r\n        this.griseTokenContractService.getLaunchTime().then(launchTimeData => {\r\n            if (launchTimeData) {\r\n                this.launchTime = launchTimeData.launchTime;\r\n                this.startTime = launchTimeData.lpLaunchTime;\r\n                //this.startTime = (launchTimeData.launchTime) + (1000 * 60 * 60 * this.localDataUpdateService.slotMaxHours);\r\n                this.endTime = this.startTime + ((1000 * 60 * 60 * this.localDataUpdateService.slotMaxHours) * this.localDataUpdateService.totalSlots);\r\n                this.localDataUpdateService.forceInitSlotsReservationData(true);\r\n            }\r\n        });\r\n    }\r\n\r\n    getTimeLeft(toTime?: number): string {\r\n        if (!toTime) {\r\n            return '';\r\n        }\r\n\r\n        const now = new Date().getTime();\r\n        const distance = toTime - now;\r\n        if (distance <= 0) {\r\n            return 'EXPIRED';\r\n        }\r\n\r\n        const days = Math.floor(distance / (1000 * 60 * 60 * 24));\r\n        const hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n        const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\r\n        const seconds = Math.floor((distance % (1000 * 60)) / 1000);\r\n\r\n        return days + 'd ' + hours + 'h ' + minutes + 'm ' + seconds + 's';\r\n    }\r\n\r\n    getCurrentTimeProgess(fromTime?: number, toTime?: number): number {\r\n        if (!fromTime || !toTime) {\r\n            return 0;\r\n        }\r\n        const now = new Date().getTime();\r\n        const distanceFrom = now - fromTime;\r\n        if (distanceFrom <= 0) {\r\n            return 0;\r\n        }\r\n\r\n        if (toTime - now <= 0) {\r\n            return 100;\r\n        }\r\n\r\n        return Math.round(distanceFrom / (toTime - fromTime) * 100);\r\n    }\r\n\r\n    initSlots() {\r\n        const startdate = new Date(this.startTime);\r\n\r\n        this.allSlots = [];\r\n        this.allSlots = [\r\n            { id: 1, name: '6000', type: SlotType.Fixed, color: '#6610f2', isSelected: false, isExpired: false , nftImg:\"../../../assets/mythic/mythic.png\", nftDetail:\"2 Mythic NFT'S will be given away, Among which 1 will be given to the highest contributor and 1 will be give away to a random address. \"},\r\n            { id: 2, name: '6000', type: SlotType.Fixed, color: '#6610f2', isSelected: false, isExpired: false , nftImg:\"../../../assets/legend/l1.png\", nftDetail:\"4 Legendary NFT'S will be given away, Among which 2 will be given to the highest contributors and 2 will be given away to 2 random addresses. \"},\r\n            { id: 3, name: '6000', type: SlotType.Fixed, color: '#6610f2', isSelected: false, isExpired: false , nftImg:\"../../../assets/legend/l2.png\", nftDetail:\"4 Legendary NFT'S  will be given away, Among which 2 will be given to the highest contributors and 2 will be given away to 2 random addresses. \"},\r\n            { id: 4, name: '6000', type: SlotType.Fixed, color: '#6610f2', isSelected: false, isExpired: false , nftImg:\"../../../assets/rare/r1.png\", nftDetail:\"8 Rares NFT'S will be given away, Among which 4 will be given to the top 4 contributors and 4 will be given away to 4 random addresses.\"},\r\n            { id: 5, name: '6000', type: SlotType.Fixed, color: '#6610f2', isSelected: false, isExpired: false , nftImg:\"../../../assets/common/c1.png\", nftDetail:\"16 common NFT'S will be given away, Among which 8 will be given to the top 8 contributors and 8 will be given away to 8 random addresse.\"},\r\n            { id: 6, name: '6000', type: SlotType.Fixed, color: '#6610f2', isSelected: false, isExpired: false , nftImg:\"../../../assets/common/c2.png\", nftDetail:\"16 common NFT'S will be given away, Among which 8 will be given to the top 8 contributors and 8 will be given away to 8 random addresses\"},\r\n            { id: 7, name: '6000', type: SlotType.Fixed, color: '#6610f2', isSelected: false, isExpired: false , nftImg:\"../../../assets/common/c3.png\", nftDetail:\"16 common NFT'S will be given away, Among which 8 will be given to the top 8 contributors and 8 will be given away to 8 random addresses\"},\r\n            { id: 8, name: '6000', type: SlotType.Fixed, color: '#6610f2', isSelected: false, isExpired: false , nftImg:\"../../../assets/common/c4.png\", nftDetail:\"16 common NFT'S will be given away, Among which 8 will be given to the top 8 contributors and 8 will be given away to 8 random addresses.\"},\r\n            { id: 9, name: '6000', type: SlotType.Fixed, color: '#6610f2', isSelected: false, isExpired: false , nftImg:\"../../../assets/common/c5.png\", nftDetail:\"16 common NFT'S will be given away, Among which 8 will be given to the top 8 contributors and 8 will be given away to 8 random addresses\"},\r\n            { id: 10, name: '6000', type: SlotType.Fixed, color: '#6610f2', isSelected: false, isExpired: false , nftImg:\"../../../assets/rare/r2.png\", nftDetail:\"8 Rares NFT'S will be given away, Among which 4 will be given to the top 4 contributors and 4 will be given away to 4 random addresses\"},\r\n            { id: 11, name: '6000', type: SlotType.Fixed, color: '#6610f2', isSelected: false, isExpired: false , nftImg:\"../../../assets/rare/r3.png\", nftDetail:\"8 Rares NFT'S will be given away, Among which 4 will be given to the top 4 contributors and 4 will be given away to 4 random addresses\"},\r\n            { id: 12, name: '6000', type: SlotType.Fixed, color: '#6610f2', isSelected: false, isExpired: false , nftImg:\"../../../assets/rare/r4.png\", nftDetail:\"8 Rares NFT'S will be given away, Among which 4 will be given to the top 4 contributors and 4 will be given away to 4 random addresses\"},\r\n            { id: 13, name: '6000', type: SlotType.Fixed, color: '#6610f2', isSelected: false, isExpired: false , nftImg:\"../../../assets/rare/r5.png\", nftDetail:\"16 Rares NFT'S will be given away, Among which 8 will be given to the top 8 contributors and 8 will be given away to 8 random addresses\"},\r\n            { id: 14, name: '6000', type: SlotType.Fixed, color: '#6610f2', isSelected: false, isExpired: false , nftImg:\"../../../assets/common/c6.png\", nftDetail:\"16 common NFT'S will be given away, Among which 8 will be given to the top 8 contributors and 8 will be given away to 8 random addresses\"},\r\n            { id: 15, name: '6000', type: SlotType.Fixed, color: '#6610f2', isSelected: false, isExpired: false , nftImg:\"../../../assets/legend/l3.png\", nftDetail:\"4 Legendary NFT'S will be given away, Among which 2 will be given to the top 2 contributors and 2 will be given away to 2 random addresse\"},\r\n            { id: 16, name: '6000', type: SlotType.Fixed, color: '#6610f2', isSelected: false, isExpired: false , nftImg:\"../../../assets/legend/l4.png\", nftDetail:\"4 Legendary NFT'S will be given away, Among which 2 will be given to the top 2 contributors and 2 will be given away to 2 random addresses\"},\r\n            { id: 17, name: '6000', type: SlotType.Fixed, color: '#6610f2', isSelected: false, isExpired: false , nftImg:\"../../../assets/common/c7.png\", nftDetail:\"16 common NFT'S will be given away, Among which 8 will be given to the top 8 contributors and 8 will be given away to 8 random addresses. \"},\r\n            { id: 18, name: '6000', type: SlotType.Fixed, color: '#6610f2', isSelected: false, isExpired: false , nftImg:\"../../../assets/common/c8.png\", nftDetail:\"16 common NFT'S will be given away, Among which 8 will be given to the top 8 contributors and 8 will be given away to 8 random addresses\"},\r\n            { id: 19, name: '6000', type: SlotType.Fixed, color: '#6610f2', isSelected: false, isExpired: false , nftImg:\"../../../assets/common/c1.png\", nftDetail:\"16 common NFT'S will be given away, Among which 8 will be given to the top 8 contributors and 8 will be given away to 8 random addresses\"},\r\n            { id: 20, name: '6000', type: SlotType.Fixed, color: '#6610f2', isSelected: false, isExpired: false , nftImg:\"../../../assets/common/c2.png\", nftDetail:\"16 common NFT'S will be given away, Among which 8 will be given to the top 8 contributors and 8 will be given away to 8 random addresses. \"},\r\n            { id: 21, name: '6000', type: SlotType.Fixed, color: '#6610f2', isSelected: false, isExpired: false , nftImg:\"../../../assets/rare/r6.png\", nftDetail:\"8 Rares NFT'S will be given away, Among which 4 will be given to the top 4 contributors and 4 will be given away to 4 random addresses\"},\r\n            { id: 22, name: '6000', type: SlotType.Fixed, color: '#6610f2', isSelected: false, isExpired: false , nftImg:\"../../../assets/rare/r1.png\", nftDetail:\"8 Rares NFT'S will be given away, Among which 4 will be given to the top 4 contributors and 4 will be given away to 4 random addresses\"},\r\n            { id: 23, name: '6000', type: SlotType.Fixed, color: '#6610f2', isSelected: false, isExpired: false , nftImg:\"../../../assets/rare/r2.png\", nftDetail:\"8 Rares NFT'S will be given away, Among which 4 will be given to the top 4 contributors and 4 will be given away to 4 random addresses\"},\r\n            { id: 25, name: '6000', type: SlotType.Fixed, color: '#6610f2', isSelected: false, isExpired: false , nftImg:\"../../../assets/mythic/mythic.png\", nftDetail:\"2 Mythic NFT'S will be given away, Among which 1 will be given to the highest contributor and 1 will be give away to a random address.\"},\r\n            { id: 24, name: '6000', type: SlotType.Fixed, color: '#6610f2', isSelected: false, isExpired: false , nftImg:\"../../../assets/legend/l1.png\", nftDetail:\"4 Legendary NFT'S will be given away, Among which 2 will be given to the top 2 contributors and 2 will be given away to 2 random addresses. \"},\r\n            { id: 26, name: '6000', type: SlotType.Fixed, color: '#6610f2', isSelected: false, isExpired: false , nftImg:\"../../../assets/legend/l2.png\", nftDetail:\"4 Legendary NFT'S will be given away, Among which 2 will be given to the top 2 contributors and 2 will be given away to 2 random addresse\"},\r\n            { id: 27, name: '6000', type: SlotType.Fixed, color: '#6610f2', isSelected: false, isExpired: false , nftImg:\"../../../assets/common/c3.png\", nftDetail:\"16 common NFT'S will be given away, Among which 8 will be given to the top 8 contributors and 8 will be given away to 8 random addresse\"},\r\n            { id: 28, name: '6000', type: SlotType.Fixed, color: '#6610f2', isSelected: false, isExpired: false , nftImg:\"../../../assets/common/c4.png\", nftDetail:\"16 common NFT'S will be given away, Among which 8 will be given to the top 8 contributors and 8 will be given away to 8 random addresse\"},\r\n            { id: 29, name: '6000', type: SlotType.Fixed, color: '#6610f2', isSelected: false, isExpired: false , nftImg:\"../../../assets/common/c5.png\", nftDetail:\"16 common NFT'S will be given away, Among which 8 will be given to the top 8 contributors and 8 will be given away to 8 random addresses\"},\r\n            { id: 30, name: '6000', type: SlotType.Fixed, color: '#6610f2', isSelected: false, isExpired: false , nftImg:\"../../../assets/common/c6.png\", nftDetail:\"16 common NFT'S will be given away, Among which 8 will be given to the top 8 contributors and 8 will be given away to 8 random addresses\"},\r\n            { id: 31, name: '6000', type: SlotType.Fixed, color: '#6610f2', isSelected: false, isExpired: false , nftImg:\"../../../assets/rare/r3.png\", nftDetail:\"8 Rares NFT'S will be given away, Among which 4 will be given to the top 4 contributors and 4 will be given away to 4 random addresses. \"},\r\n            { id: 32, name: '6000', type: SlotType.Fixed, color: '#6610f2', isSelected: false, isExpired: false , nftImg:\"../../../assets/rare/r4.png\", nftDetail:\"8 Rares NFT'S will be given away, Among which 4 will be given to the top 4 contributors and 4 will be given away to 4 random addresses\"},\r\n            { id: 33, name: '6000', type: SlotType.Fixed, color: '#6610f2', isSelected: false, isExpired: false , nftImg:\"../../../assets/rare/r5.png\", nftDetail:\"8 Rares NFT'S will be given away, Among which 4 will be given to the top 4 contributors and 4 will be given away to 4 random addresses\"},\r\n            { id: 34, name: '6000', type: SlotType.Fixed, color: '#6610f2', isSelected: false, isExpired: false , nftImg:\"../../../assets/rare/r6.png\", nftDetail:\"8 Rares NFT'S will be given away, Among which 4 will be given to the top 4 contributors and 4 will be given away to 4 random addresses\"},\r\n            { id: 35, name: '6000', type: SlotType.Fixed, color: '#6610f2', isSelected: false, isExpired: false , nftImg:\"../../../assets/legend/l3.png\", nftDetail:\"4 Legendary NFT'S will be given away, Among which 2 will be given to the top 2 contributors and 2 will be given away to 2 random addresses\"},\r\n            { id: 36, name: '6000', type: SlotType.Fixed, color: '#6610f2', isSelected: false, isExpired: false , nftImg:\"../../../assets/legend/l4.png\", nftDetail:\"4 Legendary NFT'S will be given away, Among which 2 will be given to the top 2 contributors and 2 will be given away to 2 random addresses. \"},\r\n            { id: 37, name: '6000', type: SlotType.Fixed, color: '#6610f2', isSelected: false, isExpired: false , nftImg:\"../../../assets/common/c7.png\", nftDetail:\"16 common NFT'S will be given away, Among which 8 will be given to the top 8 contributors and 8 will be given away to 8 random addresses\"},\r\n            { id: 38, name: '6000', type: SlotType.Fixed, color: '#6610f2', isSelected: false, isExpired: false , nftImg:\"../../../assets/common/c8.png\", nftDetail:\"16 common NFT'S will be given away, Among which 8 will be given to the top 8 contributors and 8 will be given away to 8 random addresses\"},\r\n            { id: 39, name: '6000', type: SlotType.Fixed, color: '#6610f2', isSelected: false, isExpired: false , nftImg:\"../../../assets/common/c1.png\", nftDetail:\"16 common NFT'S will be given away, Among which 8 will be given to the top 8 contributors and 8 will be given away to 8 random addresses\"},\r\n            { id: 40, name: '6000', type: SlotType.Fixed, color: '#6610f2', isSelected: false, isExpired: false , nftImg:\"../../../assets/common/c2.png\", nftDetail:\"16 common NFT'S will be given away, Among which 8 will be given to the top 8 contributors and 8 will be given away to 8 random addresses\"},\r\n            { id: 41, name: '6000', type: SlotType.Fixed, color: '#6610f2', isSelected: false, isExpired: false , nftImg:\"../../../assets/common/c3.png\", nftDetail:\"16 common NFT'S will be given away, Among which 8 will be given to the top 8 contributors and 8 will be given away to 8 random addresses.\"},\r\n            { id: 42, name: '6000', type: SlotType.Fixed, color: '#6610f2', isSelected: false, isExpired: false , nftImg:\"../../../assets/common/c4.png\", nftDetail:\"16 common NFT'S will be given away, Among which 8 will be given to the top 8 contributors and 8 will be given away to 8 random addresses\"},\r\n            { id: 43, name: '6000', type: SlotType.Fixed, color: '#6610f2', isSelected: false, isExpired: false , nftImg:\"../../../assets/common/c5.png\", nftDetail:\"16 common NFT'S will be given away, Among which 8 will be given to the top 8 contributors and 8 will be given away to 8 random addresses\"},\r\n            { id: 44, name: '6000', type: SlotType.Fixed, color: '#6610f2', isSelected: false, isExpired: false , nftImg:\"../../../assets/common/c6.png\", nftDetail:\"16 common NFT'S will be given away, Among which 8 will be given to the top 8 contributors and 8 will be given away to 8 random addresses. \"},\r\n            { id: 45, name: '6000', type: SlotType.Fixed, color: '#6610f2', isSelected: false, isExpired: false , nftImg:\"../../../assets/rare/r1.png\", nftDetail:\"8 Rares NFT'S will be given away, Among which 4 will be given to the top 4 contributors and 4 will be given away to 4 random addresses\"},\r\n            { id: 46, name: '6000', type: SlotType.Fixed, color: '#6610f2', isSelected: false, isExpired: false , nftImg:\"../../../assets/rare/r2.png\", nftDetail:\"8 Rares NFT'S will be given away, Among which 4 will be given to the top 4 contributors and 4 will be given away to 4 random addresses\"},\r\n            { id: 47, name: '6000', type: SlotType.Fixed, color: '#6610f2', isSelected: false, isExpired: false , nftImg:\"../../../assets/rare/r3.png\", nftDetail:\"8 Rares NFT'S will be given away, Among which 4 will be given to the top 4 contributors and 4 will be given away to 4 random addresses\"},\r\n            { id: 48, name: '6000', type: SlotType.Fixed, color: '#6610f2', isSelected: false, isExpired: false , nftImg:\"../../../assets/legend/l1.png\", nftDetail:\"4 Legendary NFT'S will be given away, Among which 2 will be given to the top 2 contributors and 2 will be given away to 2 random addresses\"},\r\n            { id: 49, name: '6000', type: SlotType.Fixed, color: '#6610f2', isSelected: false, isExpired: false , nftImg:\"../../../assets/legend/l2.png\", nftDetail:\"4 Legendary NFT'S will be given away, Among which 2 will be given to the top 2 contributors and 2 will be given away to 2 random addresses. \"},\r\n            { id: 50, name: '6000', type: SlotType.Fixed, color: '#6610f2', isSelected: false, isExpired: false , nftImg:\"../../../assets/mythic/mythic.png\", nftDetail: \"2 Mythic NFT'S will be given away, Among which 1 will be given to the highest contributor and 1 will be give away to a random address. \"}\r\n        ];\r\n\r\n        let start = moment(startdate);\r\n        start = start.add(start.hours() * -1, 'hours');\r\n        this.allSlots.forEach(slot => {\r\n            const slotStartDate = new Date(this.startTime + ((1000 * 60 * 60 * this.localDataUpdateService.slotMaxHours) * (slot.id - 1)));\r\n            const slotEndDate = new Date(this.startTime + ((1000 * 60 * 60 * this.localDataUpdateService.slotMaxHours) * (slot.id)));\r\n\r\n            let end = moment(slotStartDate);\r\n            end = end.add(end.hours() * -1, 'hours');\r\n            const diffDays = end.diff(start, 'days') + 1;\r\n\r\n            slot.day = diffDays;\r\n            slot.startDate = slotStartDate;\r\n            slot.endDate = slotEndDate;\r\n            slot.hours = this.localDataUpdateService.slotMaxHours;\r\n            // slot.option = ' #46494f';\r\n            slot.progressDone = 0;\r\n        });\r\n    }\r\n\r\n    updateSlotsTimer() {\r\n        this.intervalId = setInterval(() => {\r\n            this.allSlots.forEach(slot => {\r\n                if (slot.timeLeft != 'EXPIRED' && !slot.isExpired) {\r\n                    slot.timeLeft = this.getTimeLeft(slot.endDate?.getTime());\r\n                    slot.progressDone = this.getCurrentTimeProgess(slot.startDate?.getTime(), slot.endDate?.getTime());\r\n                }\r\n                if (slot.timeLeft == 'EXPIRED') {\r\n                    slot.isExpired = true;\r\n                }\r\n                if (slot.id == this.localDataUpdateService.totalSlots && slot.isExpired) {\r\n                    clearInterval(this.intervalId);\r\n                }\r\n            });\r\n        }, 1000);\r\n    }\r\n\r\n    stopSlotsTimer() {\r\n        clearInterval(this.intervalId);\r\n    }\r\n\r\n    updateSlotsReservation() {\r\n        this.allSlots.forEach(slot => {\r\n            this.liquidityContractService.getGriseReservationData(slot.id).then(griseReservationData => {\r\n                if (griseReservationData) {\r\n                    slot.slotLeft = this.localDataUpdateService.maxSlotsPerSlot - griseReservationData.slotsUsed;\r\n                    slot.totalInvest = griseReservationData.totalInvestment;\r\n                    slot.myContribution = griseReservationData.myContribution;\r\n                    // slot.mySharePercent = (slot.myContribution == 0) ? 0 : (slot.myContribution / slot.totalInvest) * 100;\r\n                    slot.mySharePercent = (slot.myContribution == 0) ? \"0 %\" : (griseReservationData.myShare == 0) ? ((slot.myContribution / slot.totalInvest) * 100).toFixed(2).concat(\" %\") : (griseReservationData.myShare).toFixed(2).concat(\" GRISE\");\r\n                }\r\n            });\r\n        });\r\n\r\n        this.liquidityContractService.getSupplyOnAllDays().then(allDaysdata => {\r\n            if (allDaysdata) {\r\n                allDaysdata.forEach((allDaydata, index) => {\r\n                    if (allDaydata > 0) {\r\n                        this.allSlots[index - 1].name = allDaydata.toString();\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    deselectAllSlots() {\r\n        this.allSlots.forEach(slot => {\r\n            slot.isSelected = false;\r\n        });\r\n    }\r\n\r\n    initPersonalPeriodStakes() {\r\n        this.allPersonalPeriodStakes = [\r\n            { periodType: 'W', additionalValue: '', stakeStep: 50, slotLeft: 0 },\r\n            { periodType: 'M', additionalValue: '3', stakeStep: 225, slotLeft: 0 },\r\n            { periodType: 'M', additionalValue: '6', stakeStep: 100, slotLeft: 0 },\r\n            { periodType: 'M', additionalValue: '9', stakeStep: 150, slotLeft: 0 },\r\n            { periodType: 'Y', additionalValue: '', stakeStep: 100, slotLeft: 0 }\r\n        ];\r\n    }\r\n\r\n    updatePersonalPeriodStakeSlotLeft() {\r\n        this.stakingTokenContractService.getStakeSlotsLeftData().then(slotLefts => {\r\n            if (slotLefts) {\r\n                this.allPersonalPeriodStakes.forEach(stakes => {\r\n                    switch (stakes.periodType + stakes.additionalValue) {\r\n                        case 'W': { stakes.slotLeft = slotLefts.stSlotLeft; break; }\r\n                        case 'M3': { stakes.slotLeft = slotLefts.mt3MonthSlotLeft; break; }\r\n                        case 'M6': { stakes.slotLeft = slotLefts.mt6MonthSlotLeft; break; }\r\n                        case 'M9': { stakes.slotLeft = slotLefts.mt9MonthSlotLeft; break; }\r\n                        case 'Y': { stakes.slotLeft = slotLefts.ltSlotLeft; break; }\r\n                    }\r\n                });\r\n                this.localDataUpdateService.forceUpdatePersonalPeriodStakeSlotLeftData(true);\r\n            }\r\n        });\r\n    }\r\n\r\n    getDateAdd(fromDt: number, days?: number): Date {\r\n        return moment(new Date(fromDt)).add(days, 'days').toDate();\r\n    }\r\n\r\n    getDateNumberDiff(fromDt: number, toDt: number): number {\r\n        return this.getDateDiff(new Date(fromDt), new Date(toDt));\r\n    }\r\n\r\n    getDateDiff(fromDt: Date, toDt: Date): number {\r\n        const fromDate = moment(fromDt);\r\n        const toDate = moment(toDt);\r\n        return toDate.diff(fromDate, 'days') + 1;\r\n    }\r\n\r\n    getDateWithoutTime(fromDt: Date): Date {\r\n        fromDt.setHours(0);\r\n        fromDt.setMinutes(0);\r\n        fromDt.setSeconds(0);\r\n        fromDt.setMilliseconds(0);\r\n        return fromDt;\r\n    }\r\n}\r\n"]}